
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет параметры отражения движений регистра в финансовом учете
//
// Параметры:
//  МетаданныеРегистра - ОбъектМетаданныхРегистрНакопления - Метаданные регистра накопления
//  РегистрацияКОтражению - Булево - Признак получения параметров для регистрации к отражению в учете
//
// Возвращаемое значение:
// 	см. ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете
//
Функция ПараметрыОтраженияДвиженийВФинансовомУчете(МетаданныеРегистра = Неопределено, РегистрацияКОтражению = Ложь) Экспорт
	
	ПараметрыОтражения = ФинансовыйУчетПоДаннымБалансовыхРегистров.ПараметрыОтраженияДвиженийВФинансовомУчете(РегистрацияКОтражению);
	
	Если РегистрацияКОтражению Тогда
		Возврат ПараметрыОтражения;
	КонецЕсли;
	
	ПараметрыОтражения.ПутьКДаннымОбъектНастройки = СтрЗаменить(
		"ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ПсевдонимИсточникаДанных.ОбъектРасчетов) = ТИП(Справочник.ОбъектыРасчетов)
		|		И ПсевдонимИсточникаДанных.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(ПсевдонимИсточникаДанных.ОбъектРасчетов КАК Справочник.ОбъектыРасчетов).ГруппаФинансовогоУчета
	
	//++ НЕ УТ
	
		|		КОГДА ТИПЗНАЧЕНИЯ(ПсевдонимИсточникаДанных.ОбъектРасчетов) = ТИП(Справочник.ДоговорыАренды)
		|		И ПсевдонимИсточникаДанных.ОбъектРасчетов <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
		|			ТОГДА ВЫРАЗИТЬ(ПсевдонимИсточникаДанных.ОбъектРасчетов КАК Справочник.ДоговорыАренды).ГруппаФинансовогоУчета
	
	//-- НЕ УТ
	
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ",
		"ПсевдонимИсточникаДанных",
		ПараметрыОтражения.ПсевдонимИсточникаДанных);
	ПараметрыОтражения.ПутьКДаннымМестоУчета = "Подразделение";
	ПараметрыОтражения.ПутьКДаннымНаправлениеДеятельности = "НаправлениеДеятельности";
	ПараметрыОтражения.ПутьКДаннымПодразделение = "Подразделение";
	ПараметрыОтражения.РесурсыУпр.Добавить("НДСУпр");
	ПараметрыОтражения.РесурсыРегл.Добавить("НДС");
	
	//++ НЕ УТ
	
	ПараметрыОтражения.ЭтоРегистрУчетаНДС = Истина;
	ПараметрыОтражения.ТипДанныхУчета = Перечисления.ТипыДанныхУчета.НДС;
	ПараметрыОтражения.СтруктураАналитики = ОбщегоНазначения.СкопироватьРекурсивно(ИсточникиДанныхПовтИсп.СтруктураАналитикиПоТипуДанныхУчета(ПараметрыОтражения.ТипДанныхУчета));
	ПараметрыОтражения.СтруктураАналитики.СчетФактура.ПутьКДанным = "ДокументОплаты";
	ПараметрыОтражения.СтруктураАналитики.ВидЦенности.Вставить("Значение", Перечисления.ВидыЦенностей.АвансыВыданные);
	
	//-- НЕ УТ
	
	Если МетаданныеРегистра = Неопределено Тогда
		МетаданныеРегистра = СоздатьНаборЗаписей().Метаданные();
	КонецЕсли;
	
	ФинансовыйУчетПоДаннымБалансовыхРегистров.ЗаполнитьПараметрыОтраженияПоМетаданнымРегистра(ПараметрыОтражения, МетаданныеРегистра);
	
	Возврат ПараметрыОтражения;
	
КонецФункции


//++ НЕ УТ

// Определяет показатели регистра.
// Подробнее см. МеждународныйУчетСерверПовтИсп.Показатели
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "НДСУпр", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "НДС", "ВалютаРегл"));
	
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаНДС, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

//-- НЕ УТ

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.НДСАвансыВыданные.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийНДСАвансыВыданные"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли
