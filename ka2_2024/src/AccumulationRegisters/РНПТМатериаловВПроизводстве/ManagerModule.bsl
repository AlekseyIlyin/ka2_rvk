#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение

// Получить изделия к оформлению номеров ГТД в фоне.
// 
// Параметры:
//  Параметры - Структура - параметры выполнения процедуры
//  АдресРезультата - Строка - адрес результата
//
Процедура ИзделияКОформлениюНомеровГТДВФоне(Параметры, АдресРезультата) Экспорт
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.МодульМенеджера.ИзделияКОформлениюНомеровГТДВФоне");
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ИзделияКОформлениюНомеровГТД(Параметры));
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, Результат.Товары.Количество());
	
КонецПроцедуры

// Изделия к оформлению номеров ГТД.
// 
// Параметры:
//  Параметры - Структура - параметры получения остатков
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Изделия к оформлению номеров ГТД:
//   * Организация - СправочникСсылка.Организации
//   * МестоХранения - СправочникСсылка.Склады, СправочникСсылка.СтруктураПредприятия - место хранения
//   * Номенклатура - СправочникСсылка.Номенклатура
//   * ТипНоменклатуры - ПеречислениеСсылка.ТипыНоменклатуры
//   * ХарактеристикиИспользуются - Булево
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
//   * Серия - СправочникСсылка.СерииНоменклатуры
//   * СтатусУказанияСерий - Число
//   * Назначение - СправочникСсылка.Назначения
//   * Количество - Число
//   * КоличествоПоРНПТ - Число
//
Функция ИзделияКОформлениюНомеровГТД(Параметры) Экспорт
	
	ПараметрыОстатков = Параметры.ПараметрыОстатков;
	
	Запрос = Новый Запрос;
	
	Для Каждого ТекущийОтбор Из ПараметрыОстатков.ЗначенияПараметровОтбора Цикл
		Запрос.УстановитьПараметр(ТекущийОтбор.Ключ, ТекущийОтбор.Значение);
	КонецЦикла;
	
	ТекстыЗапроса = Новый Массив;
	
	Если Не ПараметрыОстатков.ОтборПоТоварам = Неопределено Тогда
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ОтборПоТоварам.Организация    КАК Организация,
		|	ОтборПоТоварам.МестоХранения  КАК МестоХранения,
		|	ОтборПоТоварам.Номенклатура   КАК Номенклатура,
		|	ОтборПоТоварам.Характеристика КАК Характеристика,
		|	ОтборПоТоварам.Серия          КАК Серия,
		|	ОтборПоТоварам.Назначение     КАК Назначение
		|ПОМЕСТИТЬ ОтборПоТоварамПредварительная
		|ИЗ
		|	&ОтборПоТоварам КАК ОтборПоТоварам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтборПоТоварам.Организация    КАК Организация,
		|	ОтборПоТоварам.МестоХранения  КАК МестоХранения,
		|	ОтборПоТоварам.Номенклатура   КАК Номенклатура,
		|	ОтборПоТоварам.Характеристика КАК Характеристика,
		|	ОтборПоТоварам.Серия          КАК Серия,
		|	ОтборПоТоварам.Назначение     КАК Назначение
		|ПОМЕСТИТЬ ОтборПоТоварам
		|ИЗ
		|	ОтборПоТоварамПредварительная КАК ОтборПоТоварам
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтборПоТоварам.Организация,
		|	ОтборПоТоварам.МестоХранения,
		|	ОтборПоТоварам.Номенклатура,
		|	ОтборПоТоварам.Характеристика,
		|	ОтборПоТоварам.Серия,
		|	ОтборПоТоварам.Назначение
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	МестоХранения,
		|	Номенклатура,
		|	Характеристика,
		|	Серия,
		|	Назначение
		|");
		
		Запрос.УстановитьПараметр("ОтборПоТоварам", ПараметрыОстатков.ОтборПоТоварам);
		
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваров.Организация                КАК Организация,
	|	ОстаткиТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ОстаткиТоваров.Количество)          КАК Количество,
	|	СУММА(ОстаткиТоваров.КоличествоПоРНПТ)    КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТОстаткиТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиТоваров.Организация                КАК Организация,
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ОстаткиТоваров.КоличествоОстаток          КАК Количество,
	|		ОстаткиТоваров.КоличествоПоРНПТОстаток    КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|			НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК ОстаткиТоваров
	|	ГДЕ
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОстаткиТоваров.Организация                КАК Организация,
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ОстаткиТоваров.КоличествоОстаток          КАК Количество,
	|		ОстаткиТоваров.КоличествоПоРНПТОстаток    КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(,
	|			НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК ОстаткиТоваров
	|	ГДЕ
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
	|	) КАК ОстаткиТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Организация,
	|	ОстаткиТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиТоваров.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваров.Организация       КАК Организация,
	|	КлючиАналитики.МестоХранения     КАК МестоХранения,
	|	КлючиАналитики.Номенклатура      КАК Номенклатура,
	|	СпрНоменклатура.ТипНоменклатуры  КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ИспользованиеХарактеристик В(
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КлючиАналитики.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ                            КАК ХарактеристикиИспользуются,
	|	КлючиАналитики.Характеристика    КАК Характеристика,
	|	КлючиАналитики.Серия             КАК Серия,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА КлючиАналитики.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                            КАК СтатусУказанияСерий,
	|	КлючиАналитики.Назначение        КАК Назначение,
	|	ОстаткиТоваров.Количество        КАК Количество,
	|	ОстаткиТоваров.КоличествоПоРНПТ  КАК КоличествоПоРНПТ
	|ИЗ
	|	ВТОстаткиТоваров КАК ОстаткиТоваров
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|	ПО КлючиАналитики.Ссылка = ОстаткиТоваров.АналитикаУчетаНоменклатуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = КлючиАналитики.Номенклатура
	|	
	|ГДЕ
	|	&ТекстОтбора
	|	И &ТекстЗапросаОтборПоТоварам
	|";
	
	ТекстЗапросаОтборПоТоварам = "ИСТИНА";
	Если Не ПараметрыОстатков.ОтборПоТоварам = Неопределено Тогда
		
		ТекстЗапросаОтборПоТоварам =
		"ИСТИНА В(
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ИСТИНА
		|	ИЗ
		|		ОтборПоТоварам КАК ОтборПоТоварам
		|	ГДЕ
		|		ОтборПоТоварам.Организация      = ОстаткиТоваров.Организация
		|		И ОтборПоТоварам.МестоХранения  = КлючиАналитики.МестоХранения
		|		И ОтборПоТоварам.Номенклатура   = КлючиАналитики.Номенклатура
		|		И ОтборПоТоварам.Характеристика = КлючиАналитики.Характеристика
		|		И ОтборПоТоварам.Серия          = КлючиАналитики.Серия
		|		И ОтборПоТоварам.Назначение     = КлючиАналитики.Назначение)
		|";
		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОтборПоТоварам", ТекстЗапросаОтборПоТоварам);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбора", ОбщегоНазначенияУТ.ТекстОтбораПоКоллекцииОтборов(ПараметрыОстатков.Отбор));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Если ЗначениеЗаполнено(ПараметрыОстатков.ПоляУпорядочивания) Тогда
		Запрос.Текст = СхемыЗапросов.ДобавитьПоляУпорядочиванияВЗапрос(Запрос.Текст, ПараметрыОстатков.ПоляУпорядочивания);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получить остатки РНПТ материалов в производстве в фоне.
// 
// 
// Параметры:
//  Параметры - Структура - параметры выполнения процедуры
//  АдресРезультата - Строка - адрес результата
//
Процедура ОстаткиРНПТМатериаловВПроизводствеВФоне(Параметры, АдресРезультата) Экспорт
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.МодульМенеджера.ОстаткиРНПТМатериаловВПроизводствеВФоне");
	
	Результат = Новый Структура;
	Результат.Вставить("Товары", ОстаткиРНПТМатериаловВПроизводстве(Параметры.ПараметрыОстатков));
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, Результат.Товары.Количество());
	
КонецПроцедуры

// Остатки РНПТ материалов в производстве.
// 
// Параметры:
//  ПараметрыОстатков - см. УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Остатки РНПТ материалов в производстве:
//   * Организация - СправочникСсылка.Организации
//   * ПартияПроизводства - СправочникСсылка.ПартииПроизводства
//   * ДокументВыпуска - ДокументСсылка
//   * Подразделение - СправочникСсылка.СтруктураПредприятия
//   * Номенклатура - СправочникСсылка.Номенклатура
//   * ТипНоменклатуры - ПеречислениеСсылка.ТипыНоменклатуры
//   * ХарактеристикиИспользуются - Булево
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
//   * Серия - СправочникСсылка.СерииНоменклатуры
//   * СтатусУказанияСерий - Число
//   * Назначение - СправочникСсылка.Назначения
//   * НомерГТД - СправочникСсылка.НомераГТД
//   * РекомендуетсяВыбытие - Булево
//   * Количество - Число
//   * КоличествоПоРНПТ - Число
//
Функция ОстаткиРНПТМатериаловВПроизводстве(ПараметрыОстатков) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если Не ПараметрыОстатков.ОтборПоТоварам = Неопределено Тогда
		Запрос.УстановитьПараметр("ОтборПоТоварам", ПараметрыОстатков.ОтборПоТоварам);
	КонецЕсли;
	
	// Вычитаем движения редактируемого документа.
	Запрос.УстановитьПараметр("Регистратор", Неопределено);
	
	Для Каждого ТекущийОтбор Из ПараметрыОстатков.ЗначенияПараметровОтбора Цикл
		Запрос.УстановитьПараметр(ТекущийОтбор.Ключ, ТекущийОтбор.Значение);
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапросаОстаткиРНПТМатериаловВПроизводстве(ПараметрыОстатков);
	
	Если ПараметрыОстатков.ЗаполнитьРекомендуетсяВыбытие Тогда
		
		ТекстЗапроса = СхемыЗапросов.УстановитьПомещениеВоВременнуюТаблицу(ТекстЗапроса, "ОстаткиРНПТПромежуточная");
		ТекстЗапроса = СхемыЗапросов.УстановитьИндексациюПолейЗапроса(ТекстЗапроса, "ПартияПроизводства");
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.Выполнить();
		
		ЗавершенныеПартииПроизводстваРНПТ = ЗавершенныеПартииПроизводстваРНПТ(Запрос.МенеджерВременныхТаблиц);
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ОстаткиТоваров.Организация                КАК Организация,
		|	ОстаткиТоваров.ПартияПроизводства         КАК ПартияПроизводства,
		|	ОстаткиТоваров.ДокументВыпуска            КАК ДокументВыпуска,
		|	ОстаткиТоваров.Подразделение              КАК Подразделение,
		|	ОстаткиТоваров.Номенклатура               КАК Номенклатура,
		|	ОстаткиТоваров.ЕдиницаИзмерения           КАК ЕдиницаИзмерения,
		|	ОстаткиТоваров.ТипНоменклатуры            КАК ТипНоменклатуры,
		|	ОстаткиТоваров.ВедетсяУчетПоРНПТ          КАК ВедетсяУчетПоРНПТ,
		|	ОстаткиТоваров.ХарактеристикиИспользуются КАК ХарактеристикиИспользуются,
		|	ОстаткиТоваров.Характеристика             КАК Характеристика,
		|	ОстаткиТоваров.Серия                      КАК Серия,
		|	ОстаткиТоваров.СтатусУказанияСерий        КАК СтатусУказанияСерий,
		|	ОстаткиТоваров.Назначение                 КАК Назначение,
		|	ОстаткиТоваров.НомерГТД                   КАК НомерГТД,
		|	ОстаткиТоваров.Количество                 КАК Количество,
		|	ОстаткиТоваров.КоличествоПоРНПТ           КАК КоличествоПоРНПТ
		|ИЗ
		|	ОстаткиРНПТПромежуточная КАК ОстаткиТоваров
		|ГДЕ
		|	ОстаткиТоваров.ПартияПроизводства В(&ЗавершенныеПартииПроизводстваРНПТ)
		|";
		
		Запрос.УстановитьПараметр("ЗавершенныеПартииПроизводстваРНПТ", ЗавершенныеПартииПроизводстваРНПТ);
		
		Если ЗначениеЗаполнено(ПараметрыОстатков.ИмяВТ) Тогда
			ТекстЗапроса = СхемыЗапросов.УстановитьПомещениеВоВременнуюТаблицу(ТекстЗапроса, ПараметрыОстатков.ИмяВТ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПараметрыОстатков.ПоляУпорядочивания)
			И Не ЗначениеЗаполнено(ПараметрыОстатков.ИмяВТ) Тогда
			ТекстЗапроса = СхемыЗапросов.ДобавитьПоляУпорядочиванияВЗапрос(ТекстЗапроса, ПараметрыОстатков.ПоляУпорядочивания);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Текст запроса остатков РНПТ материалов в производстве.
// 
// Параметры:
//  ПараметрыОстатков - см. УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапросаОстаткиРНПТМатериаловВПроизводстве(ПараметрыОстатков) Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	Если Не ПараметрыОстатков.ОтборПоТоварам = Неопределено Тогда
		
		ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ОтборПоТоварам.Организация        КАК Организация,
		|	ОтборПоТоварам.ПартияПроизводства КАК ПартияПроизводства,
		|	ОтборПоТоварам.Подразделение      КАК Подразделение,
		|	ОтборПоТоварам.Номенклатура       КАК Номенклатура,
		|	ОтборПоТоварам.Характеристика     КАК Характеристика,
		|	ОтборПоТоварам.Серия              КАК Серия,
		|	ОтборПоТоварам.Назначение         КАК Назначение,
		|	ОтборПоТоварам.НомерГТД           КАК НомерГТД
		|ПОМЕСТИТЬ ОтборПоТоварамПредварительная
		|ИЗ
		|	&ОтборПоТоварам КАК ОтборПоТоварам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтборПоТоварам.Организация        КАК Организация,
		|	ОтборПоТоварам.ПартияПроизводства КАК ПартияПроизводства,
		|	ОтборПоТоварам.Подразделение      КАК Подразделение,
		|	ОтборПоТоварам.Номенклатура       КАК Номенклатура,
		|	ОтборПоТоварам.Характеристика     КАК Характеристика,
		|	ОтборПоТоварам.Серия              КАК Серия,
		|	ОтборПоТоварам.Назначение         КАК Назначение,
		|	ОтборПоТоварам.НомерГТД           КАК НомерГТД
		|ПОМЕСТИТЬ ОтборПоТоварам
		|ИЗ
		|	ОтборПоТоварамПредварительная КАК ОтборПоТоварам
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтборПоТоварам.Организация,
		|	ОтборПоТоварам.ПартияПроизводства,
		|	ОтборПоТоварам.Подразделение,
		|	ОтборПоТоварам.Номенклатура,
		|	ОтборПоТоварам.Характеристика,
		|	ОтборПоТоварам.Серия,
		|	ОтборПоТоварам.Назначение,
		|	ОтборПоТоварам.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ПартияПроизводства,
		|	Подразделение,
		|	Номенклатура,
		|	Характеристика,
		|	Серия,
		|	Назначение,
		|	НомерГТД
		|");
		
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваров.Организация                   КАК Организация,
	|	ОстаткиТоваров.ПартияПроизводства            КАК ПартияПроизводства,
	|	ОстаткиТоваров.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиТоваров.НомерГТД                      КАК НомерГТД,
	|	СУММА(ОстаткиТоваров.Количество)             КАК Количество,
	|	СУММА(ОстаткиТоваров.КоличествоПоРНПТ)       КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТОстаткиТоваров
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОстаткиТоваров.Организация                 КАК Организация,
	|		ОстаткиТоваров.ПартияПроизводства          КАК ПартияПроизводства,
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|		ОстаткиТоваров.НомерГТД                    КАК НомерГТД,
	|		ОстаткиТоваров.КоличествоОстаток           КАК Количество,
	|		ВЫРАЗИТЬ(ОстаткиТоваров.КоличествоПоРНПТОстаток КАК Число(23,11)) КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РНПТМатериаловВПроизводстве.Остатки КАК ОстаткиТоваров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОстаткиТоваров.Организация                КАК Организация,
	|		ОстаткиТоваров.ПартияПроизводства         КАК ПартияПроизводства,
	|		ОстаткиТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ОстаткиТоваров.НомерГТД                   КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ОстаткиТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ОстаткиТоваров.Количество
	|			ИНАЧЕ ОстаткиТоваров.Количество
	|		КОНЕЦ                                     КАК Количество,
	|		ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ОстаткиТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ОстаткиТоваров.КоличествоПоРНПТ
	|			ИНАЧЕ ОстаткиТоваров.КоличествоПоРНПТ
	|		КОНЕЦ КАК Число(23,11))                   КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РНПТМатериаловВПроизводстве КАК ОстаткиТоваров
	|	ГДЕ
	|		ОстаткиТоваров.Регистратор = &Регистратор
	|	) КАК ОстаткиТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Организация,
	|	ОстаткиТоваров.ПартияПроизводства,
	|	ОстаткиТоваров.АналитикаУчетаНоменклатуры,
	|	ОстаткиТоваров.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиТоваров.Количество) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваров.Организация                   КАК Организация,
	|	ОстаткиТоваров.ПартияПроизводства            КАК ПартияПроизводства,
	|	ОстаткиТоваров.ПартияПроизводства.Документ   КАК ДокументВыпуска,
	|	КлючиАналитики.МестоХранения                 КАК Подразделение,
	|	КлючиАналитики.Номенклатура                  КАК Номенклатура,
	|	КлючиАналитики.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.ТипНоменклатуры              КАК ТипНоменклатуры,
	|	(СпрНоменклатура.ПрослеживаемыйТовар
	|		И СпрНоменклатура.ВестиУчетПоГТД)        КАК ВедетсяУчетПоРНПТ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ИспользованиеХарактеристик В(
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КлючиАналитики.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ                                        КАК ХарактеристикиИспользуются,
	|	КлючиАналитики.Характеристика                КАК Характеристика,
	|	КлючиАналитики.Серия                         КАК Серия,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА КлючиАналитики.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ                                        КАК СтатусУказанияСерий,
	|	КлючиАналитики.Назначение                    КАК Назначение,
	|	ОстаткиТоваров.НомерГТД                      КАК НомерГТД,
	|	ОстаткиТоваров.Количество                    КАК Количество,
	|	ОстаткиТоваров.КоличествоПоРНПТ              КАК КоличествоПоРНПТ
	|ИЗ
	|	ВТОстаткиТоваров КАК ОстаткиТоваров
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|	ПО КлючиАналитики.Ссылка = ОстаткиТоваров.АналитикаУчетаНоменклатуры
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = КлючиАналитики.Номенклатура
	|
	|ГДЕ
	|	СпрНоменклатура.ПрослеживаемыйТовар
	|	И &ТекстОтбора
	|	И &ТекстЗапросаОтборПоТоварам
	|";
	
	ТекстЗапросаОтборПоТоварам = "ИСТИНА";
	Если Не ПараметрыОстатков.ОтборПоТоварам = Неопределено Тогда
		
		ТекстЗапросаОтборПоТоварам =
		"ИСТИНА В(
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		ИСТИНА
		|	ИЗ
		|		ОтборПоТоварам КАК ОтборПоТоварам
		|	ГДЕ
		|		ОтборПоТоварам.Организация          = ОстаткиТоваров.Организация
		|		И ОтборПоТоварам.ПартияПроизводства = ОстаткиТоваров.ПартияПроизводства
		|		И ОтборПоТоварам.Подразделение      = КлючиАналитики.МестоХранения
		|		И ОтборПоТоварам.Номенклатура       = КлючиАналитики.Номенклатура
		|		И ОтборПоТоварам.Характеристика     = КлючиАналитики.Характеристика
		|		И ОтборПоТоварам.Серия              = КлючиАналитики.Серия
		|		И ОтборПоТоварам.Назначение         = КлючиАналитики.Назначение
		|		И ОтборПоТоварам.НомерГТД           = ОстаткиТоваров.НомерГТД)
		|";
		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаОтборПоТоварам", ТекстЗапросаОтборПоТоварам);
	
	Если ЗначениеЗаполнено(ПараметрыОстатков.ИмяВТ)
		И Не ПараметрыОстатков.ЗаполнитьРекомендуетсяВыбытие Тогда
		ТекстЗапроса = СхемыЗапросов.УстановитьПомещениеВоВременнуюТаблицу(ТекстЗапроса, ПараметрыОстатков.ИмяВТ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОстатков.ПоляУпорядочивания)
		И Не ПараметрыОстатков.ЗаполнитьРекомендуетсяВыбытие
		И Не ЗначениеЗаполнено(ПараметрыОстатков.ИмяВТ) Тогда
		ТекстЗапроса = СхемыЗапросов.ДобавитьПоляУпорядочиванияВЗапрос(ТекстЗапроса, ПараметрыОстатков.ПоляУпорядочивания);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОтбора", ОбщегоНазначенияУТ.ТекстОтбораПоКоллекцииОтборов(ПараметрыОстатков.Отбор));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

// Получить прослеживаемую структуру изделия в фоне
// 
// Параметры:
//  Параметры - Структура - параметры выполнения процедуры
//  АдресРезультата - Строка - адрес результата
//
Процедура СформироватьПрослеживаемуюСтруктуруИзделияВФоне(Параметры, АдресРезультата) Экспорт
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.МодульМенеджера.СформироватьПрослеживаемуюСтруктуруИзделияВФоне");
	
	Результат = СформироватьПрослеживаемуюСтруктуруИзделия(Параметры);
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(
		Замер,
		Результат.СтруктураИзделия.Количество() + Результат.ТаблицаОстатков.Количество());
	
КонецПроцедуры

// Сформировать прослеживаемую структуру изделия.
// 
// Параметры:
//  Параметры - Структура - Параметры
// 
// Возвращаемое значение:
//  Структура
//
Функция СформироватьПрослеживаемуюСтруктуруИзделия(Параметры) Экспорт
	
	Результат = Новый Структура;
	
	СтруктураИзделия = ПрослеживаемаяСтруктураИзделия();
	
	// Добавим корневую строку.
	НомерСтроки = 1;
	КорневаяСтрока = СтруктураИзделия.Добавить();
	ЗаполнитьЗначенияСвойств(КорневаяСтрока, Параметры);
	КорневаяСтрока.НомерСтроки = НомерСтроки;
	КорневаяСтрока.ПрослеживаемыйТовар = Истина;
	КорневаяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	
	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",  Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакЕдиницаИзмерения", Новый Структура("Номенклатура", "ЕдиницаИзмерения"));
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(
		КорневаяСтрока,
		СтруктураДействий,
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
	
	// Сформируем список изделий к разузлованию.
	СписокНоменклатуры = СписокНоменклатуры();
	НоваяСтрока = СписокНоменклатуры.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, КорневаяСтрока);
	
	НаправлениеДеятельности = Неопределено;
	Если ЗначениеЗаполнено(Параметры.Назначение) Тогда
		НаправлениеДеятельности = Справочники.Назначения.НаправленияДеятельностиНазначений(Параметры.Назначение)[Параметры.Назначение];
	КонецЕсли;
	НоваяСтрока.НаправлениеДеятельности = НаправлениеДеятельности;
	
	// Получим структуру изделия.
	ПараметрыВыборкиДанных = Справочники.РесурсныеСпецификации.ПараметрыВыборкиДанных();
	ПараметрыВыборкиДанных.ПереченьДанных.Добавить("МатериалыИУслуги");
	РазузловатьТекущийУровеньСтруктурыИзделия(СтруктураИзделия, СписокНоменклатуры, ПараметрыВыборкиДанных, НомерСтроки, Новый Соответствие);
	
	// Удалим непрослеживаемые товары.
	Отбор = Новый Структура("ПрослеживаемыйТовар", Ложь);
	Для Каждого ТекущиеДанные Из СтруктураИзделия.НайтиСтроки(Отбор) Цикл
		СтруктураИзделия.Удалить(ТекущиеДанные);
	КонецЦикла;
	
	// Заполним служебные реквизиты и количество по РНПТ.
	СтруктураДействий = Новый Структура;
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(
		СтруктураДействий);
	
	ОписаниеОбъекта = Новый Структура;
	ОписаниеОбъекта.Вставить("Дата",          Параметры.Дата);
	ОписаниеОбъекта.Вставить("Ссылка",        Параметры.Регистратор);
	ОписаниеОбъекта.Вставить("Организация",   Параметры.Организация);
	ОписаниеОбъекта.Вставить("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		ОписаниеОбъекта,
		СтруктураДействий,
		"Подразделение");
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьТЧ(
		СтруктураИзделия,
		СтруктураДействий,
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
	
	Результат.Вставить("СтруктураИзделия", СтруктураИзделия);
	
	// Получим остатки РНПТ в производстве
	ТекстыЗапроса = Новый Массив;
	
	// Таблица отборов
	ТекстыЗапроса.Добавить(
	"ВЫБРАТЬ
	|	СтруктураИзделия.Номенклатура КАК Номенклатура,
	|	СтруктураИзделия.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ СтруктураИзделия
	|ИЗ
	|	&СтруктураИзделия КАК СтруктураИзделия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|");
	
	// Таблица остатков
	ПараметрыОстатков = УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
	
	ОбщегоНазначенияУТ.ДобавитьЭлементОтбораВКоллекцию(ПараметрыОстатков.Отбор, "ОстаткиТоваров.Организация", "&Организация", "=");
	
	ОбщегоНазначенияУТ.ДобавитьЭлементОтбораВКоллекцию(
		ПараметрыОстатков.Отбор,
		"КлючиАналитики.Назначение",
		"&Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)",
		"В");
	
	ОбщегоНазначенияУТ.ДобавитьЭлементОтбораВКоллекцию(
		ПараметрыОстатков.Отбор,
		"КлючиАналитики.Номенклатура, КлючиАналитики.Характеристика",
		"ВЫБРАТЬ
		|	СтруктураИзделия.Номенклатура КАК Номенклатура,
		|	СтруктураИзделия.Характеристика КАК Характеристика
		|ИЗ
		|	СтруктураИзделия КАК СтруктураИзделия",
		"В");
	
	ТекстЗапроса = ТекстЗапросаОстаткиРНПТМатериаловВПроизводстве(ПараметрыОстатков);
	ТекстЗапроса =
		СхемыЗапросов.ДобавитьПолеВыборкиВЗапрос(
			ТекстЗапроса,
			"ВЫБОР
			|	КОГДА КлючиАналитики.Назначение = &Назначение
			|		ТОГДА 1
			|	ИНАЧЕ 2
			|КОНЕЦ",
			"Приоритет");
	ТекстЗапроса =
		СхемыЗапросов.ДобавитьПоляУпорядочиванияВЗапрос(ТекстЗапроса, "Номенклатура, Характеристика, Приоритет");
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтруктураИзделия", СтруктураИзделия);
	Запрос.УстановитьПараметр("Организация",      Параметры.Организация);
	Запрос.УстановитьПараметр("Регистратор",      Параметры.Регистратор);
	Запрос.УстановитьПараметр("Назначение",       Параметры.Назначение);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Результат.Вставить("ТаблицаОстатков", Запрос.Выполнить().Выгрузить());
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// см. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область ФормированиеГиперссылкиВЖурналеПроизводства

// Сформировать гиперссылку "см. также".
// 
// Параметры:
//  Параметры - Структура
// 
// Возвращаемое значение:
//  Неопределено, ФорматированнаяСтрока - Сформировать гиперссылку см также в работе
//
Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры) Экспорт
	
	Если Не ПравоДоступа("Просмотр", Метаданные.ОбщиеКоманды.УчетРНПТВПроизводстве) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстГиперссылки = НСтр("ru = 'Учет РНПТ в производстве'");
	ТекстСсылки = "РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.РабочееМесто";
	
	Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки,,,, ТекстСсылки);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Конструкторы

// Прослеживаемая структура изделия.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Прослеживаемая структура изделия:
// * НомерСтроки - Число
// * ИдентификаторРодителя - УникальныйИдентификатор
// * ИдентификаторСтроки - УникальныйИдентификатор
// * ПартияПроизводства - СправочникСсылка.ПартииПроизводства
// * Подразделение - СправочникСсылка.СтруктураПредприятия
// * Номенклатура - СправочникСсылка.Номенклатура
// * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
// * Серия - СправочникСсылка.СерииНоменклатуры
// * Назначение - СправочникСсылка.Назначения
// * НомерГТД - СправочникСсылка.НомераГТД
// * ПрослеживаемыйТовар - Булево
// * Количество - Число
// * КоличествоПоРНПТ - Число
// * Норматив - Число
// * НормативПоРНПТ - Число
// * Остаток - Число
// * ОстатокПоРНПТ - Число
// * ВедетсяУчетПоРНПТ - Булево
// * ХарактеристикиИспользуются - Булево
// * ТипНоменклатуры - ПеречислениеСсылка.ТипыНоменклатуры
// * ЕдиницаИзмерения - СправочникСсылка.УпаковкиЕдиницыИзмерения
//
Функция ПрослеживаемаяСтруктураИзделия()
	
	СтруктураИзделия = Новый ТаблицаЗначений;
	
	СтруктураИзделия.Колонки.Добавить("НомерСтроки",           Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5)));
	
	СтруктураИзделия.Колонки.Добавить("ИдентификаторРодителя", Новый ОписаниеТипов("УникальныйИдентификатор"));
	СтруктураИзделия.Колонки.Добавить("ИдентификаторСтроки",   Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	СтруктураИзделия.Колонки.Добавить("Номенклатура",        Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СтруктураИзделия.Колонки.Добавить("Характеристика",      Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	СтруктураИзделия.Колонки.Добавить("Серия",               Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СтруктураИзделия.Колонки.Добавить("Назначение",          Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	СтруктураИзделия.Колонки.Добавить("Спецификация",        Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	СтруктураИзделия.Колонки.Добавить("ПрослеживаемыйТовар", Новый ОписаниеТипов("Булево"));
	
	СтруктураИзделия.Колонки.Добавить("Количество",       ОбщегоНазначенияУТКлиентСервер.ОписаниеТипаЧисло(15, 3));
	СтруктураИзделия.Колонки.Добавить("КоличествоПоРНПТ", ОбщегоНазначенияУТКлиентСервер.ОписаниеТипаЧисло(23, 11));
	
	// Служебные поля.
	СтруктураИзделия.Колонки.Добавить("ВедетсяУчетПоРНПТ",          Новый ОписаниеТипов("Булево"));
	СтруктураИзделия.Колонки.Добавить("ХарактеристикиИспользуются", Новый ОписаниеТипов("Булево"));
	СтруктураИзделия.Колонки.Добавить("ТипНоменклатуры",            Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	СтруктураИзделия.Колонки.Добавить("ЕдиницаИзмерения",           Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	СтруктураИзделия.Колонки.Добавить("НомерГТД",                   Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	
	Возврат СтруктураИзделия;
	
КонецФункции

Функция СписокНоменклатуры()
	
	СписокНоменклатуры = Справочники.РесурсныеСпецификации.СписокНоменклатуры();
	
	СписокНоменклатуры.Колонки.Добавить("ИдентификаторРодителя", Новый ОписаниеТипов("УникальныйИдентификатор"));
	СписокНоменклатуры.Колонки.Добавить("ИдентификаторСтроки",   Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	Возврат СписокНоменклатуры;
	
КонецФункции

#КонецОбласти

Функция РазузловатьТекущийУровеньСтруктурыИзделия(Результат, НоменклатураКРазузлованию, ПараметрыВыборкиДанных, НомерСтроки, Знач РазузлованныеСпецификации)
	
	ДанныеСпецификаций = Справочники.РесурсныеСпецификации.ДанныеСпецификацииПоСпискуНоменклатуры(НоменклатураКРазузлованию, ПараметрыВыборкиДанных);
	
	НовыеСтроки = Новый Массив;
	ВладельцыПрослеживаемыхКомплектующих = Новый Соответствие;
	НоменклатураКРазузлованиюНовый = СписокНоменклатуры();
	
	ПараметрыВыбораСпецификации = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификацийНаИзготовлениеСборку();
	ПараметрыВыбораСпецификации.ДоступныСпецификацииСПроизводствомНаСтороне = Ложь;
	
	Для Индекс = 0 По ДанныеСпецификаций.ВГраница() Цикл
		
		ДанныеСпецификации = ДанныеСпецификаций[Индекс];
		
		Если ДанныеСпецификации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РазузлованныеСпецификации.Вставить(ДанныеСпецификации.Спецификация);
		ИдентификаторРодителя = НоменклатураКРазузлованию[Индекс].ИдентификаторСтроки;
		
		Для Каждого ТекущиеДанные Из ДанныеСпецификации.МатериалыИУслуги Цикл
			
			ИдентификаторСтроки = Новый УникальныйИдентификатор;
			
			НоваяСтрокаСтруктураИзделия = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСтруктураИзделия, ТекущиеДанные);
			НоваяСтрокаСтруктураИзделия.ИдентификаторРодителя = ИдентификаторРодителя;
			НоваяСтрокаСтруктураИзделия.ИдентификаторСтроки   = ИдентификаторСтроки;
			
			НоваяСтрокаСтруктураИзделия.НомерСтроки = НомерСтроки;
			НомерСтроки                             = НомерСтроки + 1;
			
			НовыеСтроки.Добавить(НоваяСтрокаСтруктураИзделия);
			Если НоваяСтрокаСтруктураИзделия.ПрослеживаемыйТовар Тогда
				ВладельцыПрослеживаемыхКомплектующих.Вставить(ИдентификаторРодителя, ИдентификаторСтроки);
			КонецЕсли;
			
			Если Не ТекущиеДанные.ПрослеживаемыйТовар
				И (ТекущиеДанные.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации
					Или ТекущиеДанные.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе)
				И ЗначениеЗаполнено(ТекущиеДанные.Спецификация)
				И РазузлованныеСпецификации.Получить(ТекущиеДанные.Спецификация) = Неопределено Тогда
				
				НоваяСтрока = НоменклатураКРазузлованиюНовый.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные, "Номенклатура, Характеристика, Количество, ДнейОтПотребности, Спецификация");
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НоменклатураКРазузлованию[Индекс], "НачалоПроизводства, ПодразделениеДиспетчер, НаправлениеДеятельности");
				НоваяСтрока.ИдентификаторРодителя = ИдентификаторРодителя;
				НоваяСтрока.ИдентификаторСтроки   = ИдентификаторСтроки;
				
			КонецЕсли;
			
			Если Не ТекущиеДанные.ПрослеживаемыйТовар
				И ТекущиеДанные.Запланировать Тогда
				
				ДанныеИзделия = УправлениеДаннымиОбИзделияхКлиентСервер.СтруктураДанныхОбИзделииДляВыбораСпецификации();
				ЗаполнитьЗначенияСвойств(ДанныеИзделия, ТекущиеДанные);
				ДанныеИзделия.ТекущаяСпецификация = ТекущиеДанные.Спецификация;
				
				ДанныеСпецификацииИзделия = УправлениеДаннымиОбИзделияхВызовСервера.СпецификацияИзделия(ДанныеИзделия, ПараметрыВыбораСпецификации);
				
				Если ЗначениеЗаполнено(ДанныеСпецификацииИзделия)
					И РазузлованныеСпецификации.Получить(ДанныеСпецификацииИзделия.Спецификация) = Неопределено Тогда
					
					НоваяСтрока = НоменклатураКРазузлованиюНовый.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные, "Номенклатура, Характеристика, Количество, ДнейОтПотребности");
					ЗаполнитьЗначенияСвойств(НоваяСтрока, НоменклатураКРазузлованию[Индекс], "НачалоПроизводства, ПодразделениеДиспетчер, НаправлениеДеятельности");
					НоваяСтрока.Спецификация          = ДанныеСпецификацииИзделия.Спецификация;
					НоваяСтрока.ИдентификаторРодителя = ИдентификаторРодителя;
					НоваяСтрока.ИдентификаторСтроки   = ИдентификаторСтроки;
					
					НоваяСтрокаСтруктураИзделия.Спецификация = ДанныеСпецификацииИзделия.Спецификация;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	НоменклатураКРазузлованию.Очистить();
	
	Если НоменклатураКРазузлованиюНовый.Количество() Тогда
		
		ИзделияСПрослеживаемымиКомплектующими =
			РазузловатьТекущийУровеньСтруктурыИзделия(
				Результат,
				НоменклатураКРазузлованиюНовый,
				ПараметрыВыборкиДанных,
				НомерСтроки,
				РазузлованныеСпецификации);
		
		Для Каждого ТекущиеДанные Из НовыеСтроки Цикл
			Если Не ИзделияСПрослеживаемымиКомплектующими.Получить(ТекущиеДанные.ИдентификаторСтроки) = Неопределено Тогда
				
				ТекущиеДанные.ПрослеживаемыйТовар = Истина;
				
				ВладельцыПрослеживаемыхКомплектующих.Вставить(ТекущиеДанные.ИдентификаторРодителя, ТекущиеДанные.ИдентификаторСтроки);
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ВладельцыПрослеживаемыхКомплектующих;
	
КонецФункции

Функция ЗавершенныеПартииПроизводстваРНПТ(МенеджерВТ)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПроверяемыеПартииПроизводства.ПартияПроизводства КАК ПартияПроизводства,
	|	ПроверяемыеПартииПроизводства.ДокументВыпуска    КАК ДокументВыпуска
	|ПОМЕСТИТЬ ПроверяемыеПартииПроизводства
	|ИЗ
	|	&ПроверяемыеПартииПроизводства КАК ПроверяемыеПартииПроизводства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартииПроизводства.ПартияПроизводства          КАК ПартияПроизводства,
	|	ПартииПроизводства.ДокументВыпуска             КАК ДокументВыпуска,
	|	МИНИМУМ(ПартииПроизводства.ПартияЗавершена)    КАК ПартияЗавершена,
	|	МАКСИМУМ(ПартииПроизводства.ТребуетсяПроверка) КАК ТребуетсяПроверка
	|ИЗ
	|	(
	// Производство без заказа (выходные изделия)
	|	ВЫБРАТЬ
	|		ПроверяемыеПартииПроизводства.ПартияПроизводства КАК ПартияПроизводства,
	|		ЕСТЬNULL(СпрНазначения.Заказ, НЕОПРЕДЕЛЕНО)      КАК ДокументВыпуска,
	|		ВЫБОР
	|			КОГДА РеквизитыЗаказовНазначений.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ РеквизитыЗаказовНазначений.Статус В(
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовМатериаловВПроизводство.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаРемонт.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ                         КАК ПартияЗавершена,
	|		ВЫБОР
	|			КОГДА ИСТИНА
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ                          КАК ТребуетсяПроверка
	|	ИЗ
	|		ПроверяемыеПартииПроизводства КАК ПроверяемыеПартииПроизводства
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = ПроверяемыеПартииПроизводства.ДокументВыпуска
	|		
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаПродукции
	|		ПО ТаблицаПродукции.Ссылка = СпрПартииПроизводства.Документ
	|		И ТаблицаПродукции.НомерГруппыЗатрат = СпрПартииПроизводства.Код
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = ТаблицаПродукции.Назначение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеквизитыЗаказовНазначений
	|		ПО РеквизитыЗаказовНазначений.Ссылка = СпрНазначения.Заказ
	|		И РеквизитыЗаказовНазначений.ДополнительнаяЗапись = ЛОЖЬ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Производство без заказа (побочные изделия)
	|	ВЫБРАТЬ
	|		ПроверяемыеПартииПроизводства.ПартияПроизводства КАК ПартияПроизводства,
	|		ЕСТЬNULL(СпрНазначения.Заказ, НЕОПРЕДЕЛЕНО)      КАК ДокументВыпуска,
	|		ВЫБОР
	|			КОГДА РеквизитыЗаказовНазначений.Ссылка ЕСТЬ НЕ NULL
	|				И НЕ РеквизитыЗаказовНазначений.Статус В(
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовМатериаловВПроизводство.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаРемонт.Закрыт),
	|						ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Выполнена))
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ                         КАК ПартияЗавершена,
	|		ВЫБОР
	|			КОГДА ИСТИНА
	|				ТОГДА ЛОЖЬ
	|		КОНЕЦ                          КАК ТребуетсяПроверка
	|	ИЗ
	|		ПроверяемыеПартииПроизводства КАК ПроверяемыеПартииПроизводства
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПартииПроизводства КАК СпрПартииПроизводства
	|		ПО СпрПартииПроизводства.Документ = ПроверяемыеПартииПроизводства.ДокументВыпуска
	|		
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ТаблицаПродукции
	|		ПО ТаблицаПродукции.Ссылка = СпрПартииПроизводства.Документ
	|		И ТаблицаПродукции.НомерГруппыЗатрат = СпрПартииПроизводства.Код
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = ТаблицаПродукции.Назначение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеквизитыЗаказовНазначений
	|		ПО РеквизитыЗаказовНазначений.Ссылка = СпрНазначения.Заказ
	|		И РеквизитыЗаказовНазначений.ДополнительнаяЗапись = ЛОЖЬ
	|	) КАК ПартииПроизводства
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииПроизводства.ПартияПроизводства,
	|	ПартииПроизводства.ДокументВыпуска
	|
	|ИТОГИ
	|	МИНИМУМ(ПартияЗавершена),
	|	МАКСИМУМ(ТребуетсяПроверка)
	|ПО
	|	ПартияПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроверяемыеПартииПроизводства
	|";
	
	ЗавершенныеПартииПроизводстваРНПТ = Новый Массив;
	ПроверенныеДокументыВыпуска       = Новый Соответствие;
	ПроверяемыеПартииПроизводства     = РасчетСебестоимостиПрикладныеАлгоритмы.ВыгрузитьВременнуюТаблицу(МенеджерВТ, "ОстаткиРНПТПромежуточная");
	
	Индекс = 0;
	
	Пока Истина Цикл
		
		Запрос.УстановитьПараметр("ПроверяемыеПартииПроизводства", ПроверяемыеПартииПроизводства);
		Результат = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ПроверяемыеПартииПроизводства.Очистить();
		
		Для Каждого ТекущиеДанные Из Результат.Строки Цикл
			
			Если ТекущиеДанные.ТребуетсяПроверка Тогда
				Для Каждого ТекущийДокумент Из ТекущиеДанные.Строки Цикл
					Если ТекущийДокумент.ТребуетсяПроверка
						И ПроверенныеДокументыВыпуска.Получить(ТекущийДокумент.ДокументВыпуска) = Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ПроверяемыеПартииПроизводства.Добавить(), ТекущийДокумент);
						ПроверенныеДокументыВыпуска.Вставить(ТекущийДокумент.ДокументВыпуска);
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ТекущиеДанные.ПартияЗавершена Тогда
				ЗавершенныеПартииПроизводстваРНПТ.Добавить(ТекущиеДанные.ПартияПроизводства);
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПроверяемыеПартииПроизводства.Количество() = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
		Если Индекс = 10000 Тогда
			ВызватьИсключение НСтр("ru = 'Выполнено 10000 циклов проверки завершенности партий производства. Вероятно произошло зацикливание проверки. Операция прервана.'");
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ЗавершенныеПартииПроизводстваРНПТ);
	
КонецФункции

#КонецОбласти

#КонецЕсли