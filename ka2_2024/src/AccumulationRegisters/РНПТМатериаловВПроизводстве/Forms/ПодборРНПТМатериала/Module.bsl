#Область ОписаниеПеременных

&НаКлиенте
Перем ВыполняетсяЗакрытие Экспорт;

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АдресТаблицаОстатков = Параметры.АдресТаблицаОстатков;
	Дата                 = Параметры.Дата;
	Организация          = Параметры.Организация;
	Регистратор          = Параметры.Регистратор;
	Ссылка               = Параметры.Регистратор;
	Номенклатура         = Параметры.Номенклатура;
	Характеристика       = Параметры.Характеристика;
	Норматив             = Параметры.Норматив;
	НормативПоРНПТ       = Параметры.НормативПоРНПТ;
	
	ПрочитатьТаблицуОстатков();
	
	РаботаСТабличнымиЧастями.ИнициализироватьКэшСтрок(Элементы.ТаблицаОстатков);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы
		И Модифицированность Тогда
		
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru = 'Данные были изменены. Все изменения будут потеряны.'");
		
		Возврат;
		
	КонецЕсли;
	
	Если ПеренестиВДокумент
		Или ВыполняетсяЗакрытие
		Или Не Модифицированность Тогда
		Возврат;
	Иначе
		
		Отказ = Истина;
		
		ТекстВопроса       = НСтр("ru = 'Изменения не перенесены в документ. Перенести?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ПеренестиВДокумент Тогда
		
		Структура = Новый Структура("АдресТаблицаОстатков", АдресТаблицыОстатков());
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаОстатков

&НаКлиенте
Процедура ТаблицаОстатковПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСТабличнымиЧастямиКлиент.КэшироватьТекущуюСтроку(Элементы.ТаблицаОстатков, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОстатковПодобраноПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаОстатков.ТекущиеДанные;
	ТекущиеДанныеДоИзменения = РаботаСТабличнымиЧастямиКлиентСервер.КэшСтроки(Элементы.ТаблицаОстатков, ЭтотОбъект);
	
	Если ТекущиеДанные.Подобрано - ТекущиеДанныеДоИзменения.Подобрано > ТекущиеДанные.Количество Тогда
		
		ТекстСообщения = НСтр("ru = 'Подобранное количество не может превышать остаток в строке.'");
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаОстатков", ТекущиеДанные.НомерСтроки, "Подобрано");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле);
		
		ТекущиеДанные.Подобрано = ТекущиеДанныеДоИзменения.Подобрано;
		
	Иначе
		
		СтруктураДействий = Новый Структура;
		
		УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
			ЭтотОбъект,
			СтруктураДействий,
			"Подразделение",
			Истина);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтруктураДействий, "ПересчитатьКоличествоПоРНПТ") Тогда
			СтруктураДействий.ПересчитатьКоличествоПоРНПТ.ИменаПолейССуффиксом.Вставить("Количество",       "Подобрано");
			СтруктураДействий.ПересчитатьКоличествоПоРНПТ.ИменаПолейССуффиксом.Вставить("КоличествоПоРНПТ", "ПодобраноПоРНПТ");
		КонецЕсли;
		
		ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
		
		ТекущиеДанные.Количество =
			ТекущиеДанные.Количество + ТекущиеДанныеДоИзменения.Подобрано - ТекущиеДанные.Подобрано;
		
		ТекущиеДанные.КоличествоПоРНПТ =
			ТекущиеДанные.КоличествоПоРНПТ + ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ - ТекущиеДанные.ПодобраноПоРНПТ;
		
		Остаток         = Остаток - ТекущиеДанныеДоИзменения.Количество + ТекущиеДанные.Количество;
		ОстатокПоРНПТ   = ОстатокПоРНПТ - ТекущиеДанныеДоИзменения.КоличествоПоРНПТ + ТекущиеДанные.КоличествоПоРНПТ;
		
		Подобрано       = Подобрано - ТекущиеДанныеДоИзменения.Подобрано + ТекущиеДанные.Подобрано;
		ПодобраноПоРНПТ = ПодобраноПоРНПТ - ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ + ТекущиеДанные.ПодобраноПоРНПТ;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОстатковПодобраноПоРНПТПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаОстатков.ТекущиеДанные;
	ТекущиеДанныеДоИзменения = РаботаСТабличнымиЧастямиКлиентСервер.КэшСтроки(Элементы.ТаблицаОстатков, ЭтотОбъект);
	
	Если ТекущиеДанные.ПодобраноПоРНПТ - ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ > ТекущиеДанные.КоличествоПоРНПТ Тогда
		
		ТекстСообщения = НСтр("ru = 'Подобранное количество по РНПТ не может превышать остаток по РНПТ в строке.'");
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаОстатков", ТекущиеДанные.НомерСтроки, "ПодобраноПоРНПТ");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле);
		
		ТекущиеДанные.ПодобраноПоРНПТ = ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ;
		
	Иначе
		
		ТекущиеДанные.КоличествоПоРНПТ =
			ТекущиеДанные.КоличествоПоРНПТ + ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ - ТекущиеДанные.ПодобраноПоРНПТ;
		
		ОстатокПоРНПТ   = ОстатокПоРНПТ - ТекущиеДанныеДоИзменения.КоличествоПоРНПТ + ТекущиеДанные.КоличествоПоРНПТ;
		ПодобраноПоРНПТ = ПодобраноПоРНПТ - ТекущиеДанныеДоИзменения.ПодобраноПоРНПТ + ТекущиеДанные.ПодобраноПоРНПТ;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенести(Команда)
	
	ОчиститьСообщения();
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	
	РаспределитьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкаФормы

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	#Область СтандартноеОформление
	
	НоменклатураСервер.УстановитьУсловноеОформлениеНазначенияНоменклатуры(
		ЭтотОбъект,
		"ТаблицаОстатковНазначение",
		"ТаблицаОстатков.ТипНоменклатуры",
		Ложь);
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(
		ЭтотОбъект,
		Ложь,
		"ТаблицаОстатковСерия",
		"ТаблицаОстатков.СтатусУказанияСерий",
		"ТаблицаОстатков.ТипНоменклатуры");
	
	#Область Прослеживаемость
	
	ПараметрыУсловногоОформления = УчетПрослеживаемыхТоваровЛокализация.ПараметрыУстановкиУсловногоОформленияНомераГТД();
	
	ПараметрыУсловногоОформления.ПутьКПолюДатаДокумента     = "Дата";
	ПараметрыУсловногоОформления.ИмяПоляВводаНомераГТД      = "ТаблицаОстатковНомерГТД";
	ПараметрыУсловногоОформления.ПутьКПолюНомерГТД          = "ТаблицаОстатков.НомерГТД";
	ПараметрыУсловногоОформления.ПутьКПолюВедетсяУчетПоРНПТ = "ТаблицаОстатков.ВедетсяУчетПоРНПТ";
	ПараметрыУсловногоОформления.ПутьКПолюТипНоменклатуры   = "ТаблицаОстатков.ТипНоменклатуры";
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьУсловноеОформлениеНомераГТД(ЭтотОбъект, ПараметрыУсловногоОформления);
	
	ПараметрыУсловногоОформления = УчетПрослеживаемыхТоваровЛокализация.ПараметрыУстановкиУсловногоОформленияКоличестваПоРНПТ();
	ПараметрыУсловногоОформления.ИмяПоляВводаКоличествоПоРНПТ = "ТаблицаОстатковКоличествоПоРНПТ";
	ПараметрыУсловногоОформления.ИмяПоляЕдиницаИзмеренияТНВЭД = "ТаблицаОстатковЕдиницаИзмеренияТНВЭД";
	ПараметрыУсловногоОформления.ПутьКПолюВедетсяУчетПоРНПТ   = "ТаблицаОстатков.ВедетсяУчетПоРНПТ";
	ПараметрыУсловногоОформления.ПутьКПолюТипНоменклатуры     = "ТаблицаОстатков.ТипНоменклатуры";
	ПараметрыУсловногоОформления.ПутьКПолюДатаДокумента       = "Дата";
	ПараметрыУсловногоОформления.ПутьКПолюТипНомераГТД        = "";
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьУсловноеОформлениеКоличестваПоРНПТ(ЭтотОбъект, ПараметрыУсловногоОформления);
	
	#КонецОбласти
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормыСлужебные

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ПеренестиВДокумент = Истина;
		ВыполняетсяЗакрытие = Истина;
		
		Закрыть();
		
		Возврат;
		
	КонецЕсли;
	
	ВыполняетсяЗакрытие = Истина;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормыСлужебные

&НаСервере
Процедура РаспределитьНаСервере()
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.ПодборРНПТМатериала.РаспределитьНаСервере");
	
	Остаток         = 0;
	ОстатокПоРНПТ   = 0;
	Подобрано       = 0;
	ПодобраноПоРНПТ = 0;
	
	КРаспределению       = Норматив;
	КРаспределениюПоРНПТ = НормативПоРНПТ;
	
	Для Каждого ТекущиеДанные Из ТаблицаОстатков Цикл
		
		ТекущиеДанные.Количество       = ТекущиеДанные.Количество + ТекущиеДанные.Подобрано;
		ТекущиеДанные.КоличествоПоРНПТ = ТекущиеДанные.КоличествоПоРНПТ + ТекущиеДанные.ПодобраноПоРНПТ;
		
		ТекущиеДанные.Подобрано       = 0;
		ТекущиеДанные.ПодобраноПоРНПТ = 0;
		
		Если Не КРаспределению = 0 Тогда
			
			ТекущееКоличество       = Мин(КРаспределению, ТекущиеДанные.Количество);
			ТекущееКоличествоПоРНПТ = Мин(КРаспределениюПоРНПТ, ТекущиеДанные.КоличествоПоРНПТ);
			
			ТекущиеДанные.Количество       = ТекущиеДанные.Количество - ТекущееКоличество;
			ТекущиеДанные.КоличествоПоРНПТ = ТекущиеДанные.КоличествоПоРНПТ - ТекущееКоличествоПоРНПТ;
			
			ТекущиеДанные.Подобрано       = ТекущееКоличество;
			ТекущиеДанные.ПодобраноПоРНПТ = ТекущееКоличествоПоРНПТ;
			
			КРаспределению       = КРаспределению - ТекущееКоличество;
			КРаспределениюПоРНПТ = КРаспределениюПоРНПТ - ТекущееКоличествоПоРНПТ;
			
		КонецЕсли;
		
		Остаток = Остаток + ТекущиеДанные.Количество;
		ОстатокПоРНПТ = ОстатокПоРНПТ + ТекущиеДанные.КоличествоПоРНПТ;
		
		Подобрано = Подобрано + ТекущиеДанные.Подобрано;
		ПодобраноПоРНПТ = ПодобраноПоРНПТ + ТекущиеДанные.ПодобраноПоРНПТ;
		
	КонецЦикла;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ТаблицаОстатков.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаДанных

&НаСервере
Процедура ПрочитатьТаблицуОстатков()
	
	Если ЭтоАдресВременногоХранилища(АдресТаблицаОстатков) Тогда
		
		НомерСтроки = 1;
		
		Для Каждого ТекущиеДанные Из ПолучитьИзВременногоХранилища(АдресТаблицаОстатков) Цикл
			
			НоваяСтрока = ТаблицаОстатков.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
			НоваяСтрока.НомерСтроки = НомерСтроки;
			
			Остаток         = Остаток + НоваяСтрока.Количество;
			ОстатокПоРНПТ   = ОстатокПоРНПТ + НоваяСтрока.КоличествоПоРНПТ;
			Подобрано       = Подобрано + НоваяСтрока.Подобрано;
			ПодобраноПоРНПТ = ПодобраноПоРНПТ + НоваяСтрока.ПодобраноПоРНПТ;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицыОстатков()
	
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОстатков.Выгрузить(), АдресТаблицаОстатков);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Инициализация

ВыполняетсяЗакрытие = Ложь;

#КонецОбласти
