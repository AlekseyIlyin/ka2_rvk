
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Возврат при получении формы для анализа.
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ИмяТекущейСтраницы) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[Параметры.ИмяТекущейСтраницы];
		ТекущийЭлемент = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ВыбытиеРНПТМатериаловИзПроизводства"
			И Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаКВыбытию
		Или ИмяСобытия = "Запись_ПереносРНПТМатериаловНаПродукцию"
		Или ИмяСобытия = "Запись_ПроизводствоБезЗаказа"
		Или ИмяСобытия = "Принять_ФормаСозданныхДокументов"
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметр, "ИдентификаторФормыВладельца")
			И Параметр.ИдентификаторФормыВладельца = УникальныйИдентификатор Тогда
		ЗаполнитьТаблицуТоваров();
	КонецЕсли;
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаЖурналПрослеживаемыхОперацийОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.ЖурналДокументовПрослеживаемости.Форма");
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Элементы.ТоварыКОформлениюОрганизация.Видимость = Не ЗначениеЗаполнено(Организация);
	Элементы.ТоварыКВыбытиюОрганизация.Видимость    = Не ЗначениеЗаполнено(Организация);
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ТоварыКОформлениюОформить(Команда)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ВыполнитьДействияВФоне(ДействиеОформитьПереносРНПТ());
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ВыполнитьДействияВФонеЗавершение", ЭтотОбъект, ДействиеОформитьПереносРНПТ()),
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКВыбытиюОформить(Команда)
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ВыполнитьДействияВФоне(ДействиеОформитьВыбытиеРНПТ());
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ВыполнитьДействияВФонеЗавершение", ЭтотОбъект, ДействиеОформитьВыбытиеРНПТ()),
		ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКОформлениюОбновить(Команда)
	ЗаполнитьТаблицуТоваров();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКВыбытиюОбновить(Команда)
	ЗаполнитьТаблицуТоваров();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиФормы

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	#Область Характеристики
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект, "ТоварыКОформлениюХарактеристика", "ТоварыКОформлению.ХарактеристикиИспользуются");
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект, "ТоварыКВыбытиюХарактеристика", "ТоварыКВыбытию.ХарактеристикиИспользуются");
	
	#КонецОбласти
	
	#Область Серии
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтотОбъект, Ложь, "ТоварыКОформлениюСерия", "ТоварыКОформлению.СтатусУказанияСерий", "ТоварыКОформлению.ТипНоменклатуры");
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтотОбъект, Ложь, "ТоварыКВыбытиюСерия", "ТоварыКВыбытию.СтатусУказанияСерий", "ТоварыКВыбытию.ТипНоменклатуры");
	
	#КонецОбласти
	
	#Область Назначения
	
	// Без назначения, если назначение не заполнено.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыКОформлениюНазначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыКОформлению.Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<без назначения>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	// Без назначения, если назначение не заполнено.
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыКВыбытиюНазначение.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТоварыКВыбытию.Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<без назначения>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

&НаКлиенте
Процедура ЗаполнитьТаблицуТоваров()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаКОформлению Тогда
		Действие = ДействиеИзделияКОформлениюНомеровГТД();
	Иначе
		Действие = ДействиеОстаткиРНПТМатериаловВПроизводстве();
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ДлительнаяОперация = ВыполнитьДействияВФоне(Действие);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		ДлительнаяОперация,
		Новый ОписаниеОповещения("ВыполнитьДействияВФонеЗавершение", ЭтотОбъект, Действие),
		ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеКомандВФоне

&НаСервере
Функция ВыполнитьДействияВФоне(Действие)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	
	Если Действие = ДействиеОформитьПереносРНПТ() Тогда
		
		ПараметрыПроцедуры = Новый Структура();
		
		ПараметрыПроцедуры.Вставить(
			"ПараметрыФормыСозданныхДокументов",
			УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыФормыСозданныхДокументовРНПТМатериалов());
		
		ПараметрыПроцедуры.Вставить("СписокОшибок", Неопределено);
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "ТоварыКОформлению");
		
		ПараметрыОстатков = УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
		ПараметрыОстатков.ОтборПоТоварам = ОтборПоТоварамКОформлению(Элементы.ТоварыКОформлению.ВыделенныеСтроки);
		ПараметрыПроцедуры.Вставить("ПараметрыОстатков", ПараметрыОстатков);
		
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Учет РНПТ в производстве: Оформление переноса РНПТ.'");
		
		Возврат ДлительныеОперации.ВыполнитьВФоне(
					"Документы.ПереносРНПТМатериаловНаПродукцию.ЗаполнитьПоОстаткамВФоне",
					ПараметрыПроцедуры,
					ПараметрыВыполнения);
		
	ИначеЕсли Действие = ДействиеОформитьВыбытиеРНПТ() Тогда
		
		ПараметрыПроцедуры = Новый Структура();
		
		ПараметрыПроцедуры.Вставить(
			"ПараметрыФормыСозданныхДокументов",
			УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыФормыСозданныхДокументовРНПТМатериалов());
		
		ПараметрыПроцедуры.Вставить("СписокОшибок", Неопределено);
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "ТоварыКОформлению");
		
		ПараметрыОстатков = УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
		ПараметрыОстатков.ОтборПоТоварам = ОтборПоТоварамКВыбытию(Элементы.ТоварыКВыбытию.ВыделенныеСтроки);
		ПараметрыОстатков.ПоляУпорядочивания = "Организация, Подразделение";
		ПараметрыПроцедуры.Вставить("ПараметрыОстатков", ПараметрыОстатков);
		
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Учет РНПТ в производстве: Оформление выбытия РНПТ.'");
		
		Возврат ДлительныеОперации.ВыполнитьВФоне(
					"Документы.ВыбытиеРНПТМатериаловИзПроизводства.ЗаполнитьПоОстаткамВФоне",
					ПараметрыПроцедуры,
					ПараметрыВыполнения);
		
	ИначеЕсли Действие = ДействиеИзделияКОформлениюНомеровГТД() Тогда
		
		ПараметрыПроцедуры = Новый Структура();
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "ТоварыКОформлению");
		
		ПараметрыОстатков = УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
		ПараметрыОстатков.ПоляУпорядочивания = "Организация, МестоХранения, Номенклатура, Характеристика, Серия, Назначение";
		
		Если ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьЭлементОтбораВКоллекцию(ПараметрыОстатков.Отбор, "ОстаткиТоваров.Организация", "&Организация", "=");
			ПараметрыОстатков.ЗначенияПараметровОтбора.Вставить("Организация", Организация);
		КонецЕсли;
		
		ПараметрыПроцедуры.Вставить("ПараметрыОстатков", ПараметрыОстатков);
		
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Учет РНПТ в производстве: Обновление товаров к оформлению.'");
		
		Возврат ДлительныеОперации.ВыполнитьВФоне(
					"РегистрыНакопления.РНПТМатериаловВПроизводстве.ИзделияКОформлениюНомеровГТДВФоне",
					ПараметрыПроцедуры,
					ПараметрыВыполнения);
		
	ИначеЕсли Действие = ДействиеОстаткиРНПТМатериаловВПроизводстве() Тогда
		
		ПараметрыПроцедуры = Новый Структура();
		ПараметрыПроцедуры.Вставить("ПолеОшибки", "ТоварыКВыбытию");
		
		ПараметрыОстатков = УчетПрослеживаемыхТоваровВПроизводстве.ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
		ПараметрыОстатков.ПоляУпорядочивания = "Организация, ПартияПроизводства, Подразделение, Номенклатура, Характеристика, Серия, Назначение, НомерГТД";
		
		Если Отображать = 0 Тогда
			ПараметрыОстатков.ЗаполнитьРекомендуетсяВыбытие = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьЭлементОтбораВКоллекцию(ПараметрыОстатков.Отбор, "ОстаткиТоваров.Организация", "&Организация", "=");
			ПараметрыОстатков.ЗначенияПараметровОтбора.Вставить("Организация", Организация);
		КонецЕсли;
		
		ПараметрыПроцедуры.Вставить("ПараметрыОстатков", ПараметрыОстатков);
		
		ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Учет РНПТ в производстве: Обновление товаров к выбытию.'");
		
		Возврат ДлительныеОперации.ВыполнитьВФоне(
					"РегистрыНакопления.РНПТМатериаловВПроизводстве.ОстаткиРНПТМатериаловВПроизводствеВФоне",
					ПараметрыПроцедуры,
					ПараметрыВыполнения);
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьДействияВФонеЗавершение(Результат, Действие) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ПоказатьПредупреждение(, Результат.КраткоеПредставлениеОшибки);
	Иначе
		
		Если Действие = ДействиеОформитьПереносРНПТ()
			Или Действие = ДействиеОформитьВыбытиеРНПТ() Тогда
			
			РезультатВыполненияВФоне = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
			
			ПараметрыСозданныхДокументов = РезультатВыполненияВФоне.ПараметрыСозданныхДокументов;
			Если Не ПараметрыСозданныхДокументов.Параметры = Неопределено Тогда
				НакладныеКлиент.ОткрытьФормуСозданныхДокументов(ПараметрыСозданныхДокументов, ЭтотОбъект);
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(РезультатВыполненияВФоне.СписокОшибок);
			
		Иначе
			ЗагрузитьДанныеЗаполнения(Результат.АдресРезультата, Действие);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеЗаполнения(АдресРезультата, Действие)
	
	РезультатВыполненияВФоне = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если Действие = ДействиеИзделияКОформлениюНомеровГТД() Тогда
		
		ТоварыКОформлению.Загрузить(РезультатВыполненияВФоне.Товары);
		
	ИначеЕсли Действие = ДействиеОстаткиРНПТМатериаловВПроизводстве() Тогда
		
		ТоварыКВыбытию.Загрузить(РезультатВыполненияВФоне.Товары);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОтборПоТоварамКОформлению(Знач ВыделенныеСтроки)
	
	Результат =
		ТоварыКОформлению.Выгрузить(
			Новый Массив,
			"Организация, МестоХранения, Номенклатура, Характеристика, Серия, Назначение");
	
	Для Каждого ТекущийИдентификатор Из ВыделенныеСтроки Цикл
		ЗаполнитьЗначенияСвойств(Результат.Добавить(), ТоварыКОформлению.НайтиПоИдентификатору(ТекущийИдентификатор));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ОтборПоТоварамКВыбытию(Знач ВыделенныеСтроки)
	
	Результат =
		ТоварыКВыбытию.Выгрузить(
			Новый Массив,
			"Организация, ПартияПроизводства, Подразделение, Номенклатура, Характеристика, Серия, Назначение, НомерГТД");
	
	Для Каждого ТекущийИдентификатор Из ВыделенныеСтроки Цикл
		ЗаполнитьЗначенияСвойств(Результат.Добавить(), ТоварыКВыбытию.НайтиПоИдентификатору(ТекущийИдентификатор));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДействиеОформитьПереносРНПТ()
	
	Возврат "ДействиеОформитьПереносРНПТ";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДействиеОформитьВыбытиеРНПТ()
	
	Возврат "ДействиеОформитьВыбытиеРНПТ";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДействиеИзделияКОформлениюНомеровГТД()
	
	Возврат "ДействиеИзделияКОформлениюНомеровГТД";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДействиеОстаткиРНПТМатериаловВПроизводстве()
	
	Возврат "ДействиеОстаткиРНПТМатериаловВПроизводстве";
	
КонецФункции

#КонецОбласти

#КонецОбласти