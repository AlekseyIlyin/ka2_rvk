#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьЗначенияПоПараметрамФормы(Параметры);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	СвойстваСписка.ТекстЗапроса = ТекстЗапросаСпискаКОформлению();
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.КОформлению, СвойстваСписка);
	
	ОбновитьДанныеФормы();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УстановитьВидимостьДоступностьЭлементов();
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "КОформлению", "КОформлениюДатаОтгрузки");
	
	Гиперссылка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Обработка.ЖурналДокументовНДС").СформироватьГиперссылкуСмТакжеВРаботе(Неопределено);
	Если ЗначениеЗаполнено(Гиперссылка) Тогда
		МассивСтрок = Новый Массив;
		МассивСтрок.Добавить(НСтр("ru = 'См. также:'"));
		МассивСтрок.Добавить(Гиперссылка);
		СмТакжеВРаботе = Новый ФорматированнаяСтрока(МассивСтрок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ЗаявлениеОВвозеТоваровПолученное"
		ИЛИ ИмяСобытия = "Запись_РеализацияУслугПрочихАктивов"
		ИЛИ ИмяСобытия = "Запись_РеализацияТоваровУслуг"
		ИЛИ ИмяСобытия = "Запись_ПервичныйДокумент"
		ИЛИ ИмяСобытия = "Запись_НДССостоянияРеализация0" Тогда
		
		Элементы.КОформлению.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	Если ОрганизацияСохраненноеЗначение <> ОрганизацияОтбор Тогда
		
		УстановитьОтборыПоОрганизации();
		ОрганизацияСохраненноеЗначение = ОрганизацияОтбор;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КОформлению,
		"Контрагент",
		Контрагент,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(Контрагент));
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтгрузкиПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КОформлению,
		"ДатаОтгрузки",
		ДатаОтгрузки,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеЗаполнено(ДатаОтгрузки));
		
	Если ЗначениеЗаполнено(ДатаОтгрузки) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КОформлению,
			"ПодтвердитьДо",
			ДатаОтгрузки,
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			,
			Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(КОформлению,
			"ПодтвердитьДо",
			ОбщегоНазначенияКлиент.ДатаСеанса(),
			ВидСравненияКомпоновкиДанных.БольшеИлиРавно,
			,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СмТакжеВРаботеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// &ЗамерПроизводительности
	ИмяКлючевойОперации = СтрШаблон("Обработка.ЗаявлениеОВвозеТоваровПолученное.Форма.ФормаРабочееМесто.СмТакже.%1",
									НавигационнаяСсылкаФорматированнойСтроки);
	ОценкаПроизводительностиКлиент.ЗамерВремени(ИмяКлючевойОперации, Истина);
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	СтруктураБыстрогоОтбора = Новый Структура;
	
	Если ЗначениеЗаполнено(ОрганизацияОтбор) Тогда
		СтруктураБыстрогоОтбора.Вставить("Организация", ОрганизацияОтбор);
		ПараметрыФормы.Вставить("Организация", ОрганизацияОтбор);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		СтруктураБыстрогоОтбора.Вставить("Контрагент", Контрагент);
	КонецЕсли;
	
	ТекущаяДата = ОбщегоНазначенияКлиент.ДатаСеанса();
	Период = Элементы.КОформлению.Период;
	СтруктураБыстрогоОтбора.Вставить("Период", Период);
	СтруктураБыстрогоОтбора.Вставить("НачалоПериода", ?(ЗначениеЗаполнено(Период.ДатаНачала), Период.ДатаНачала, НачалоКвартала(ТекущаяДата)));
	ПараметрыФормы.Вставить("НачалоПериода", СтруктураБыстрогоОтбора.НачалоПериода);
	СтруктураБыстрогоОтбора.Вставить("КонецПериода", ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, КонецКвартала(ТекущаяДата)));
	ПараметрыФормы.Вставить("КонецПериода", СтруктураБыстрогоОтбора.КонецПериода);
	
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	ОткрытьФорму(НавигационнаяСсылкаФорматированнойСтроки, ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКОформлению

&НаКлиенте
Процедура КОформлениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеСтроки = Элементы.КОформлению.ДанныеСтроки(ВыбраннаяСтрока);
	ПоказатьЗначение(Неопределено, ДанныеСтроки.ДокументОтгрузки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗарегистрироватьЗаявлениеОВвозеТоваров(Команда)
	
	СоздатьДокументыНаОсновании();
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.КОформлению);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.КОформлению, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.КОформлению);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборыПоОрганизации()
	
	СписокОрганизаций = Новый СписокЗначений;
	СписокОрганизаций.Добавить(ОрганизацияОтбор);
	
	Если ЗначениеЗаполнено(ОрганизацияОтбор)
		И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс") Тогда
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ОбособленноеПодразделение
		|	И Организации.ГоловнаяОрганизация = &Организация
		|	И Организации.ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию");
		Запрос.УстановитьПараметр("Организация", ОрганизацияОтбор);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СписокОрганизаций.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		КОформлению,
		"Организация",
		СписокОрганизаций,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		ЗначениеЗаполнено(ОрганизацияОтбор));
	
	УстановитьВидимостьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступностьЭлементов()
	
	Элементы.ОрганизацияОтбор.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.КОформлениюОрганизация.Видимость = Не ЗначениеЗаполнено(ОрганизацияОтбор);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПоПараметрамФормы(Параметры)
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация", ОрганизацияОтбор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыНаОсновании()
	
	Список = Элементы.КОформлению;
	ТекущаяСтрока = Список.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если Список.ВыделенныеСтроки.Количество() = 1 И ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ТекущаяОрганизация = ТекущаяСтрока.Организация;
	ТекущийКонтрагент = ТекущаяСтрока.Контрагент;
	
	ДокументыОтгрузки = Новый Массив;

	Для Каждого ВыделеннаяСтрока Из Список.ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		Если ТекущаяОрганизация <> Список.ДанныеСтроки(ВыделеннаяСтрока).Организация Тогда
			ТекстПредупреждения = НСтр("ru = 'Выбраны документы отгрузки разных организаций.
			|Команда может быть выполнена только для одной организации и одного контрагента.'");
			ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		Если ТекущийКонтрагент <> Список.ДанныеСтроки(ВыделеннаяСтрока).Контрагент Тогда
			ТекстПредупреждения = НСтр("ru = 'Выбраны документы отгрузки разных контрагентов.
			|Команда может быть выполнена  только для одной организации и одного контрагента.'");
			ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		СтрокаЗаполненияТЧ = Новый Структура;
		СтрокаЗаполненияТЧ.Вставить("ДокументОтгрузки", Список.ДанныеСтроки(ВыделеннаяСтрока).ДокументОтгрузки);
		СтрокаЗаполненияТЧ.Вставить("СуммаОтгрузки", Список.ДанныеСтроки(ВыделеннаяСтрока).СуммаОтгрузки);
		СтрокаЗаполненияТЧ.Вставить("СуммаПоЗаявлению", Список.ДанныеСтроки(ВыделеннаяСтрока).СуммаДляПодтверждения0);
		СтрокаЗаполненияТЧ.Вставить("Валюта", Список.ДанныеСтроки(ВыделеннаяСтрока).Валюта);
		
		ДокументыОтгрузки.Добавить(СтрокаЗаполненияТЧ);

	КонецЦикла;
	
	Если ДокументыОтгрузки.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано ни одного документа для ввода на основании.'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("ДокументыОтгрузки", ДокументыОтгрузки);
	СтруктураЗаполнения.Вставить(" Организация", ТекущаяОрганизация);
	СтруктураЗаполнения.Вставить("Контрагент", ТекущийКонтрагент);
	СтруктураЗаполнения.Вставить("ХозяйственнаяОперация");
	СтруктураЗаполнения.Вставить("Склад");
	СтруктураЗаполнения.Вставить("Партнер");
	СтруктураЗаполнения.Вставить("Подразделение");
	СтруктураЗаполнения.Вставить("НаправлениеДеятельности");

	ПараметыОтборовДокументаОтгрузки(СтруктураЗаполнения, ТекущаяСтрока.ДокументОтгрузки);
	ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения", СтруктураЗаполнения);
	ОткрытьФорму("Документ.ЗаявлениеОВвозеТоваровПолученное.ФормаОбъекта", ПараметрыОткрытия, , Истина);
	
КонецПроцедуры

&НаСервереБезконтекста
Процедура ПараметыОтборовДокументаОтгрузки(СтруктураЗаполнения, ДокументОтгрузки)
	
	ОписаниеРеквизитов = "Партнер, Подразделение, НаправлениеДеятельности";
	
	Если ТипЗнч(ДокументОтгрузки) <> Тип("ДокументСсылка.ПервичныйДокумент") Тогда
		ОписаниеРеквизитов = ОписаниеРеквизитов + ", ХозяйственнаяОперация";
	КонецЕсли;
	
	Если ТипЗнч(ДокументОтгрузки) <> Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		И ТипЗнч(ДокументОтгрузки) <> Тип("ДокументСсылка.ПервичныйДокумент") Тогда
		ОписаниеРеквизитов = ОписаниеРеквизитов + ", Склад";
	Иначе
		СтруктураЗаполнения.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОтгрузки, ОписаниеРеквизитов);
	
	Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.ПервичныйДокумент") Тогда
		СтруктураЗаполнения.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтруктураЗаполнения, РеквизитыДокумента, ОписаниеРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()
	
	УстановитьОтборыПоОрганизации();
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаСпискаКОформлению()
	
	Возврат 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО Контрагенты.СтранаРегистрации = СтраныМира.Ссылка
	|ГДЕ
	|	СтраныМира.Ссылка <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И СтраныМира.УчастникЕАЭС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КРегистрации.ДокументРеализации КАК ДокументРеализации,
	|	КРегистрации.Организация КАК Организация,
	|	КРегистрации.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ДокументыОтгрузкиНДССостояниеРеализации0
	|ИЗ
	|	РегистрСведений.НДССостояниеРеализации0.СрезПоследних(
	|			,
	|			Контрагент В
	|					(ВЫБРАТЬ
	|						Контрагенты.Ссылка
	|					ИЗ
	|						Контрагенты)
	|				И Состояние В (ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение), ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))) КАК КРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузкиНДССостояниеРеализации0.ДокументРеализации КАК ДокументРеализации,
	|	РеестрДокументов.Валюта КАК Валюта,
	|	ДокументыОтгрузкиНДССостояниеРеализации0.Организация КАК Организация,
	|	ДокументыОтгрузкиНДССостояниеРеализации0.Контрагент КАК Контрагент,
	|	НАЧАЛОПЕРИОДА(РеестрДокументов.ДатаОтраженияВУчете, ДЕНЬ) КАК ДатаРеализации
	|ПОМЕСТИТЬ ДокументыОтгрузкиРеализации0
	|ИЗ
	|	ДокументыОтгрузкиНДССостояниеРеализации0 КАК ДокументыОтгрузкиНДССостояниеРеализации0
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО ДокументыОтгрузкиНДССостояниеРеализации0.ДокументРеализации = РеестрДокументов.Ссылка
	|ГДЕ
	|	РеестрДокументов.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВнеоборотныхАктивов),
	|	)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОтгрузкиНДССостояниеРеализации0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервичныйДокумент.Ссылка КАК ДокументРеализации,
	|	ПервичныйДокумент.СуммаДокумента КАК СуммаДокумента,
	|	НАЧАЛОПЕРИОДА(ПервичныйДокумент.Дата, ДЕНЬ) КАК ДатаРеализации,
	|	ПервичныйДокумент.Валюта КАК Валюта,
	|	ПервичныйДокумент.Организация КАК Организация,
	|	ПервичныйДокумент.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ПервичныйДокументРеализации0
	|ИЗ
	|	Документ.ПервичныйДокумент КАК ПервичныйДокумент
	|ГДЕ
	|	ПервичныйДокумент.Проведен
	|	И ПервичныйДокумент.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|	)
	|	И ПервичныйДокумент.ТипПервичногоДокумента = Значение(Перечисление.ТипыПервичныхДокументов.РеализацияКлиенту)
	|	И ПервичныйДокумент.Контрагент В
	|			(ВЫБРАТЬ
	|				Контрагенты.Ссылка
	|			ИЗ
	|				Контрагенты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Контрагенты
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументРеализации КАК ДокументРеализации,
	|	СУММА(ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаБезНДСВВалютеДокумента, 0)) КАК СуммаОтгрузки,
	|	ДокументыОтгрузки.ДатаРеализации КАК ДатаОтгрузки,
	|	ДокументыОтгрузки.Валюта КАК Валюта,
	|	ДокументыОтгрузки.Организация КАК Организация,
	|	ДокументыОтгрузки.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ДокументыОтгрузкиСумма
	|ИЗ
	|	ДокументыОтгрузкиРеализации0 КАК ДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ПО ДокументыОтгрузки.ДокументРеализации = ВыручкаИСебестоимостьПродаж.ЗаказКлиента
	|ГДЕ
	|	ВыручкаИСебестоимостьПродаж.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт), ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров), ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|	И ДокументыОтгрузки.ДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И НЕ ВыручкаИСебестоимостьПродаж.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга))
	|	И ВыручкаИСебестоимостьПродаж.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.ДокументРеализации,
	|	ДокументыОтгрузки.ДатаРеализации,
	|	ДокументыОтгрузки.Валюта,
	|	ДокументыОтгрузки.Организация,
	|	ДокументыОтгрузки.Контрагент
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументРеализации,
	|	СУММА(ЕСТЬNULL(ДвиженияКонтрагентДоходыРасходы.СуммаБезНДСВВалюте, 0)),
	|	ДокументыОтгрузки.ДатаРеализации,
	|	ДокументыОтгрузки.Валюта,
	|	ДокументыОтгрузки.Организация,
	|	ДокументыОтгрузки.Контрагент
	|ИЗ
	|	ДокументыОтгрузкиРеализации0 КАК ДокументыОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК ДвиженияКонтрагентДоходыРасходы
	|		ПО ДокументыОтгрузки.ДокументРеализации = ДвиженияКонтрагентДоходыРасходы.Регистратор
	|ГДЕ
	|	ДокументыОтгрузки.ДокументРеализации ССЫЛКА Документ.РеализацияУслугПрочихАктивов
	|	И НЕ ДвиженияКонтрагентДоходыРасходы.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияУслугПоАренде), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав))
	|	И ДвиженияКонтрагентДоходыРасходы.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.ДокументРеализации,
	|	ДокументыОтгрузки.ДатаРеализации,
	|	ДокументыОтгрузки.Валюта,
	|	ДокументыОтгрузки.Организация,
	|	ДокументыОтгрузки.Контрагент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервичныйДокумент.ДокументРеализации,
	|	ПервичныйДокумент.СуммаДокумента,
	|	ПервичныйДокумент.ДатаРеализации,
	|	ПервичныйДокумент.Валюта,
	|	ПервичныйДокумент.Организация,
	|	ПервичныйДокумент.Контрагент
	|ИЗ
	|	ПервичныйДокументРеализации0 КАК ПервичныйДокумент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузки.ДокументРеализации КАК ОформленныеОтгрузки,
	|	СУММА(ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.СуммаПоЗаявлению) КАК СуммаПоЗаявлению
	|ПОМЕСТИТЬ Оформленные
	|ИЗ
	|	ДокументыОтгрузкиРеализации0 КАК ДокументыОтгрузки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваровПолученное.ДокументыОтгрузки КАК ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки
	|		ПО ДокументыОтгрузки.ДокументРеализации = ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.ДокументОтгрузки
	|ГДЕ
	|	ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.Ссылка.Проведен
	
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОтгрузки.ДокументРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПервичныйДокументРеализации0.ДокументРеализации,
	|	СУММА(ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.СуммаПоЗаявлению)
	|ИЗ
	|	ПервичныйДокументРеализации0 КАК ПервичныйДокументРеализации0
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеОВвозеТоваровПолученное.ДокументыОтгрузки КАК ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки
	|		ПО ПервичныйДокументРеализации0.ДокументРеализации = ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.ДокументОтгрузки
	|ГДЕ
	|	ЗаявлениеОВвозеТоваровПолученноеДокументыОтгрузки.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервичныйДокументРеализации0.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОформленныеОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОтгрузкиРеализации0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПервичныйДокументРеализации0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОтгрузкиСумма.ДокументРеализации КАК ДокументОтгрузки,
	|	ДокументыОтгрузкиСумма.СуммаОтгрузки КАК СуммаОтгрузки,
	|	ДокументыОтгрузкиСумма.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ДОБАВИТЬКДАТЕ(ДокументыОтгрузкиСумма.ДатаОтгрузки, ГОД, 3) КАК ПодтвердитьДо,
	|	ДокументыОтгрузкиСумма.Валюта КАК Валюта,
	|	ДокументыОтгрузкиСумма.Организация КАК Организация,
	|	ДокументыОтгрузкиСумма.Контрагент КАК Контрагент,
	|	ДокументыОтгрузкиСумма.СуммаОтгрузки - ЕСТЬNULL(Оформленные.СуммаПоЗаявлению, 0) КАК СуммаДляПодтверждения0
	|ПОМЕСТИТЬ КОформлению
	|ИЗ
	|	ДокументыОтгрузкиСумма КАК ДокументыОтгрузкиСумма
	|		ЛЕВОЕ СОЕДИНЕНИЕ Оформленные КАК Оформленные
	|		ПО ДокументыОтгрузкиСумма.ДокументРеализации = Оформленные.ОформленныеОтгрузки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СуммаДляПодтверждения0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Оформленные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОтгрузкиСумма
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОформлению.ДокументОтгрузки КАК ДокументОтгрузки,
	|	КОформлению.СуммаОтгрузки КАК СуммаОтгрузки,
	|	КОформлению.ДатаОтгрузки КАК ДатаОтгрузки,
	|	КОформлению.ПодтвердитьДо КАК ПодтвердитьДо,
	|	КОформлению.Валюта КАК Валюта,
	|	КОформлению.Организация КАК Организация,
	|	КОформлению.Контрагент КАК Контрагент,
	|	КОформлению.СуммаДляПодтверждения0 КАК СуммаДляПодтверждения0
	|ИЗ
	|	КОформлению КАК КОформлению
	|ГДЕ
	|	КОформлению.СуммаДляПодтверждения0 > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КОформлению";
	
КонецФункции

#КонецОбласти