#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Заполнение

// Получить изделия к оформлению номеров ГТД в фоне.
// 
// Параметры:
//  Параметры - Структура - параметры выполнения процедуры
//  АдресРезультата - Строка - адрес результата
//
Процедура ЗаполнитьПоОстаткамВФоне(Параметры, АдресРезультата) Экспорт
	
	// &ЗамерПроизводительности
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Документ.ПереносРНПТМатериаловНаПродукцию.МодульМенеджера.ЗаполнитьПоОстаткамВФоне");
	
	СписокОшибок = Параметры.СписокОшибок;
	ПараметрыСозданныхДокументов = Новый Структура("ИмяФормы, Параметры");
	
	ТаблицаТоваров = РегистрыНакопления.РНПТМатериаловВПроизводстве.ИзделияКОформлениюНомеровГТД(Параметры);
	
	Если ТаблицаТоваров.Количество() = 1 Тогда
		
		ПараметрыЗаполнения = Новый Структура;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры, "ДокументОснование")
			И Не Параметры.ДокументОснование = Неопределено Тогда
			ПараметрыЗаполнения.Вставить("ДокументОснование", Параметры.ДокументОснование);
		КонецЕсли;
		
		Для Каждого ТекущаяКолонка Из ТаблицаТоваров.Колонки Цикл
			ПараметрыЗаполнения.Вставить(ТекущаяКолонка.Имя, ТаблицаТоваров[0][ТекущаяКолонка.Имя]);
		КонецЦикла;
		
		ПараметрыСозданныхДокументов.ИмяФормы = "Документ.ПереносРНПТМатериаловНаПродукцию.ФормаОбъекта";
		ПараметрыСозданныхДокументов.Параметры = Новый Структура("Основание", ПараметрыЗаполнения);
		
	ИначеЕсли ТаблицаТоваров.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			СписокОшибок,
			Параметры.ПолеОшибки,
			НСтр("ru = 'Отсутствуют изделия к оформлению РНПТ.'"));
	Иначе
		
		СозданныеДокументы = Новый Массив;
		
		Для Каждого ТекущиеДанные Из ТаблицаТоваров Цикл
			
			ПараметрыЗаполнения = Новый Структура;
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметры, "ДокументОснование")
				И Не Параметры.ДокументОснование = Неопределено Тогда
				ПараметрыЗаполнения.Вставить("ДокументОснование", Параметры.ДокументОснование);
			КонецЕсли;
			
			Для Каждого ТекущаяКолонка Из ТаблицаТоваров.Колонки Цикл
				ПараметрыЗаполнения.Вставить(ТекущаяКолонка.Имя, ТекущиеДанные[ТекущаяКолонка.Имя]);
			КонецЦикла;
			
			ДокументОбъект = Документы.ПереносРНПТМатериаловНаПродукцию.СоздатьДокумент();
			ДокументОбъект.Заполнить(ПараметрыЗаполнения);
			ДокументОбъект.Дата = ?(ЗначениеЗаполнено(ДокументОбъект.Дата), ДокументОбъект.Дата, ТекущаяДатаСеанса());
			
			// Всегда просто запись, так как таблица материалов всегда будет пустой, документ не может быть проведен.
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
			ИсторияРаботыПользователя.Добавить(ДокументОбъект.Ссылка);
			СозданныеДокументы.Добавить(ДокументОбъект.Ссылка);
			
		КонецЦикла;
		
		Владелец = Пользователи.АвторизованныйПользователь();
		УстановитьПривилегированныйРежим(Истина);
		ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(Владелец, СозданныеДокументы, Параметры.ПараметрыФормыСозданныхДокументов.КлючДанных);
		УстановитьПривилегированныйРежим(Ложь);
		
		ПараметрыСозданныхДокументов.ИмяФормы = "ОбщаяФорма.ФормаСозданныхДокументов";
		ПараметрыСозданныхДокументов.Параметры = Параметры.ПараметрыФормыСозданныхДокументов;
		ПараметрыСозданныхДокументов.Вставить("КоличествоСозданныхДокументов", СозданныеДокументы.Количество());
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(
		Новый Структура(
				"ПараметрыСозданныхДокументов, СписокОшибок",
				ПараметрыСозданныхДокументов, СписокОшибок),
		АдресРезультата);
	
	// &ЗамерПроизводительности
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ТаблицаТоваров.Количество());
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("ИсправлениеДокументов");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваровВПроизводстве");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка, ДокументОбъект - ссылка на документ или объект, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция таблиц данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПереносРНПТМатериаловНаПродукцию") Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРНПТМатериаловВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	ПроведениеДокументов.ДобавитьЗапросыСторноДвижений(Запрос, ТекстыЗапроса, Регистры, Метаданные.Документы.ПереносРНПТМатериаловНаПродукцию);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "МестоХранения, Дата";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
//
// Возвращаемое значение:
//  Структура - содержит ключи:
//    * Шапка  - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//    * Товары - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	#Область ПараметрыШапки
	
	Если ТипЗнч(Объект.МестоХранения) = Тип("СправочникСсылка.Склады") Тогда
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.МестоХранения, Ложь);
	Иначе
		ПараметрыСерийСклада = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
	КонецЕсли;
	
	ПараметрыШапки = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыШапки.ПолноеИмяОбъекта               = "Документ.ПереносРНПТМатериаловНаПродукцию";
	ПараметрыШапки.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыШапки.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыШапки.Дата                        = Объект.Дата;
	ПараметрыШапки.ТоварВШапке                 = Истина;
	ПараметрыШапки.ЭтоНакладная                = Истина;
	ПараметрыШапки.РегистрироватьСерии         = Ложь;
	ПараметрыШапки.ТолькоСерииДляСебестоимости = Истина;
	
	ПараметрыШапки.ИмяТЧТовары  = "";
	ПараметрыШапки.ИмяТЧСерии   = "";
	
	ПараметрыШапки.ИмяПоляСклад      = "МестоХранения";
	ПараметрыШапки.ИмяПоляКоличество = "КоличествоУпаковок";
	
	ПараметрыШапки.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыШапки.ИменаПолейДополнительные.Добавить("Назначение");
	
	#КонецОбласти
	
	#Область ПараметрыТовары
	
	ПараметрыСерийПроизводства = ПроизводствоСервер.ИспользованиеСерийВПроизводстве22();
	
	ПараметрыТоваров = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыТоваров.ПолноеИмяОбъекта = "Документ.ПереносРНПТМатериаловНаПродукцию";
	
	ПараметрыТоваров.ИмяПоляСклад = "Подразделение";
	ПараметрыТоваров.ИмяТЧТовары  = "Товары";
	ПараметрыТоваров.ИмяТЧСерии   = "Товары";
	
	ПараметрыТоваров.УчитыватьСебестоимостьПоСериям = ПараметрыСерийПроизводства.УчитыватьСебестоимостьПоСериям;
	ПараметрыТоваров.ИспользоватьСерииНоменклатуры  = ПараметрыСерийПроизводства.ИспользоватьСерииНоменклатуры;
	
	ПараметрыТоваров.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыТоваров.ПоляСвязи.Добавить("Подразделение");
	ПараметрыТоваров.ИменаПолейДополнительные.Добавить("Назначение");
	
	ПараметрыТоваров.ЭтоНакладная        = Истина;
	ПараметрыТоваров.РегистрироватьСерии = Ложь;
	
	ПараметрыТоваров.ПланированиеОтгрузки = Ложь;
	ПараметрыТоваров.ПланированиеОтбора   = Ложь;
	
	ПараметрыТоваров.Дата = Объект.Дата;
	
	#КонецОбласти
	
	ПараметрыУказанияСерий = Новый Структура;
	ПараметрыУказанияСерий.Вставить("Шапка",  ПараметрыШапки);
	ПараметрыУказанияСерий.Вставить("Товары", ПараметрыТоваров);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса.
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ТоварВШапке Тогда
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийШапки();
	Иначе
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийТоваров();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Назначения

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
//
//  Возвращаемое значение:
//  См. Справочники.Назначения.МакетФормыВыбораНазначений
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	// Шапка объекта
	Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.Назначение");
	
	// Наличие изделий на складе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Назначение", "Изделия");
	ОписаниеКолонок.УсловиеИспользования = "&ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	ОписаниеКолонок.КолонкиПоУмолчанию.Добавить("ВНаличии");
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад          = "Объект.МестоХранения";
	
	// Наличие работ в подразделении.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовРаботами", Истина, "Объект.Назначение", "Изделия");
	ОписаниеКолонок.УсловиеИспользования = "&ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	ОписаниеКолонок.КолонкиПоУмолчанию.Добавить("ВНаличии");
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение  = "Объект.МестоХранения";
	
	// Товары
	Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы, "Объект.Товары.Назначение");
	
	// РНПТ материалов в производстве
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "РНПТМатериаловВПроизводстве", Истина, "Объект.Товары.Назначение", "Материалы");
	
	ОписаниеКолонок.ПутиКДанным.Организация    = "Объект.Организация";
	ОписаниеКолонок.ПутиКДанным.Номенклатура   = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Подразделение  = "Объект.Товары.Подразделение";
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Задает логику ограничения доступа к данным.
// 
// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	И ЗначениеРазрешено(Подразделение)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//   Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Формирует описание реквизитов объекта, заполняемых по статистике их использования.
//
// Параметры:
//  ОписаниеРеквизитов - Структура - описание реквизитов, для которых необходимо получить значения по статистике
//
//
Процедура ЗадатьОписаниеЗаполняемыхРеквизитовПоСтатистике(ОписаниеРеквизитов) Экспорт
	
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Организация, Подразделение");
	
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Организация, Подразделение";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(
		ОписаниеРеквизитов, "Ответственный", Параметры);
	
КонецПроцедуры

#Область СозданиеНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//	КомандыСозданияНаОсновании - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//	Параметры - См. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ИсправлениеДокументов.ДобавитьКомандуИсправление(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	ИсправлениеДокументов.ДобавитьКомандуСторно(КомандыСозданияНаОсновании, ПустаяСсылка().Метаданные());
	
	БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания документа "Перенос РНПТ материалов на продукцию".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
// Возвращаемое значение:
// 	Неопределено, СтрокаТаблицыЗначений - описание добавленной команды
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПереносРНПТМатериаловНаПродукцию) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.ПереносРНПТМатериаловНаПродукцию.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Перенос РНПТ материалов на продукцию'");
		КомандаСоздатьНаОсновании.Обработчик = "УчетПрослеживаемыхТоваровВПроизводствеКлиент.ОформитьПереносРНПТМатериаловНаПродукцию";
		КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУчетПрослеживаемыхИмпортныхТоваров";
		КомандаСоздатьНаОсновании.МножественныйВыбор = Ложь;
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область Печать

// Переопределяет настройки печати для объекта.
//
// Параметры:
//  Настройки - см. УправлениеПечатью.НастройкиПечатиОбъекта.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
	
	Настройки.ПриДобавленииКомандПечати = Истина;
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти

// Определяет список команд отчетов.
//
// Параметры:
//	КомандыОтчетов - ТаблицаЗначений - Таблица с командами отчетов. Для изменения. См. описание 1 параметра процедуры
//										ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//	Параметры - Структура - Вспомогательные параметры. Для чтения. См. описание 2 параметра процедуры
//							ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов().
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

// Возвращает структуру с наименованием табличных частей документа, хранящих информацию о комплектации,
// а также сведения о товаре документа.
//
// Возвращаемое значение:
//	Структура - коллекция, содержащая следующие сведения документа:
//		* ШапкаДокумента - Структура - данные о товаре документа, которые содержат следующую информацию:
//			** АналитикаУчетаНоменклатуры - СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - аналитика товара.
//			** Номенклатура - СправочникСсылка.Номенклатура - номенклатура документа.
//			** Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - характеристика документа.
//			** Назначение - СправочникСсылка.Назначения - назначение товара.
//			** Серия - СправочникСсылка.СерииНоменклатуры - серия товара.
//			** СтатусУказанияСерий - Число - статус указания серии товара.
//			** Количество - Число - количество товара.
//			** КоличествоПоРНПТ - Число - прослеживаемое количество импортного товара.
//			** НомерГТД - СправочникСсылка.НомераГТД - номер ГТД товара.
//		* Товары - ТаблицаЗначений, ТабличнаяЧасть, Неопределено - данные о комплектации документа.
//	
Функция КоллекцияТабличныхЧастейТоваров() Экспорт
	
	ШапкаДокумента = Новый Структура;
	ШапкаДокумента.Вставить("АналитикаУчетаНоменклатуры", Справочники.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка());
	ШапкаДокумента.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	ШапкаДокумента.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	ШапкаДокумента.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
	ШапкаДокумента.Вставить("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ШапкаДокумента.Вставить("СтатусУказанияСерий", 0);
	ШапкаДокумента.Вставить("Количество", 0);
	ШапкаДокумента.Вставить("КоличествоПоРНПТ", 0);
	ШапкаДокумента.Вставить("НомерГТД", Справочники.НомераГТД.ПустаяСсылка());
	
	ТаблицыДокумента = Новый Структура;
	ТаблицыДокумента.Вставить("ШапкаДокумента", ШапкаДокумента);
	ТаблицыДокумента.Вставить("Товары");
	
	Возврат ТаблицыДокумента;
	
КонецФункции

#КонецОбласти

#Область Спецификации

// Имена реквизитов, от значений которых зависят параметры выбора спецификаций
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровВыбораСпецификаций() Экспорт
	
	ИменаРеквизитов = "";
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры выбора спецификаций для изделий, указанных в документе.
//
// Параметры:
//   Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров выбора спецификаций.
//
// Возвращаемое значение:
//   см. УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций
//
Функция ПараметрыВыбораСпецификаций(Объект) Экспорт
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыВыбораСпецификаций();
	
	ПараметрыВыбораСпецификаций.ДоступныеТипы.Добавить(Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	ПараметрыВыбораСпецификаций.ДоступныеСтатусы.Добавить(Перечисления.СтатусыСпецификаций.Действует);
	
	СвязиПараметровВыбора = Новый Структура(УправлениеДаннымиОбИзделияхКлиентСервер.ПоляСтруктурыДанныхОбИзделииДляВыбораСпецификации());
	
	СвязиПараметровВыбора.Номенклатура            = "Объект.Номенклатура";
	СвязиПараметровВыбора.Характеристика          = "Объект.Характеристика";
	СвязиПараметровВыбора.НачалоПроизводства      = "Объект.Дата";
	
	ПараметрыВыбораСпецификаций.СвязиПараметровВыбора.Вставить("Объект.Спецификация", СвязиПараметровВыбора);
	
	Возврат ПараметрыВыбораСпецификаций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Дата КАК ДатаРаспоряжения,
	|	Реквизиты.МестоХранения КАК МестоХранения,
	|	Реквизиты.Подразделение КАК Подразделение,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Количество КАК Количество,
	|	Реквизиты.Назначение КАК Назначение,
	|	Реквизиты.Серия КАК Серия,
	|	Реквизиты.Ответственный КАК Ответственный,
	|	Реквизиты.Комментарий КАК Комментарий,
	|	Реквизиты.ПометкаУдаления КАК ПометкаУдаления,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.Исправление КАК Исправление,
	|	Реквизиты.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	Реквизиты.ИсправляемыйДокумент КАК ИсправляемыйДокумент,
	|	НастройкиХозяйственныхОпераций.Ссылка КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	Документ.ПереносРНПТМатериаловНаПродукцию КАК Реквизиты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|	ПО Реквизиты.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|
	|ГДЕ
	|	Реквизиты.Ссылка В(&Ссылка)
	|";
	
	СтруктураПараметров = ОбщегоНазначенияУТ.ПерваяСтрокаРезультатаЗапросаВСтруктуру(Запрос.Выполнить());
	ОбщегоНазначенияУТ.УстановитьПараметрыЗапроса(Запрос, СтруктураПараметров);
	
	Запрос.УстановитьПараметр("НомерНаПечать",           ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(СтруктураПараметров.Номер));
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПереносРНПТМатериаловНаПродукцию"));
	
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	ПолноеИмяДокумента = "Документ.ПереносРНПТМатериаловНаПродукцию";
	
	ВЗапросеЕстьИсточник = Истина;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить(
		"ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ПолноеИмяДокумента));
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		ВЗапросеЕстьИсточник = Ложь;
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса =
			ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
				ТекстЗапроса,
				ПолноеИмяДокумента,
				СинонимТаблицыДокумента,
				ВЗапросеЕстьИсточник,
				ПереопределениеРасчетаПараметров);
		
	Иначе
		
		ТекстЗапроса =
			ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
				ТекстЗапроса,
				ПолноеИмяДокумента,
				СинонимТаблицыДокумента,
				ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;

КонецФункции

#Область ТекстыЗапроса

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка                                 КАК Ссылка,
	|	&Период                                 КАК ДатаДокументаИБ,
	|	&Номер                                  КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных                КАК ТипСсылки,
	|	&Организация                            КАК Организация,
	|	&ХозяйственнаяОперация                  КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                            КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                            КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                            КАК НаправлениеДеятельности,
	|	&МестоХранения                          КАК МестоХранения,
	|	&Подразделение                          КАК Подразделение,
	|	&Ответственный                          КАК Ответственный,
	|	&Комментарий                            КАК Комментарий,
	|	НЕОПРЕДЕЛЕНО                            КАК Валюта,
	|	0                                       КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                            КАК Статус,
	|	&Проведен                               КАК Проведен,
	|	&ПометкаУдаления                        КАК ПометкаУдаления,
	|	ЛОЖЬ                                    КАК ДополнительнаяЗапись,
	|	""""                                    КАК Дополнительно,
	|	&Период                                 КАК ДатаПервичногоДокумента,
	|	&Исправление                            КАК СторноИсправление,
	|	&СторнируемыйДокумент                   КАК СторнируемыйДокумент,
	|	&ИсправляемыйДокумент                   КАК ИсправляемыйДокумент,
	|	&НомерНаПечать                          КАК НомерПервичногоДокумента,
	|	&Период                                 КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО                            КАК Приоритет
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                КАК Организация,
	|	ВидыЗапасов.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ВидыЗапасов.Количество                      КАК Количество,
	|	0                                           КАК КоличествоПоРНПТ,
	|	&ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
	|	ИСТИНА                                      КАК Первичное
	|ИЗ
	|	Документ.ПереносРНПТМатериаловНаПродукцию.ВидыЗапасовИзделия КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка В(&Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация                           КАК Организация,
	|	ВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ВидыЗапасов.Количество                 КАК Количество,
	|	ВидыЗапасов.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ИСТИНА                                 КАК Первичное
	|ИЗ
	|	Документ.ПереносРНПТМатериаловНаПродукцию.ВидыЗапасовИзделия КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка В(&Ссылка)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРНПТМатериаловВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РНПТМатериаловВПроизводстве";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	ТаблицаТовары.ПартияПроизводства         КАК ПартияПроизводства,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	ТаблицаТовары.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПереносРНПТМатериаловНаПродукцию.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&Ссылка)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШапки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА СпрПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА СпрПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикаУчетаСерийПроизводство.ПолитикаУчетаСерий ЕСТЬ НЕ NULL
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикаУчетаСерийПроизводство.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 14
	|								ИНАЧЕ 13
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|	ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|	И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|	И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК СпрПолитикиУчетаСерий
	|	ПО СпрПолитикиУчетаСерий.Ссылка = ТоварыДляЗапроса.ВидНоменклатуры
	|	И СпрПолитикиУчетаСерий.Склад = &Склад
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ПолитикаУчетаСерийПроизводство
	|	ПО ТоварыДляЗапроса.ВидНоменклатуры = ПолитикаУчетаСерийПроизводство.Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Склад) = ТИП(Справочник.СтруктураПредприятия)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТоваров()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли