#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Инициализирует параметры заполнения видов запасов дополнительных свойств документа, используемых при записи документа
// в режиме 'Проведения' или 'Отмены проведения'.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.ПереносРНПТМатериаловНаПродукцию - документ, для которого выполняется инициализация параметров.
//	РежимЗаписи - РежимЗаписиДокумента - режим записи документа.
//
Процедура ИнициализироватьПараметрыЗаполненияВидовЗапасовДляПроведения(ДокументОбъект, РежимЗаписи = Неопределено) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов", ПараметрыЗаполненияВидовЗапасов(Ложь));
	
КонецПроцедуры

// Функция формирует временные данных документа.
//
// Возвращаемое значение:
//	МенеджерВременныхТаблиц - менеджер временных таблиц.
//
Функция ВременныеТаблицыДанныхДокумента() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Дата КАК Дата,
	|	&МестоХранения КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЛОЖЬ КАК ЕстьСделкиВТабличнойЧасти,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			И ЕСТЬNULL(Подразделения.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)) =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			И ЕСТЬNULL(Подразделения.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)) =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА &Менеджер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	КОНЕЦ КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Подразделения
	|	ПО Подразделения.Ссылка = &Подразделение
	|
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовараШапки.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовараШапки.Номенклатура КАК Номенклатура,
	|	ТаблицаТовараШапки.Характеристика КАК Характеристика,
	|	ТаблицаТовараШапки.Серия КАК Серия,
	|	ТаблицаТовараШапки.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТовараШапки.Назначение КАК Назначение,
	|	ТаблицаТовараШапки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовараШапки.Количество КАК Количество,
	|	ТаблицаТовараШапки.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаТовараШапки.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТовараШапки КАК ТаблицаТовараШапки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	&МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	&МестоХранения КАК Склад
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМатериалы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаМатериалы.НомерГТД КАК НомерГТД,
	|	ТаблицаМатериалы.Количество КАК Количество,
	|	ТаблицаМатериалы.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтМатериалы
	|ИЗ
	|	&ТаблицаМатериалы КАК ТаблицаМатериалы
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ДополнительныеСвойства.Свойство("ТаблицыЗаполненияВидовЗапасовПриОбмене")
			И ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене <> Неопределено Тогда
		ТаблицыДокумента = ДополнительныеСвойства.ТаблицыЗаполненияВидовЗапасовПриОбмене;
	Иначе
		ТаблицыДокумента = Документы.ПереносРНПТМатериаловНаПродукцию.КоллекцияТабличныхЧастейТоваров();
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента, ЭтотОбъект);
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента.ШапкаДокумента, ЭтотОбъект);
	КонецЕсли;
	
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Организация, Дата);
	ТаблицаТовараШапки          = СформироватьТаблицуТоваров(ТаблицыДокумента.ШапкаДокумента);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МестоХранения", МестоХранения);
	Запрос.УстановитьПараметр("Менеджер", Ответственный);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации", ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи);
	Запрос.УстановитьПараметр("ТаблицаТовараШапки", ТаблицаТовараШапки);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ВидыЗапасовИзделия);
	Запрос.УстановитьПараметр("ТаблицаМатериалы", ТаблицыДокумента.Товары);
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоПодразделениямМенеджерам",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоСделкам",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

// Заполняет реквизиты, хранящие информацию об аналитиках учета номенклатуры шапки документа,
// а также заполняет табличную часть 'ВидыЗапасовИзделия'.
//
// Параметры:
//	Отказ - Булево - признак того, что не удалось заполнить данные.
//	ТаблицыДокумента - см. Документы.ПереносРНПТМатериаловНаПродукцию.КоллекцияТабличныхЧастейТоваров.
//
Процедура ЗаполнитьВидыЗапасовПриОбмене(Отказ, ТаблицыДокумента) Экспорт
	
	Если ТаблицыДокумента <> Неопределено Тогда
		ЗаполнитьАналитикуУчетаНоменклатурыШапки();
		ЗаполнитьЗначенияСвойств(ТаблицыДокумента.ШапкаДокумента, ЭтотОбъект, "АналитикаУчетаНоменклатуры");
		ДополнительныеСвойства.Вставить("ТаблицыЗаполненияВидовЗапасовПриОбмене", ТаблицыДокумента);
	Иначе
		ИмяПараметра = "ТаблицыДокумента";
		ТекстИсключения = НСтр("ru = 'Для заполнения видов запасов не передан параметр ""%1"".'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ИмяПараметра);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаполнитьВидыЗапасов(Отказ);
	
	ДополнительныеСвойства.Удалить("ТаблицыЗаполненияВидовЗапасовПриОбмене");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокументПередЗаполнением();
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		ПоляСтроки =
			"МестоХранения, Номенклатура, Характеристика, Серия, Спецификация,
			|КоличествоУпаковок, Упаковка, Количество, КоличествоПоРНПТ, НомерГТД, ВедетсяУчетПоРНПТ";
		
		ТекущиеДанные = Новый Структура(ПоляСтроки);
		
		СтруктураДействий = Новый Структура;
		Если Не ЗначениеЗаполнено(КоличествоУпаковок) Тогда
			СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
		КонецЕсли;
		
		СтруктураЗаполненияСпецификации =
			УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДействияПроверитьЗаполнитьСпецификацию(
				ЭтотОбъект,
				ТекущиеДанные,
				УправлениеДаннымиОбИзделиях.ПараметрыВыбораСпецификаций(ЭтотОбъект, Документы.ПереносРНПТМатериаловНаПродукцию));
		
		СтруктураДействий.Вставить("ПроверитьЗаполнитьСпецификацию", СтруктураЗаполненияСпецификации);
		
		УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
		УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
			ЭтотОбъект,
			СтруктураДействий,
			"МестоХранения");
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЭтотОбъект);
		ТекущиеДанные.НомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");
		
		ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(
			ТекущиеДанные,
			СтруктураДействий,
			ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
		
		ПараметрыУказанияСерий = Документы.ПереносРНПТМатериаловНаПродукцию.ПараметрыУказанияСерий(ЭтотОбъект);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ЭтотОбъект, ПараметрыУказанияСерий.Шапка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПереносРНПТМатериаловНаПродукцию") Тогда
		
		ИсправлениеДокументов.ЗаполнитьИсправление(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВидыЗапасовИзделия.Очистить();
	ВидыЗапасовУказаныВручную = Ложь;
	
	ИсправлениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	#Область ПроверкаХарактеристик
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры")
		И Не Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаСерий
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПереносРНПТМатериаловНаПродукцию);
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(ПараметрыУказанияСерий.Шапка);
	МассивПараметров.Добавить(ПараметрыУказанияСерий.Товары);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект, МассивПараметров, Отказ, МассивНепроверяемыхРеквизитов);
	
	#КонецОбласти
	
	#Область Количество
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ИмяТЧ = "Объект";
	НоменклатураСервер.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	
	#КонецОбласти
	
	#Область Товары
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	ПараметрыПроверки = ЗапасыСервер.ПараметрыПроверкиЗаполненияНомеровГТД();
	ПараметрыПроверки.ПроверятьРаботы       = Истина;
	
	ЗапасыСервер.ПроверитьЗаполнениеНомеровГТД(ЭтотОбъект, Отказ, ПараметрыПроверки);
	
	#КонецОбласти
	
	ИсправлениеДокументов.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеКоличестваПоРНПТ(ЭтотОбъект, Отказ, Неопределено);
	УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(ЭтотОбъект, Товары, Дата);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ИсправлениеДокументов.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	Если Не УчетПрослеживаемыхТоваровЛокализация.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(Дата) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'На дату документа учет прослеживаемых товаров не ведется. Проверьте дату документа.'"),
			ЭтотОбъект,
			"Дата",,
			Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Подразделение)
		И ТипЗнч(МестоХранения) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		Подразделение = МестоХранения;
	КонецЕсли;
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПереносРНПТМатериаловНаПродукцию);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Шапка);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Товары);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьАналитикуУчетаНоменклатуры();
		ЗаполнитьВидыЗапасов(Отказ);
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасовИзделия.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Автор) И ЭтоНовый() Тогда
		Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ПриЗаписиДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ЭтотОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокументПередЗаполнением()
	
	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПереносРНПТМатериаловНаПродукцию;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	Автор = Пользователи.ТекущийПользователь();
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьАналитикуУчетаНоменклатуры()
	
	ЗаполнитьАналитикуУчетаНоменклатурыШапки();
	ЗаполнитьАналитикуУчетаНоменклатурыТоваров();
	
КонецПроцедуры

Процедура ЗаполнитьАналитикуУчетаНоменклатурыШапки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПоляАналитики = "Номенклатура, Характеристика, Серия, Склад, Назначение";
	ПараметрыАналитики = Новый Структура(ПоляАналитики);
	ЗаполнитьЗначенияСвойств(ПараметрыАналитики, ЭтотОбъект);
	ПараметрыАналитики.Склад = МестоХранения;
	
	АналитикаУчетаНоменклатуры = РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(ПараметрыАналитики);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьАналитикуУчетаНоменклатурыТоваров()
	
	МестаУчета =
		РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(Неопределено, Неопределено, Неопределено, Неопределено);
	
	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.Работа       = "Подразделение";
	ИменаПолей.Произвольный = "Подразделение";
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(Товары, МестаУчета, ИменаПолей);
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

Функция СформироватьТаблицуТоваров(РеквизитыШапки)
	
	ТаблицаТоваров = Новый ТаблицаЗначений;
	ТаблицаТоваров.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("АналитикаУчетаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаТоваров.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	ТаблицаТоваров.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаТоваров.Колонки.Добавить("СтатусУказанияСерий", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("КоличествоПоРНПТ", Новый ОписаниеТипов("Число"));
	ТаблицаТоваров.Колонки.Добавить("НомерГТД", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	
	ЗаполнитьЗначенияСвойств(ТаблицаТоваров.Добавить(), РеквизитыШапки);
	ТаблицаТоваров[0].НомерСтроки = 1;
	
	Возврат ТаблицаТоваров;
	
КонецФункции

// Процедура заполнения табличной части "Виды запасов документа".
//
// Параметры:
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц		= ВременныеТаблицыДанныхДокумента();
	ПерезаполнитьВидыЗапасов	= ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ЭтотОбъект);
	
	ВидыЗапасовПерезаполнены = Ложь;
	
	Если Не Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитов(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТовараШапки(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов(Истина);
		
		ДополнительныеСвойства.Вставить("КонтролироватьНомераГТД", Ложь);
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ЭтотОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполнения);
		
		ВидыЗапасовИзделия.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД", "Количество, КоличествоПоРНПТ");
		
		ВидыЗапасовПерезаполнены = Истина;
		
	КонецЕсли;
	
	Если ВидыЗапасовПерезаполнены
		Или ПроверитьИзменениеМатериалов(МенеджерВременныхТаблиц) Тогда
		РаспределитьНомераГТД(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьИзменениеРеквизитов(МенеджерВременныхТаблиц)
	
	ИменаРеквизитов = "Организация, Дата";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Функция ПроверитьИзменениеТовараШапки(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
	|	ИЛИ НЕ СУММА(ТаблицаТоваров.КоличествоПоРНПТ) = 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат Не РезультатЗапрос.Пустой();
	
КонецФункции

Функция ПроверитьИзменениеМатериалов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД
	|ИЗ (ВЫБРАТЬ
	|		Материалы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Материалы.НомерГТД КАК НомерГТД,
	|		Материалы.Количество КАК Количество,
	|		Материалы.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ВтМатериалы КАК Материалы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Материалы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Материалы.НомерГТД КАК НомерГТД,
	|		-Материалы.Количество КАК Количество,
	|		-Материалы.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|	ИЗ
	|		Документ.ПереносРНПТМатериаловНаПродукцию.Товары КАК Материалы
	|	ГДЕ
	|		Материалы.Ссылка = &Ссылка
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаТоваров.Количество) = 0
	|	ИЛИ НЕ СУММА(ТаблицаТоваров.КоличествоПоРНПТ) = 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат Не РезультатЗапрос.Пустой();
	
КонецФункции

Функция ПараметрыЗаполненияВидовЗапасов(ЗаполнениеВидовЗапасов)
	
	ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
	ПараметрыЗаполнения.ИмяТЧВидыЗапасов                   = "ВидыЗапасовИзделия";
	ПараметрыЗаполнения.ПодбиратьВидыЗапасовПоИнтеркампани = Ложь;
	ПараметрыЗаполнения.ДокументДелаетИПриходИРасход       = Истина;
	ПараметрыЗаполнения.ЕстьОтборПоНомеруГТД               = Истина;
	
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Очистить();
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	ПараметрыЗаполнения.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Работа);
	
	ПараметрыЗаполнения.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПраваПользователяПовтИсп.РазрешитьОформлениеВыпускаЗаднимЧислом();
	
	ПараметрыЗаполнения.ТаблицаРеквизитовВидовЗапасовПоУмолчанию =
		?(ЗаполнениеВидовЗапасов,
			ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение(),
			ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение());
	
	ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение.Вставить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи, "Никогда");
	ПараметрыЗаполнения.СторнируемыйДокумент = СторнируемыйДокумент;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура РаспределитьНомераГТД(Отказ) Экспорт
	
	ИменаКолонок = "АналитикаУчетаНоменклатуры, НомерГТД, Количество, КоличествоПоРНПТ";
	ТаблицаПроселживаемости = ЗакупкиСервер.ПолучитьПрослеживаемыеНомераГТД(Товары.Выгрузить(, ИменаКолонок));
	
	ПараметрыСоздания = ЗакупкиСервер.ПараметрыПоискаИлиСозданияСоставныхПрослеживаемыхКомплектов();
	ПараметрыСоздания.ИзвлечьНоменклатуруИзОбъектаВКолонке = ТаблицаПроселживаемости.Колонки.АналитикаУчетаНоменклатуры.Имя;
	ПараметрыСоздания.ИзвлечьХарактеристикуИзОбъектаВКолонке = ТаблицаПроселживаемости.Колонки.АналитикаУчетаНоменклатуры.Имя;
	ПараметрыСоздания.ИзвлечьСериюИзОбъектаВКолонке = ТаблицаПроселживаемости.Колонки.АналитикаУчетаНоменклатуры.Имя;
	ПараметрыСоздания.НоменклатураШапки = Номенклатура;
	ПараметрыСоздания.ХарактеристикаШапки = Характеристика;
	ПараметрыСоздания.СерияШапки = Серия;
	
	СоставныеПрослеживаемыеНомераГТД =
		ЗакупкиСервер.НайтиИлиСоздатьСоставныеПрослеживаемыеНомераГТД(
			ТаблицаПроселживаемости,
			Количество,
			Дата,
			Отказ,
			ПараметрыСоздания);
	
	КоличествоШапка = Количество;
	КоличествоПоРНПТШапка = КоличествоПоРНПТ;
	
	НомерГТДТекущий = СоставныеПрослеживаемыеНомераГТД.ОсновнойСоставнойНомерГТД;
	
	Для Каждого ТекущиеДанные Из ВидыЗапасовИзделия Цикл
		
		ТекущиеДанные.НомерГТД = НомерГТДТекущий;
		
		КоличествоТекущее = Мин(ТекущиеДанные.Количество, КоличествоШапка);
		
		// Если есть РНПТ погрешности округления и мы начинаем работать с крайней единицей видов запасов изделия,
		// то текущую строку надо разбить на две, если ее количество превышает остаточную единицу,
		// для всех оставшихся строк в качестве НомерГТД будет установлен ОстаточныйСоставнойНомерГТД.
		Если Не СоставныеПрослеживаемыеНомераГТД.ОстаточныйСоставнойНомерГТД = Неопределено
			И Не НомерГТДТекущий = СоставныеПрослеживаемыеНомераГТД.ОстаточныйСоставнойНомерГТД
			И КоличествоШапка - КоличествоТекущее <= 1 Тогда
			
			КоличествоТекущее = КоличествоШапка - 1;
			КоличествоНовое = ТекущиеДанные.Количество - КоличествоТекущее;
			
			ТекущиеДанные.Количество = КоличествоТекущее;
			
			НомерГТДТекущий = СоставныеПрослеживаемыеНомераГТД.ОстаточныйСоставнойНомерГТД;
			
			НоваяСтрока = ВидыЗапасовИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
			НоваяСтрока.НомерГТД = НомерГТДТекущий;
			НоваяСтрока.Количество = КоличествоНовое;
			НоваяСтрока.КоличествоПоРНПТ = КоличествоПоРНПТШапка * КоличествоНовое / КоличествоШапка;
			
			КоличествоШапка = КоличествоШапка - КоличествоНовое;
			КоличествоПоРНПТШапка = КоличествоПоРНПТШапка - НоваяСтрока.КоличествоПоРНПТ;
			
		КонецЕсли;
		
		ТекущиеДанные.КоличествоПоРНПТ = КоличествоПоРНПТШапка * КоличествоТекущее / КоличествоШапка;
		
		КоличествоШапка = КоличествоШапка - КоличествоТекущее;
		КоличествоПоРНПТШапка = КоличествоПоРНПТШапка - ТекущиеДанные.КоличествоПоРНПТ;
		
		Если КоличествоШапка = 0 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ТекущиеДанный Из ВидыЗапасовИзделия.НайтиСтроки(Новый Структура("Количество", 0)) Цикл
		ВидыЗапасовИзделия.Удалить(ТекущиеДанный);
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗаполнение()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                             КАК НомерСтроки,
	|	КлючиАналитики.Ссылка                         КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                  КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)   КАК НомерГТД,
	|	&Организация                                  КАК ВладелецТовара,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ВЫБОР
	|		КОГДА КлючиАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                         КАК ТипЗапасов
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|ГДЕ
	|	КлючиАналитики.Ссылка = &АналитикаУчетаНоменклатуры
	|";
	
	Запрос.УстановитьПараметр("Организация",                Организация);
	Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", АналитикаУчетаНоменклатуры);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ТаблицаРеквизитовВидовЗапасовПоУмолчаниюПроведение()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1                                             КАК НомерСтроки,
	|	РеквизитыДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РеквизитыДокумента.Организация                КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)   КАК НомерГТД,
	|	РеквизитыДокумента.Организация                КАК ВладелецТовара,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ВЫБОР
	|		КОГДА РеквизитыДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                         КАК ТипЗапасов
	|ИЗ
	|	Документ.ПереносРНПТМатериаловНаПродукцию КАК РеквизитыДокумента
	|ГДЕ
	|	РеквизитыДокумента.Ссылка = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат ЗапасыСервер.ТаблицаРеквизитовВидовЗапасовПоУмолчаниюЗапросом(Запрос);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли