#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ.

&НаКлиенте
Перем ПараметрыДляЗаписи Экспорт;

&НаКлиенте
Перем СерияРедактируетсяВШапке; //используется для определения, что форма подбора серий вызвана для серии, указанной в шапке

&НаКлиенте
Перем ТекущиеДанныеИдентификатор;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Справочники.Назначения.ФормаДокументаПриСозданииНаСервере(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		УстановитьДоступностьСерииВШапке();
		
	КонецЕсли;
	
	УстановитьДоступностьКомандБуфераОбмена();
	
	ИсправлениеДокументов.ПриСозданииНаСервере(ЭтотОбъект, Элементы.СтрокаИсправление);
	
	// СтандартныеПодсистемы.ПодключаемоеОборудование
	ОбщегоНазначенияУТ.НастроитьПодключаемоеОборудование(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.СобытияФорм
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.СобытияФорм
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	ИсправлениеДокументов.ПриЧтенииНаСервере(ЭтотОбъект, Элементы.СтрокаИсправление);
	
	// СтандартныеПодсистемы.ДатыЗапрета
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапрета
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(Элементы.Товары, КэшированныеЗначения, ПараметрыУказанияСерий.Товары);
	
	// СтандартныеПодсистемы.ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПриОткрытииФормы(Неопределено, ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НоменклатураКлиент.ЭтоУказаниеСерий(ИсточникВыбора) Тогда
		
		Если СерияРедактируетсяВШапке Тогда
			НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Шапка, ВыбранноеЗначение);
			НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
		Иначе
			НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Товары, ВыбранноеЗначение);
		КонецЕсли;
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.ПодборРНПТПоОстаткам" Тогда
		ОбработкаПодбораПоОстаткам(ВыбранноеЗначение);
	ИначеЕсли ИсточникВыбора.ИмяФормы = "РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.ПодборПоСпецификации" Тогда
		ОбработкаПодбораПоСпецификации(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" И МенеджерОборудованияУТКлиент.ЕстьНеобработанноеСобытие() Тогда
			ОбработатьШтрихкоды(МенеджерОборудованияУТКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр));
		КонецЕсли;
	КонецЕсли;
	
	// Неизвестные штрихкоды
	Если Источник = "ПодключаемоеОборудование"
		И ИмяСобытия = "НеизвестныеШтрихкоды"
		И Параметр.ФормаВладелец = УникальныйИдентификатор Тогда
		
		КэшированныеЗначения.Штрихкоды.Очистить();
		ДанныеШтрихкодов = Новый Массив;
		Для Каждого ПолученныйШтрихкод Из Параметр.ПолученыНовыеШтрихкоды Цикл
			ДанныеШтрихкодов.Добавить(ПолученныйШтрихкод);
		КонецЦикла;
		Для Каждого ПолученныйШтрихкод Из Параметр.ЗарегистрированныеШтрихкоды Цикл
			ДанныеШтрихкодов.Добавить(ПолученныйШтрихкод);
		КонецЦикла;
		
		ОбработатьШтрихкоды(ДанныеШтрихкодов);
		
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемоеОборудование
	
	// СтандартныеПодсистемы.БуферОбмена
	Если ИмяСобытия = "КопированиеСтрокВБуферОбмена" Тогда
		УстановитьДоступностьКомандБуфераОбменаНаКлиенте();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.БуферОбмена
	
	ИсправлениеДокументовКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);

	Если НеВыполнятьПроверкуПередЗаписью Тогда
		НеВыполнятьПроверкуПередЗаписью = Ложь;
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияУТКлиент.ЗаписатьОбъектПриНеобходимости(ЭтотОбъект, ПараметрыЗаписи, Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ПереносРНПТМатериаловНаПродукцию");
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтотОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьСлужебныеРеквизитыФормы();
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
	СобытияФорм.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	ПринудительноЗакрытьФорму = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// СтандартныеПодсистемы.ПодключаемоеОборудование
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПриЗакрытииФормы(Неопределено, ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемоеОборудование
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	// СтандартныеПодсистемы.Свойства
	Если ЭтотОбъект.ПараметрыСвойств.Свойство(ТекущаяСтраница.Имя)
		И Не ЭтотОбъект.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация Тогда
		СвойстваВыполнитьОтложеннуюИнициализацию();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаИсправлениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ИсправлениеДокументовКлиент.СтрокаИсправлениеОбработкаНавигационныйСсылки(
		ЭтотОбъект, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
		
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормыВкладкаОсновное

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	НоменклатураПриИзмененииСервер(КэшированныеЗначения);
	НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = ТекущиеДанныеИзШапкиОбъекта(ЭтотОбъект);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Объект);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(
		"ХарактеристикаПриИзмененииПереопределяемый",
		Новый Структура("ИмяФормы, ИмяТабличнойЧасти", ИмяФормы, "Объект"));
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
	
	УстановитьОформлениеХарактеристики(ЭтотОбъект);
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусСерийВШапке(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка) Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	ВыбранноеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	ВыбранноеЗначение.Значение = Объект.Серия;
	
	НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Шапка, ВыбранноеЗначение);
	НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	
КонецПроцедуры

&НаКлиенте
Процедура СерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьПодборСерий(Истина,Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоУпаковокПриИзменении(Элемент)
	
	ТекущиеДанные = ТекущиеДанныеИзШапкиОбъекта(ЭтотОбъект);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Объект);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковокШапки(ЭтотОбъект, СтруктураДействий);
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусСерийВШапке(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка) Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	
	ТекущиеДанные = ТекущиеДанныеИзШапкиОбъекта(ЭтотОбъект);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Объект);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Объект,
		СтруктураДействий,
		"МестоХранения");
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусСерийВШапке(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка) Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоХраненияПриИзменении(Элемент)
	
	МестоХраненияПриИзмененииСервер();
	НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусУказанияСерийНажатие(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанныеИдентификатор = Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор();
	ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, Истина);
	
	ОписаниеОповещения =
		Новый ОписаниеОповещения(
				"СтатусУказанияСерийНажатиеЗавершение",
				ЭтотОбъект,
				Новый Структура("ПараметрыФормыУказанияСерий", ПараметрыФормыУказанияСерий));
	
	ОткрытьФорму(
		ПараметрыФормыУказанияСерий.ИмяФормы,
		ПараметрыФормыУказанияСерий,
		ЭтотОбъект,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусыСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары) Тогда
		
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		ТоварыПослеРедактированияНаСервере(ТекущиеДанные.ПолучитьИдентификатор(), КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусыСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары, Истина) Тогда
		
		ТоварыПослеРедактированияНаСервере(Неопределено, КэшированныеЗначения);
		НоменклатураКлиент.ОбновитьКешированныеЗначенияДляУчетаСерий(Элемент, КэшированныеЗначения, ПараметрыУказанияСерий.Товары);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПроизводстваНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация",                    Объект.Организация);
	СтруктураОтбора.Вставить("ИсключатьПроизводствоНаСтороне", Истина);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НачалоПериода",    НачалоМесяца(Объект.Дата));
	ПараметрыФормы.Вставить("ОкончаниеПериода", КонецМесяца(Объект.Дата));
	ПараметрыФормы.Вставить("СтруктураОтбора",  СтруктураОтбора);
	ПараметрыФормы.Вставить("ОдиночныйВыбор",   Истина);
	
	Оповещение = Новый ОписаниеОповещения("ТоварыПартияПроизводстваНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ПодборПартийПроизводства",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПодразделениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	
	ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, ТекущиеДанные.Подразделение, ПараметрыУказанияСерий.Товары);
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Объект,
		СтруктураДействий,
		"Подразделение",
		Истина);
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыТаблицы(ЭтотОбъект, СтруктураДействий);
	ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, ТекущиеДанные.Подразделение, ПараметрыУказанияСерий.Товары);
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить(
		"ХарактеристикаПриИзмененииПереопределяемый",
		Новый Структура("ИмяФормы, ИмяТабличнойЧасти", ИмяФормы, "Товары"));
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(ЭтотОбъект, СтруктураДействий);
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьПодборСерий(Ложь, Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСерияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ВыбранноеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	
	ВыбранноеЗначение.Значение                   = ТекущиеДанные.Серия;
	ВыбранноеЗначение.ИдентификаторТекущейСтроки = ТекущиеДанные.ПолучитьИдентификатор();
	
	НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтотОбъект, ПараметрыУказанияСерий.Товары, ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерГТДПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Объект,
		СтруктураДействий,
		"Подразделение",
		Истина);
	
	ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УказатьСерииВШапке(Команда)
	
	ОткрытьПодборСерий(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыЗапасов(Команда)
	
	ФинансыКлиент.ОткрытьВидыЗапасов(ЭтотОбъект, ПараметрыРедактированияВидовЗапасов());
	
КонецПроцедуры

&НаКлиенте
Процедура РазбитьСтроку(Команда)
	
	ТаблицаФормы  = Элементы.Товары;
	ДанныеТаблицы = Объект.Товары;
	
	ПараметрыРазбиенияСтроки = РаботаСТабличнымиЧастямиКлиент.ПараметрыРазбиенияСтроки();
	ПараметрыРазбиенияСтроки.ИмяПоляКоличество = "Количество";
	
	Оповещение = Новый ОписаниеОповещения("РазбитьСтрокуЗавершение", ЭтотОбъект);
	РаботаСТабличнымиЧастямиКлиент.РазбитьСтроку(ДанныеТаблицы, ТаблицаФормы, Оповещение, ПараметрыРазбиенияСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьСтроки(Команда)
	
	КоличествоТоваровДоВставки = Объект.Товары.Количество();
	
	ПолучитьСтрокиИзБуфераОбмена();
	
	КоличествоВставленных = Объект.Товары.Количество()-КоличествоТоваровДоВставки;
	РаботаСТабличнымиЧастямиКлиент.ОповеститьПользователяОВставкеСтрок(КоличествоВставленных);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтроки(Команда)
	
	Если РаботаСТабличнымиЧастямиКлиент.ВыбранаСтрокаДляВыполненияКоманды(Элементы.Товары) Тогда
		СкопироватьСтрокиНаСервере();
		РаботаСТабличнымиЧастямиКлиент.ОповеститьПользователяОКопированииСтрок(Элементы.Товары.ВыделенныеСтроки.Количество());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	
	ОчиститьСообщения();
	
	Оповещение = Новый ОписаниеОповещения("ПоискПоШтрихкодуЗавершение", ЭтотОбъект);
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Организация", Объект.Организация);
	ПараметрыЗаполнения.Вставить("Назначение",  Объект.Назначение);
	ПараметрыЗаполнения.Вставить("Регистратор", Объект.Ссылка);
	ПараметрыЗаполнения.Вставить("Дата",        Объект.Дата);
	
	ЗаполнитьПоОстаткамНаСервере(ПараметрыЗаполнения);
	
	ОткрытьФорму(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.ПодборРНПТПоОстаткам",
		ПараметрыЗаполнения,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСпецификации(Команда)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Организация",    Объект.Организация);
	ПараметрыЗаполнения.Вставить("Регистратор",    Объект.Ссылка);
	ПараметрыЗаполнения.Вставить("Спецификация",   Объект.Спецификация);
	ПараметрыЗаполнения.Вставить("Номенклатура",   Объект.Номенклатура);
	ПараметрыЗаполнения.Вставить("Характеристика", Объект.Характеристика);
	ПараметрыЗаполнения.Вставить("Назначение",     Объект.Назначение);
	ПараметрыЗаполнения.Вставить("Количество",     Объект.Количество);
	ПараметрыЗаполнения.Вставить("Дата",           Объект.Дата);
	
	ЗаполнитьПоСпецификацииНаСервере(ПараметрыЗаполнения);
	
	ОткрытьФорму(
		"РегистрНакопления.РНПТМатериаловВПроизводстве.Форма.ПодборПоСпецификации",
		ПараметрыЗаполнения,
		ЭтотОбъект,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьСерии(Команда)
	
	ОткрытьПодборСерий(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПартиюПроизводства(Команда)
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать строки, для которых необходимо заполнить партию производства.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация",                    Объект.Организация);
	СтруктураОтбора.Вставить("ИсключатьПроизводствоНаСтороне", Истина);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НачалоПериода",    НачалоМесяца(Объект.Дата));
	ПараметрыФормы.Вставить("ОкончаниеПериода", КонецМесяца(Объект.Дата));
	ПараметрыФормы.Вставить("СтруктураОтбора",  СтруктураОтбора);
	ПараметрыФормы.Вставить("ОдиночныйВыбор",   Истина);
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПартиюПроизводстваЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ПодборПартийПроизводства",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Оповещение,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодразделение(Команда)
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать строки, для которых необходимо заполнить подразделение.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ПроизводственноеПодразделение", Истина);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПодразделениеЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомерГТД(Команда)
	
	Если Элементы.Товары.ВыделенныеСтроки.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать строки, для которых необходимо заполнить РНПТ.'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СписокТиповГТД = Новый СписокЗначений;
	СписокТиповГТД.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНомеровГТД.НомерРНПТ"));
	СписокТиповГТД.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокТиповГТД",     СписокТиповГТД);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьНомерГТДЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.НомераГТД.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещения);
	
КонецПроцедуры

#Область ОбработчикиКомандОбъекта

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуУдаленияДокумента(Команда)
	
	ОбщегоНазначенияУТКлиент.УстановитьПометкуУдаленияДокумента(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиФормы

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	#Область СтандартноеОформление
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект);
	НоменклатураСервер.УстановитьУсловноеОформлениеНазначенияНоменклатуры(ЭтотОбъект,,, Ложь);
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтотОбъект, Ложь);
	НоменклатураСервер.УстановитьУсловноеОформлениеСтатусовУказанияСерий(ЭтотОбъект, Истина);
	
	#Область Прослеживаемость
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьУсловноеОформлениеНомераГТД(ЭтотОбъект);
	УчетПрослеживаемыхТоваровЛокализация.УстановитьУсловноеОформлениеКоличестваПоРНПТ(ЭтотОбъект);
	
	#КонецОбласти
	
	#КонецОбласти
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОформлениеХарактеристики(Форма)
	
	Элементы = Форма.Элементы;
	ПолеХарактеристика = Элементы.Характеристика;
	
	Если Форма.ХарактеристикиИспользуются Тогда
		ПолеХарактеристика.ПодсказкаВвода = "";
		ПолеХарактеристика.Доступность = Истина;
		ПолеХарактеристика.АвтоОтметкаНезаполненного = Истина;
	Иначе
		ПолеХарактеристика.ПодсказкаВвода = НСтр("ru = '<характеристики не используются>'");
		ПолеХарактеристика.Доступность = Ложь;
		ПолеХарактеристика.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОформлениеНазначения(Форма)
	
	Элементы = Форма.Элементы;
	ПолеНазначение = Элементы.Назначение;
	
	Если Форма.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара") Тогда
		Форма.Объект.Назначение = Неопределено;
		ПолеНазначение.ПодсказкаВвода = НСтр("ru = '<только для товаров и работ>'");
		ПолеНазначение.Доступность = Ложь;
	Иначе
		ПолеНазначение.ПодсказкаВвода = "";
		ПолеНазначение.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеУпаковки()
	
	Справочники.УпаковкиЕдиницыИзмерения.ОтобразитьИнформациюОЕдиницеХранения(Объект.Номенклатура, Элементы.Упаковка);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОграничитьТипМестаХранения(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	Если Форма.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
		
		ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		
		Элементы.МестоХранения.ВыбиратьТип     = Ложь;
		Элементы.МестоХранения.ОграничениеТипа = ОграничениеТипа;
		
		Объект.МестоХранения = Элементы.МестоХранения.ОграничениеТипа.ПривестиЗначение(Объект.МестоХранения);
		
	Иначе
		Элементы.МестоХранения.ВыбиратьТип = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЗаполнитьСлужебныеРеквизитыФормы();
	
	ПараметрыУказанияСерий      = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ПереносРНПТМатериаловНаПродукцию));
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделиях.ПараметрыВыбораСпецификаций(Объект, Документы.ПереносРНПТМатериаловНаПродукцию);
	НастроитьЭлементыСерий();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыФормы()
	
	ИспользоватьНесколькоСкладов = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	
	ЗаполнитьСкладПоУмолчанию();
	ЗаполнитьСлужебныеРеквизитыШапки();
	ЗаполнитьСлужебныеРеквизитыТаблицы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСкладПоУмолчанию()
	
	Если ИспользоватьНесколькоСкладов Тогда
		СкладПоУмолчанию = Справочники.Склады.ПустаяСсылка();
	Иначе
		СкладПоУмолчанию = ОбщегоНазначенияУТ.ПолучитьПроверитьСкладПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыШапки()
	
	ТекущиеДанные = ТекущиеДанныеИзШапкиОбъекта(ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",            Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(
		ТекущиеДанные,
		СтруктураДействий,
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
	
	ОграничитьТипМестаХранения(ЭтотОбъект);
	
	УстановитьОформлениеХарактеристики(ЭтотОбъект);
	УстановитьОформлениеНазначения(ЭтотОбъект);
	УстановитьОформлениеУпаковки();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыТаблицы()
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул",                    Новый Структура("Номенклатура", "Артикул"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",            Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьТЧ(
		Объект.Товары,
		СтруктураДействий,
		ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения());
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораПоОстаткам(ВыбранноеЗначение)
	
	Объект.Товары.Загрузить(ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТаблицаТоваров));
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПодбораПоСпецификации(ВыбранноеЗначение)
	
	Объект.Спецификация = ВыбранноеЗначение.Спецификация;
	
	Объект.Товары.Очистить();
	
	Для Каждого ТекущиеДанные Из ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТаблицаТоваров) Цикл
		
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные);
		
		НоваяСтрока.Количество       = ТекущиеДанные.Подобрано;
		НоваяСтрока.КоличествоПоРНПТ = ТекущиеДанные.ПодобраноПоРНПТ;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииСервер(КэшированныеЗначения)
	
	ТекущиеДанные = ТекущиеДанныеИзШапкиОбъекта(ЭтотОбъект);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Объект);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, ЭтотОбъект);
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыШапки(ЭтотОбъект, СтруктураДействий);
	ДобавитьВСтруктуруДействиеПроверитьЗаполнитьСпецификацию(ЭтотОбъект, СтруктураДействий, ТекущиеДанные);
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущиеДанные);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТекущиеДанные);
	
	ОграничитьТипМестаХранения(ЭтотОбъект);
	УстановитьОформлениеХарактеристики(ЭтотОбъект);
	УстановитьОформлениеНазначения(ЭтотОбъект);
	
	Если ПараметрыУказанияСерий.Шапка.ИспользоватьСерииНоменклатуры Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
	КонецЕсли;
	
	УстановитьОформлениеУпаковки();
	
КонецПроцедуры

&НаСервере
Процедура МестоХраненияПриИзмененииСервер()
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаСервере
Процедура ТоварыПослеРедактированияНаСервере(ИдентификаторСтроки, КэшированныеЗначения)
	
	ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ИдентификаторСтроки, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПартияПроизводстваНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ТекущиеДанные.ПартияПроизводства = Результат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеОбработчикиКомандФормы

&НаКлиенте
Процедура РазбитьСтрокуЗавершение(НоваяСтрока, ДополнительныеПараметры) Экспорт
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	Если НоваяСтрока <> Неопределено Тогда
		
		СтруктураДействий = Новый Структура;
		ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(ЭтотОбъект, СтруктураДействий);
		
		ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		ПакетнаяОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкодуЗавершение(ДанныхШтрихкода, ДополнительныеПараметры) Экспорт
	
	ОбработатьШтрихкоды(ДанныхШтрихкода);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОстаткамНаСервере(ПараметрыЗаполнения)
	
	ПараметрыЗаполнения.Вставить("АдресТаблицаТоваров", ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить(), УникальныйИдентификатор));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСпецификацииНаСервере(ПараметрыЗаполнения)
	
	ПараметрыЗаполнения.Вставить("АдресТаблицаТоваров", ПоместитьВоВременноеХранилище(Объект.Товары.Выгрузить(), УникальныйИдентификатор));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПартиюПроизводстваЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Документ.ПереносРНПТМатериаловНаПродукцию.Форма.ФормаДокумента.ЗаполнитьПартиюПроизводства");
	
	Для Каждого ИдентификаторСтроки Из Элементы.Товары.ВыделенныеСтроки Цикл
		
		ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		ТекущиеДанные.ПартияПроизводства = Результат;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодразделениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Документ.ПереносРНПТМатериаловНаПродукцию.Форма.ФормаДокумента.ЗаполнитьПодразделение");
	
	ЗаполнитьПодразделениеЗавершениеНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделениеЗавершениеНаСервере(Результат)
	
	ОбрабатываемыеСтроки = Новый Массив;
	Для Каждого ИдентификаторСтроки Из Элементы.Товары.ВыделенныеСтроки Цикл
		
		ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		ТекущиеДанные.Подразделение = Результат;
		
		ОбрабатываемыеСтроки.Добавить(ТекущиеДанные);
		
	КонецЦикла;
	
	ЗаполнитьСтатусыУказанияСерий(ОбрабатываемыеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомерГТДЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// &ЗамерПроизводительности
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Документ.ПереносРНПТМатериаловНаПродукцию.Форма.ФормаДокумента.ЗаполнитьНомерГТД");
	
	ЗаполнитьНомерГТДЗавершениеНаСервере(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНомерГТДЗавершениеНаСервере(НомерГТД)
	
	СтруктураДействий = Новый Структура;
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Объект,
		СтруктураДействий,
		"Подразделение",
		Истина);
	
	ОбрабатываемыеСтроки = Новый Массив();
	Для Каждого ИдентификаторСтроки Из Элементы.Товары.ВыделенныеСтроки Цикл
		
		ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		ТекущиеДанные.НомерГТД = НомерГТД;
		
		ОбрабатываемыеСтроки.Добавить(ТекущиеДанные);
		
	КонецЦикла;
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ(
		ОбрабатываемыеСтроки,
		СтруктураДействий,
		Объект.Товары);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСБуферомОбмена

&НаСервере
Процедура СкопироватьСтрокиНаСервере()
	
	РаботаСТабличнымиЧастями.СкопироватьСтрокиВБуферОбмена(Объект.Товары, Элементы.Товары.ВыделенныеСтроки);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСтрокиИзБуфераОбмена()
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("Номенклатура.ТипНоменклатуры", НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТареРаботе(Ложь));
	
	Колонки = "ПартияПроизводства,Подразделение,Номенклатура,Характеристика,Назначение,Количество,КоличествоПоРНПТ,НомерГТД";
	
	ТаблицаТоваров = РаботаСТабличнымиЧастями.СтрокиИзБуфераОбмена(ПараметрыОтбора, Колонки);
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыТаблицы(ЭтотОбъект, СтруктураДействий);
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(ЭтотОбъект, СтруктураДействий);
	
	КэшированныеЗначения = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	ОбрабатываемыеСтроки = Новый Массив();
	Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущиеДанные = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтрокаТовара);
		
		ОбрабатываемыеСтроки.Добавить(ТекущиеДанные);
		
	КонецЦикла;
	
	ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокиТЧ(
		ОбрабатываемыеСтроки,
		СтруктураДействий,
		Объект.Товары,
		КэшированныеЗначения);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.Товары);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКомандБуфераОбмена()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТоварыВставитьСтроки");
	МассивЭлементов.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(
		Элементы,
		МассивЭлементов,
		"Доступность",
		РаботаСТабличнымиЧастями.ЕстьСтрокиВБуфереОбмена());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандБуфераОбменаНаКлиенте()
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТоварыВставитьСтроки");
	МассивЭлементов.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Доступность", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ШтрихкодыИТорговоеОборудование

&НаСервере
Процедура ОбработатьШтрихкодыСервер(СтруктураПараметровДействия,КэшированныеЗначения)
	
	ШтрихкодированиеНоменклатурыСервер.ОбработатьШтрихкоды(ЭтотОбъект, Объект, СтруктураПараметровДействия, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Модифицированность = Истина;
	
	СтруктураДействийСДобавленнымиСтроками = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыТаблицы(ЭтотОбъект, СтруктураДействийСДобавленнымиСтроками);
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(ЭтотОбъект, СтруктураДействийСДобавленнымиСтроками);
	
	СтруктураДействийСИзмененнымиСтроками = Новый Структура;
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(ЭтотОбъект, СтруктураДействийСИзмененнымиСтроками);

	СтруктураДействий = ШтрихкодированиеНоменклатурыКлиент.ПараметрыОбработкиШтрихкодов();

	СтруктураДействий.Штрихкоды                              = ДанныеШтрихкодов;
	СтруктураДействий.СтруктураДействийСДобавленнымиСтроками = СтруктураДействийСДобавленнымиСтроками;
	СтруктураДействий.СтруктураДействийСИзмененнымиСтроками  = СтруктураДействийСИзмененнымиСтроками;
	СтруктураДействий.ИмяКолонкиКоличество                   = "Количество";
	СтруктураДействий.НеИспользоватьУпаковки                 = Истина;
	СтруктураДействий.ПараметрыУказанияСерий                 = ПараметрыУказанияСерий.Товары;
	СтруктураДействий.ТолькоТоварыИРабота                    = Истина;
	СтруктураДействий.ДополнятьТарой                         = Ложь;
	
	ОбработатьШтрихкодыСервер(СтруктураДействий,КэшированныеЗначения);
	
	ШтрихкодированиеНоменклатурыКлиент.ОбработатьНеизвестныеШтрихкоды(СтруктураДействий, КэшированныеЗначения, ЭтотОбъект);
	
	Если ШтрихкодированиеНоменклатурыКлиент.НужноОткрытьФормуУказанияСерийПослеОбработкиШтрихкодов(СтруктураДействий) Тогда
		ТекущиеДанныеИдентификатор = СтруктураДействий.МассивСтрокССериями[0];
		ПодключитьОбработчикОжидания("ОткрытьПодборСерийПриСканированииШтрихкодаНоменклатуры", 0.1, Истина);
	КонецЕсли;
	
	Если СтруктураДействий.ТекущаяСтрока <> Неопределено Тогда
		Элементы.Товары.ТекущаяСтрока = СтруктураДействий.ТекущаяСтрока;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

&НаСервере
Процедура УстановитьДоступностьСерииВШапке()
	
	Если Объект.СтатусУказанияСерий = 14
		Или Объект.СтатусУказанияСерий = 13 Тогда
		Элементы.Серия.Доступность = Истина;
		Элементы.Серия.АвтоОтметкаНезаполненного = Истина;
		Элементы.Серия.Подсказка = "";
	Иначе
		Элементы.Серия.Доступность = Ложь;
		Элементы.Серия.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Серия.Подсказка = НСтр("ru = '<не используется>'");
	КонецЕсли;
	
	Элементы.УказатьСерииВШапке.Доступность = Объект.СтатусУказанияСерий <> 0;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ТоварВШапке)
	
	Если ТоварВШапке Тогда
		Возврат НоменклатураСервер.ПараметрыФормыУказанияСерий(Объект, ПараметрыУказанияСерий.Шапка, Неопределено, ЭтотОбъект);
	Иначе
		Возврат НоменклатураСервер.ПараметрыФормыУказанияСерий(Объект, ПараметрыУказанияСерий.Товары, ТекущиеДанныеИдентификатор, ЭтотОбъект);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СтатусУказанияСерийНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	
	Если Результат <> Неопределено Тогда
		ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий, ТоварВШапке)
	
	СтруктураДействий = Новый Структура;
	
	Если ТоварВШапке Тогда
		НоменклатураСервер.ОбработатьУказаниеСерий(Объект, ПараметрыУказанияСерий.Шапка, ПараметрыФормыУказанияСерий, СтруктураДействий);
	Иначе
		НоменклатураСервер.ОбработатьУказаниеСерий(Объект, ПараметрыУказанияСерий.Товары, ПараметрыФормыУказанияСерий, СтруктураДействий);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения)
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(
		Объект, ПараметрыУказанияСерий.Шапка, КэшированныеЗначения);
	
	УстановитьДоступностьСерииВШапке();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(ТекущаяСтрокаИдентификатор, КэшированныеЗначения)

	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(
		Объект, ПараметрыУказанияСерий.Товары, ТекущаяСтрокаИдентификатор, КэшированныеЗначения);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерий(СтрокиТоваровДляОбработки = Неопределено, СтрокиСерийДляОбработки = Неопределено)
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(
		Объект,
		ПараметрыУказанияСерий.Товары,
		СтрокиТоваровДляОбработки,
		СтрокиСерийДляОбработки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерийПриСканированииШтрихкодаНоменклатуры()
	
	Если ТекущиеДанныеИдентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Объект.Товары.НайтиПоИдентификатору(ТекущиеДанныеИдентификатор);
	ОткрытьПодборСерий(Ложь, , ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерий(ТоварВШапке, Текст = "", ТекущиеДанные = Неопределено)
	
	Если ТоварВШапке Тогда
		ТекущиеПараметрыУказанияСерий = ПараметрыУказанияСерий.Шапка;
		СерияРедактируетсяВШапке      = Истина;
	Иначе
		ТекущиеПараметрыУказанияСерий = ПараметрыУказанияСерий.Товары;
		СерияРедактируетсяВШапке      = Ложь;
	КонецЕсли;

	Если НоменклатураКлиент.ДляУказанияСерийНуженСерверныйВызов(ЭтотОбъект, ТекущиеПараметрыУказанияСерий, Текст) Тогда
		
		Если ТоварВШапке Тогда
			ТекущиеДанныеИдентификатор = Неопределено;
		ИначеЕсли ТекущиеДанные = Неопределено Тогда
			ТекущиеДанныеИдентификатор = Элементы.Товары.ТекущиеДанные.ПолучитьИдентификатор();
		Иначе
			ТекущиеДанныеИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
		КонецЕсли;
		
		ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий(ТекущиеДанныеИдентификатор, ТоварВШапке);
		
		ОписаниеОповещения =
			Новый ОписаниеОповещения(
					"ОткрытьПодборСерийЗавершение",
					ЭтотОбъект,
					Новый Структура("ПараметрыФормыУказанияСерий, ТоварВШапке", ПараметрыФормыУказанияСерий, ТоварВШапке));
		
		ОткрытьФорму(
			ПараметрыФормыУказанияСерий.ИмяФормы,
			ПараметрыФормыУказанияСерий,
			ЭтотОбъект,,,,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	
	ТоварВШапке = ДополнительныеПараметры.ТоварВШапке;
	
	Если Результат <> Неопределено Тогда
		ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий, ТоварВШапке);
	КонецЕсли;
	
	Если ТоварВШапке Тогда
		НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект, КэшированныеЗначения, ПараметрыУказанияСерий.Шапка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьЗаполнитьУстановитьВидимостьСерий()
	
	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ПереносРНПТМатериаловНаПродукцию));
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.Шапка);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.Товары);
	
	НастроитьЭлементыСерий();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыСерий()
	
	Элементы.ТоварыСтатусУказанияСерий.Видимость = ПараметрыУказанияСерий.Товары.ИспользоватьСерииНоменклатуры;
	Элементы.ТоварыУказатьСерии.Видимость        = ПараметрыУказанияСерий.Товары.ИспользоватьСерииНоменклатуры;
	Элементы.ТоварыСерия.Видимость               = ПараметрыУказанияСерий.Товары.ИспользоватьСерииНоменклатуры;
	
	Элементы.УказатьСерииВШапке.Видимость        = ПараметрыУказанияСерий.Шапка.ИспользоватьСерииНоменклатуры;
	Элементы.СтатусУказанияСерий.Видимость       = ПараметрыУказанияСерий.Шапка.ИспользоватьСерииНоменклатуры;
	Элементы.Серия.Видимость                     = ПараметрыУказанияСерий.Шапка.ИспользоватьСерииНоменклатуры;
	
	УстановитьДоступностьСерииВШапке();
	
КонецПроцедуры

#КонецОбласти

#Область Свойства

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработкаСтруктурыДействий

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыШапки(Форма, СтруктураДействий)

	Объект = Форма.Объект;
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", Объект.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", Объект.Упаковка);
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
	ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковокШапки(Форма, СтруктураДействий);
	
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакТипНоменклатуры",
		Новый Структура("Номенклатура", "ТипНоменклатуры"));
	
	СтруктураДействий.Вставить(
		"НоменклатураПриИзмененииПереопределяемый",
		Новый Структура("ИмяФормы, ИмяТабличнойЧасти", Форма.ИмяФормы, "Объект"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействиеПроверитьЗаполнитьСпецификацию(Форма, СтруктураДействий, ТекущиеДанные)
	
	СтруктураЗаполненияСпецификации =
		УправлениеДаннымиОбИзделияхКлиентСервер.ПараметрыДействияПроверитьЗаполнитьСпецификацию(
			Форма.Объект,
			ТекущиеДанные,
			Форма.ПараметрыВыбораСпецификаций);
	
	СтруктураДействий.Вставить("ПроверитьЗаполнитьСпецификацию", СтруктураЗаполненияСпецификации);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковокШапки(Форма, СтруктураДействий)
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Форма.Объект,
		СтруктураДействий,
		"МестоХранения");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущиеДанныеИзШапкиОбъекта(Форма)
	
	ПоляСтроки =
		"МестоХранения, Номенклатура, Характеристика, Серия, Спецификация, СтатусУказанияСерий,
		|ХарактеристикиИспользуются, ТипНоменклатуры, КоличествоУпаковок,
		|Упаковка, Количество, КоличествоПоРНПТ, НомерГТД, ВедетсяУчетПоРНПТ";
	
	ТекущиеДанные = Новый Структура(ПоляСтроки);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Форма.Объект);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные, Форма);
	ТекущиеДанные.НомерГТД = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");
	
	Возврат ТекущиеДанные;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииНоменклатурыТаблицы(Форма, СтруктураДействий)

	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	
	СтруктураДействий.Вставить(
		"ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу");
	
	СтруктураДействий.Вставить(
		"НоменклатураПриИзмененииПереопределяемый",
		Новый Структура("ИмяФормы, ИмяТабличнойЧасти", Форма.ИмяФормы, "Товары"));
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекЗаполненияСлужебныхРеквизитовТабличнойЧасти(СтруктураДействий);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииКоличестваТаблицы(Форма, СтруктураДействий)
	
	УчетПрослеживаемыхТоваровКлиентСерверЛокализация.ДополнитьОписаниеНастроекПересчетаРеквизитовТабличнойЧасти(
		Форма.Объект,
		СтруктураДействий,
		"Подразделение",
		Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПоСериям(СтруктураДействий, Склад, ПараметрыУказанияСерий)
	
	ПараметрыПроверкиСерий = Новый Структура("Склад, ПараметрыУказанияСерий", Склад, ПараметрыУказанияСерий);
	СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", ПараметрыПроверкиСерий);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Функция ПараметрыРедактированияВидовЗапасов()
	
	ПараметрыРедактированияВидовЗапасов = ЗапасыСервер.ПараметрыРедактированияВидовЗапасов();
	ПараметрыРедактированияВидовЗапасов.ТоварВШапке = Истина;
	ПараметрыРедактированияВидовЗапасов.ИмяТЧВидыЗапасов = "ВидыЗапасовИзделия";
	ПараметрыРедактированияВидовЗапасов.Склад = Объект.МестоХранения;
	
	Возврат ЗапасыСервер.ПоместитьТоварыИВидыЗапасовВХранилище(ЭтотОбъект, ПараметрыРедактированияВидовЗапасов);
	
КонецФункции

#КонецОбласти

#КонецОбласти
