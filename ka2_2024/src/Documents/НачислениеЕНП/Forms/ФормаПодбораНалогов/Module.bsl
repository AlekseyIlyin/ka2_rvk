
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Организация", Организация);
	Если НЕ Параметры.Свойство("ДатаОстатков", ДатаОстатков) Тогда
		ДатаОстатков = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ЗаполнитьТаблицуВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыНалогов

&НаКлиенте
Процедура ОстаткиРасчетовПоНалогамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущаяСтрока = ОстаткиРасчетовПоНалогам.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ТекущаяСтрока.Пометка = Не ТекущаяСтрока.Пометка;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбранныеЗначения = Новый Соответствие;
	
	Отбор = Новый Структура("Пометка", Истина);
	Для Каждого СтрокаТаблицы Из ОстаткиРасчетовПоНалогам.НайтиСтроки(Отбор) Цикл
		Если ВыбранныеЗначения.Получить(СтрокаТаблицы.ВидНалогаВзносов) = Неопределено Тогда
			ВыбранныеЗначения.Вставить(СтрокаТаблицы.ВидНалогаВзносов, Новый Массив);
		КонецЕсли;
		ВыбранныеЗначения[СтрокаТаблицы.ВидНалогаВзносов].Добавить(СтрокаТаблицы.СчетУчета);
	КонецЦикла;
	
	Если ВыбранныеЗначения.Количество() > 0 Тогда
		ОповеститьОВыборе(ВыбранныеЗначения);
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отметить(Команда)
	УстановитьПометку(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметку(Команда)
	УстановитьПометку(Ложь);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуВыбора()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НеиспользуемыеВидыНалогов = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(НеиспользуемыеВидыНалогов,
		ЕдиныйНалоговыйСчет.ВидыНалоговУплачиваемыеОтдельно(ДатаОстатков));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(НеиспользуемыеВидыНалогов,
		ЕдиныйНалоговыйСчет.ВидыНалоговУстаревшие(ДатаОстатков));
	Запрос.УстановитьПараметр("НеиспользуемыеВидыНалогов", НеиспользуемыеВидыНалогов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНалоговВзносов.Ссылка КАК ВидНалогаВзносов,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет
	|ИЗ
	|	Справочник.ВидыНалоговВзносов КАК ВидыНалоговВзносов
	|
	|ГДЕ
	|	НЕ ВидыНалоговВзносов.Ссылка В (&НеиспользуемыеВидыНалогов)";
	ВидыНалоговВзносов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из ВидыНалоговВзносов Цикл
		СтрокаТаблицы.Счет = РеглУчетСервер.СчетУчетаПоТипуНалога(СтрокаТаблицы.ВидНалогаВзносов);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(ДатаОстатков, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыНалоговВзносов", ВидыНалоговВзносов);
	
	Запрос.УстановитьПараметр("СчетаУчета", ЕдиныйНалоговыйСчет.ОбслуживаемыеСчетаУчета(ДатаОстатков));
	Запрос.УстановитьПараметр("ВидСубконтоУровниБюджетов",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ВидНалогаВзносов,
	|	Таблица.Счет КАК СчетУчета
	|ПОМЕСТИТЬ СчетаУчетаНалогов
	|ИЗ &ВидыНалоговВзносов КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК СчетУчета,
	|	ЕСТЬNULL(СчетаУчетаНалогов.ВидНалогаВзносов,
	|		ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.ПустаяСсылка)) КАК ВидНалогаВзносов,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.Счет.Код КАК Порядок
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатков,
	|			Счет В (&СчетаУчета)
	|				И НЕ Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
	|			,
	|			Организация = &Организация
	|		) КАК ХозрасчетныйОстатки
	|	ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаНалогов КАК СчетаУчетаНалогов
	|		ПО ХозрасчетныйОстатки.Счет = СчетаУчетаНалогов.СчетУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ВЫБОР ХозрасчетныйОстатки.Субконто1
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.НалогНаПрибыль_ФедеральныйБюджет)
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.РегиональныйБюджет)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.НалогНаПрибыль_РегиональныйБюджет)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыНалоговВзносов.ЕСХН)
	|	КОНЕЦ,
	|	-ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.Счет.Код
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатков,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСБюджетом),
	|			&ВидСубконтоУровниБюджетов,
	|			Организация = &Организация
	|		) КАК ХозрасчетныйОстатки";
	ОстаткиРасчетов = Запрос.Выполнить().Выгрузить();
	ОстаткиРасчетов.Сортировать("Порядок");
	
	Отбор = Новый Структура("ВидНалогаВзносов", Справочники.ВидыНалоговВзносов.ПустаяСсылка());
	Для Каждого СтрокаТаблицы Из ОстаткиРасчетов.НайтиСтроки(Отбор) Цикл
		СтрокаТаблицы.ВидНалогаВзносов = РеглУчетСервер.ТипНалогаПоСчетуУчета(СтрокаТаблицы.СчетУчета);
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ТипНалога) Тогда
			СтрокаТаблицы.ВидНалогаВзносов = Справочники.ВидыНалоговВзносов.ПрочиеНалогиИСборы;
		КонецЕсли;
	КонецЦикла;
	
	ОстаткиРасчетовПоНалогам.Загрузить(ОстаткиРасчетов);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометку(Значение)
	
	Для Каждого СтрокаТаблицы Из ОстаткиРасчетовПоНалогам Цикл
		СтрокаТаблицы.Пометка = Значение;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
