#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Данные рабочего места.
// 
// Параметры:
//  ПараметрыРабочегоМеста - Структура - Параметры рабочего места:
//  	* ОтборПериод - СтандартныйПериод -
//  	* ОтборОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации -
//  	* ОтборОрганизация - СправочникСсылка.Организации -
// 
// Возвращаемое значение:
//  Структура - Данные рабочего места, содержит:
//		* ДанныеСписка - ТаблицаЗначений -
//		* ДанныеДокументов - Соответствие из КлючИЗначение - содержит:
//			** Ключ - СправочникСсылка.ОбъектыЭксплуатации - 
//			** Значение - Структура -
//
Функция ДанныеРабочегоМеста(ПараметрыРабочегоМеста) Экспорт

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("ИсправлениеОшибокВУчетеОС.ДанныеРабочегоМеста");

	ДанныеСписка = Новый ТаблицаЗначений();
	ДанныеСписка.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ДанныеСписка.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
	ДанныеСписка.Колонки.Добавить("ПринятиеКУчетуПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("ИзменениеПараметровПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("СписаниеПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("КорректировкаПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("ПараметрыНачисленияНалогаПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("СнятиеСРегистрацииПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("ПерерасчетИмущественныхНалоговПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	ДанныеСписка.Колонки.Добавить("Информация", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
	ДанныеСписка.Колонки.Добавить("ДанныеДокументов", Новый ОписаниеТипов("Структура"));
	
	//++ Локализация
	ДанныеСписка.Колонки.Добавить("ГруппаОС", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыОС"));
	//-- Локализация

	ДанныеДокументов = Новый Соответствие;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоОС.Ссылка КАК Ссылка,
	|	ДокументыПоОС.Организация КАК Организация,
	|	ДокументыПоОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ДокументыПоОС.ОсновноеСредство.Представление КАК ОсновноеСредствоПредставление,
	|	ДокументыПоОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ДокументыПоОС.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ДокументыПоОС.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.Комментарий КАК Комментарий
	|
	|ПОМЕСТИТЬ ВтСписокДокументов
	|
	|ИЗ
	|	РегистрСведений.ДокументыПоОС КАК ДокументыПоОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		ПО РеестрДокументов.Ссылка = ДокументыПоОС.Ссылка
	|			И НЕ РеестрДокументов.ДополнительнаяЗапись
	|
	|ГДЕ
	|	ДокументыПоОС.ЭтоИсправление
	|	И РеестрДокументов.Проведен
	|
	|	И (ДокументыПоОС.Дата >= &ДатаНачала
	|			ИЛИ &ДатаНачала = ДАТАВРЕМЯ(1,1,1))
	|	И (ДокументыПоОС.Дата <= &ДатаОкончания
	|			ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1,1,1))
	|
	|	И (ДокументыПоОС.Организация = &ОтборОрганизация
	|			ИЛИ &ОтборОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|	И (ДокументыПоОС.ОсновноеСредство = &ОтборОсновноеСредство
	|			ИЛИ &ОтборОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка))
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтСписокДокументов.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВтСписокОС
	|
	|ИЗ 
	|	ВтСписокДокументов КАК ВтСписокДокументов
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство
	|
	|ПОМЕСТИТЬ ВтМестонахождениеОС
	|
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			,
	|			ОсновноеСредство В (
	|				ВЫБРАТЬ 
	|					ВтСписокОС.ОсновноеСредство 
	|				ИЗ 
	|					ВтСписокОС КАК ВтСписокОС)) КАК МестонахождениеОС
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ
	|
	|ПОМЕСТИТЬ ВтПервоначальныеСведенияОС
	|
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			,
	|			(Организация, ОсновноеСредство) В (
	|				ВЫБРАТЬ 
	|					ВтМестонахождениеОС.Организация, 
	|					ВтМестонахождениеОС.ОсновноеСредство 
	|				ИЗ 
	|					ВтМестонахождениеОС КАК ВтМестонахождениеОС)) КАК ПервоначальныеСведенияОС
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Регистратор КАК Ссылка,
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.Стоимость
	|		ИНАЧЕ -СтоимостьОС.Стоимость
	|	КОНЕЦ) КАК СтоимостьУУ,
	|
	|	СУММА(ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьРегл
	|		ИНАЧЕ -СтоимостьОС.СтоимостьРегл
	|	КОНЕЦ) КАК СтоимостьБУ,
	|
	|	СУММА(ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьНУ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьНУ
	|	КОНЕЦ) КАК СтоимостьНУ,
	|
	|	СУММА(ВЫБОР КОГДА СтоимостьОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА СтоимостьОС.СтоимостьЦФ
	|		ИНАЧЕ -СтоимостьОС.СтоимостьЦФ
	|	КОНЕЦ) КАК СтоимостьЦФ
	|
	|ПОМЕСТИТЬ ВтСтоимостьОС
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК СтоимостьОС
	|
	|ГДЕ
	|	СтоимостьОС.Активность
	|	И СтоимостьОС.Регистратор В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтоимостьОС.Регистратор,
	|	СтоимостьОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОС.Регистратор КАК Ссылка,
	|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	СУММА(ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -АмортизацияОС.Амортизация
	|		ИНАЧЕ АмортизацияОС.Амортизация
	|	КОНЕЦ) КАК АмортизацияУУ,
	|
	|	СУММА(ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -АмортизацияОС.АмортизацияРегл
	|		ИНАЧЕ АмортизацияОС.АмортизацияРегл
	|	КОНЕЦ) КАК АмортизацияБУ,
	|
	|	СУММА(ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -АмортизацияОС.АмортизацияНУ
	|		ИНАЧЕ АмортизацияОС.АмортизацияНУ
	|	КОНЕЦ) КАК АмортизацияНУ,
	|
	|	СУММА(ВЫБОР КОГДА АмортизацияОС.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ТОГДА -АмортизацияОС.АмортизацияЦФ
	|		ИНАЧЕ АмортизацияОС.АмортизацияЦФ
	|	КОНЕЦ) КАК АмортизацияЦФ
	|
	|ПОМЕСТИТЬ ВтАмортизацияОС
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК АмортизацияОС
	|
	|ГДЕ
	|	АмортизацияОС.Активность
	|	И АмортизацияОС.Регистратор В (
	|		ВЫБРАТЬ
	|			ВтСписокДокументов.Ссылка
	|		ИЗ
	|			ВтСписокДокументов КАК ВтСписокДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АмортизацияОС.Регистратор,
	|	АмортизацияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВтСписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВтСписокОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ЕСТЬNULL(ВтМестонахождениеОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюУУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюБУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюНУ,
	|
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ.Номер, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюНомерУУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ.Номер, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюНомерБУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ.Номер, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюНомерНУ,
	|
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ.Дата, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюДатаУУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ.Дата, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюДатаБУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ.Дата, НЕОПРЕДЕЛЕНО) КАК ДокументВводаВЭксплуатациюДатаНУ,
	|
	|	ЕСТЬNULL(ПринятиеКУчетуУУ.РежимИсправленияСПрошлойДаты, ЛОЖЬ) КАК РежимИсправленияСПрошлойДатыУУ,
	|	ЕСТЬNULL(ПринятиеКУчетуБУ.РежимИсправленияСПрошлойДаты, ЛОЖЬ) КАК РежимИсправленияСПрошлойДатыБУ,
	|	ЕСТЬNULL(ПринятиеКУчетуНУ.РежимИсправленияСПрошлойДаты, ЛОЖЬ) КАК РежимИсправленияСПрошлойДатыНУ,
	|	ЕСТЬNULL(ПринятиеКУчетуУУ.ДоначислитьАмортизациюЗаПрошлыйПериод, ЛОЖЬ) КАК ДоначислитьАмортизациюЗаПрошлыйПериодУУ,
	|	ЕСТЬNULL(ПринятиеКУчетуБУ.ДоначислитьАмортизациюЗаПрошлыйПериод, ЛОЖЬ) КАК ДоначислитьАмортизациюЗаПрошлыйПериодБУ,
	|	ЕСТЬNULL(ПринятиеКУчетуНУ.ДоначислитьАмортизациюЗаПрошлыйПериод, ЛОЖЬ) КАК ДоначислитьАмортизациюЗаПрошлыйПериодНУ,
	|
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ.Комментарий, """") КАК КомментарийУУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ.Комментарий, """") КАК КомментарийБУ,
	|	ЕСТЬNULL(ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ.Комментарий, """") КАК КомментарийНУ
	|
	|ИЗ 
	|	ВтСписокОС КАК ВтСписокОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтМестонахождениеОС КАК ВтМестонахождениеОС
	|		ПО ВтМестонахождениеОС.ОсновноеСредство = ВтСписокОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС КАК ВтПервоначальныеСведенияОС
	|		ПО ВтПервоначальныеСведенияОС.ОсновноеСредство = ВтСписокОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуУУ
	|		ПО ПринятиеКУчетуУУ.Ссылка = ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуБУ
	|		ПО ПринятиеКУчетуБУ.Ссылка = ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС2_4 КАК ПринятиеКУчетуНУ
	|		ПО ПринятиеКУчетуНУ.Ссылка = ВтПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСписокДокументов.Ссылка КАК Ссылка,
	|	ВтСписокДокументов.Организация КАК Организация,
	|	ВтСписокДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	ВтСписокДокументов.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ВтСписокДокументов.ОтражатьВРеглУчете КАК ОтражатьВРеглУчете,
	|	ВтСписокДокументов.ОтражатьВУпрУчете КАК ОтражатьВУпрУчете,
	|
	|	ВтСписокДокументов.Номер КАК Номер,
	|	ВтСписокДокументов.Дата КАК Дата,
	|	ВтСписокДокументов.Комментарий КАК Комментарий,
	|
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияУУФлаг, ЛОЖЬ) КАК СрокИспользованияУУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияБУФлаг, ЛОЖЬ) КАК СрокИспользованияБУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияНУФлаг, ЛОЖЬ) КАК СрокИспользованияНУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияУУ, 0) КАК СрокИспользованияУУ,
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияБУ, 0) КАК СрокИспользованияБУ,
	|	ЕСТЬNULL(ИзменениеПараметровОС.СрокИспользованияНУ, 0) КАК СрокИспользованияНУ,
	|
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюУУФлаг, ЛОЖЬ) КАК НачислятьАмортизациюУУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюБУФлаг, ЛОЖЬ) КАК НачислятьАмортизациюБУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюНУФлаг, ЛОЖЬ) КАК НачислятьАмортизациюНУФлаг,
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюУУ, ЛОЖЬ) КАК НачислятьАмортизациюУУ,
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(ИзменениеПараметровОС.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.КорректировкаСтоимости, ЛОЖЬ) КАК КорректировкаСтоимости,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.КорректировкаАмортизации, ЛОЖЬ) КАК КорректировкаАмортизации,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.КорректировкаАмортизационнойПремии, ЛОЖЬ) КАК КорректировкаАмортизационнойПремии,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.РаздельнаяКорректировкаТекущегоИПрошлогоПериодов, ЛОЖЬ) КАК РаздельнаяКорректировкаТекущегоИПрошлогоПериодов,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.ОтражениеУменьшенияСтоимостиСторно, ЛОЖЬ) КАК ОтражениеУменьшенияСтоимостиСторно,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.ОтражениеУменьшенияАмортизацииСторно, ЛОЖЬ) КАК ОтражениеУменьшенияАмортизацииСторно,
	|	ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.ОтражениеУменьшенияАмортизационнойПремииСторно, ЛОЖЬ) КАК ОтражениеУменьшенияАмортизационнойПремииСторно,
	|	
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОС.ОтражениеУменьшенияАмортизационнойПремии, ЛОЖЬ)
	|			ТОГДА -ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОСТаблицаОС.АмортизационнаяПремия, 0)
	|		ИНАЧЕ ЕСТЬNULL(КорректировкаСтоимостиИАмортизацииОСТаблицаОС.АмортизационнаяПремия, 0) 
	|	КОНЕЦ КАК АмортизационнаяПремия,
	|
	|	ЕСТЬNULL(ВтСтоимостьОС.СтоимостьУУ, 0) КАК СтоимостьУУ,
	|	ЕСТЬNULL(ВтСтоимостьОС.СтоимостьБУ, 0) КАК СтоимостьБУ,
	|	ЕСТЬNULL(ВтСтоимостьОС.СтоимостьНУ, 0) КАК СтоимостьНУ,
	|	ЕСТЬNULL(ВтСтоимостьОС.СтоимостьЦФ, 0) КАК СтоимостьЦФ,
	|
	|	ЕСТЬNULL(ВтАмортизацияОС.АмортизацияУУ, 0) КАК АмортизацияУУ,
	|	ЕСТЬNULL(ВтАмортизацияОС.АмортизацияБУ, 0) КАК АмортизацияБУ,
	|	ЕСТЬNULL(ВтАмортизацияОС.АмортизацияНУ, 0) КАК АмортизацияНУ,
	|	ЕСТЬNULL(ВтАмортизацияОС.АмортизацияЦФ, 0) КАК АмортизацияЦФ
	|
	//++ Локализация
	|	,ЕСТЬNULL(ПерерасчетИмущественныхНалогов.ВариантПерерасчета, 0) КАК ВариантПерерасчета
	|	,ЕСТЬNULL(ПерерасчетИмущественныхНалогов.ВариантВозмещения, 0) КАК ВариантВозмещения
	|	,ЕСТЬNULL(ПерерасчетИмущественныхНалогов.СуммаКорректировки, 0) КАК СуммаКорректировки
	//-- Локализация
	|
	|ИЗ
	|	ВтСписокДокументов КАК ВтСписокДокументов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК ИзменениеПараметровОС
	|		ПО ИзменениеПараметровОС.Ссылка = ВтСписокДокументов.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС КАК КорректировкаСтоимостиИАмортизацииОС
	|		ПО КорректировкаСтоимостиИАмортизацииОС.Ссылка = ВтСписокДокументов.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаСтоимостиИАмортизацииОС.ОС КАК КорректировкаСтоимостиИАмортизацииОСТаблицаОС
	|		ПО КорректировкаСтоимостиИАмортизацииОСТаблицаОС.Ссылка = ВтСписокДокументов.Ссылка
	|			И КорректировкаСтоимостиИАмортизацииОСТаблицаОС.ОсновноеСредство = ВтСписокДокументов.ОсновноеСредство
	|
	//++ Локализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПерерасчетИмущественныхНалогов КАК ПерерасчетИмущественныхНалогов
	|		ПО ПерерасчетИмущественныхНалогов.Ссылка = ВтСписокДокументов.Ссылка
	//-- Локализация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСтоимостьОС КАК ВтСтоимостьОС
	|		ПО ВтСтоимостьОС.Ссылка = ВтСписокДокументов.Ссылка
	|			И ВтСтоимостьОС.ОсновноеСредство = ВтСписокДокументов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтАмортизацияОС КАК ВтАмортизацияОС
	|		ПО ВтАмортизацияОС.Ссылка = ВтСписокДокументов.Ссылка
	|			И ВтАмортизацияОС.ОсновноеСредство = ВтСписокДокументов.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВтСписокДокументов.Дата,
	|	ВтСписокДокументов.Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаНачала", ПараметрыРабочегоМеста.ОтборПериод.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПараметрыРабочегоМеста.ОтборПериод.ДатаОкончания);
	Запрос.УстановитьПараметр("ОтборОрганизация", ПараметрыРабочегоМеста.ОтборОрганизация);
	Запрос.УстановитьПараметр("ОтборОсновноеСредство", ПараметрыРабочегоМеста.ОтборОсновноеСредство);
	
	Результат = Запрос.ВыполнитьПакет();
	
	СписокДокументов = Результат[Результат.ВГраница()].Выгрузить();
	ИндексСпискаДокументов = Новый Соответствие();
	Для Каждого ВыборкаДокумент Из СписокДокументов Цикл
		
		ВыборкаДокументы = ИндексСпискаДокументов.Получить(ВыборкаДокумент.ОсновноеСредство);
		Если ВыборкаДокументы = Неопределено Тогда
			ВыборкаДокументы = Новый Массив;
		КонецЕсли;
		
		ВыборкаДокументы.Добавить(ВыборкаДокумент);
		
		ИндексСпискаДокументов.Вставить(ВыборкаДокумент.ОсновноеСредство, ВыборкаДокументы);
		
	КонецЦикла;
	
	Выборка = Результат[Результат.ВГраница()-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеСтроки = ДанныеСписка.Добавить();
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
		
		ДанныеДокументовОС = Новый Структура;

		ЗаполнитьСведенияПринятиеКУчету(ДанныеДокументовОС, Выборка);
		
		ВыборкаДокументы = ИндексСпискаДокументов.Получить(Выборка.ОсновноеСредство);
		Для Каждого ВыборкаДокумент Из ВыборкаДокументы Цикл
			
			ЗаполнитьСведенияИзменениеПараметров(ДанныеДокументовОС, ВыборкаДокумент);
			ЗаполнитьСведенияСписание(ДанныеДокументовОС, ВыборкаДокумент);
			ЗаполнитьСведенияКорректировкаСтоимостиИАмортизации(ДанныеДокументовОС, ВыборкаДокумент);
			
			//++ Локализация
			ЗаполнитьСведенияПараметрыНачисленияНалога(ДанныеДокументовОС, ВыборкаДокумент);
			ЗаполнитьСведенияСнятиеСРегистрации(ДанныеДокументовОС, ВыборкаДокумент);
			ЗаполнитьСведенияПерерасчетИмущественныхНалогов(ДанныеДокументовОС, ВыборкаДокумент);
			//-- Локализация
			
		КонецЦикла;
		
		ДанныеДокументов.Вставить(Выборка.ОсновноеСредство, ДанныеДокументовОС);
		
	КонецЦикла;
	
	Для Каждого ДанныеСтроки Из ДанныеСписка Цикл
		
		ДанныеДокументовОС = ДанныеДокументов.Получить(ДанныеСтроки.ОсновноеСредство);

		ДанныеСтроки.ПринятиеКУчетуПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "ПринятиеКУчетуОС2_4");
		
		ДанныеСтроки.ИзменениеПараметровПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "ИзменениеПараметровОС2_4");
			
		ДанныеСтроки.СписаниеПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "СписаниеОС2_4");
			
		ДанныеСтроки.КорректировкаПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "КорректировкаСтоимостиИАмортизацииОС");
		
		//++ Локализация
		ДанныеСтроки.ПараметрыНачисленияНалогаПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "ПараметрыНачисленияНалога");
		
		ДанныеСтроки.СнятиеСРегистрацииПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "СнятиеСРегистрации");
		
		ДанныеСтроки.ПерерасчетИмущественныхНалоговПредставление = 
			ПредставлениеДокументов(ДанныеДокументовОС, "ПерерасчетИмущественныхНалогов");
		//-- Локализация
		
		ЗаполнитьИнформацию(ДанныеСтроки, ДанныеДокументовОС);
		
	КонецЦикла;
	
	// Удаление служебных колонок
	ДанныеСписка.Колонки.Удалить("ДанныеДокументов");

	ДанныеРабочегоМеста = Новый Структура;
	ДанныеРабочегоМеста.Вставить("ДанныеСписка", ДанныеСписка);
	ДанныеРабочегоМеста.Вставить("ДанныеДокументов", ДанныеДокументов);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ДанныеСписка.Количество() / 100);
	
	Возврат ДанныеРабочегоМеста;

КонецФункции

Процедура ЗаполнитьСведенияПринятиеКУчету(ДанныеДокументовОС, Выборка)

	Если НЕ ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюУУ)
		И НЕ ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюБУ)
		И НЕ ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюНУ) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеДокументовОС.Свойство("ПринятиеКУчетуОС2_4") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.ПринятиеКУчетуОС2_4; // Массив
	КонецЕсли;
	
	Комментарий = "";
	Если ЗначениеЗаполнено(Выборка.КомментарийУУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийБУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюУУ = Выборка.ДокументВводаВЭксплуатациюБУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийНУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюУУ = Выборка.ДокументВводаВЭксплуатациюНУ) Тогда
				
		Комментарий = Выборка.КомментарийУУ;
		
	ИначеЕсли ЗначениеЗаполнено(Выборка.КомментарийБУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийУУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюБУ = Выборка.ДокументВводаВЭксплуатациюУУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийНУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюУУ = Выборка.ДокументВводаВЭксплуатациюНУ) Тогда
				
		Комментарий = Выборка.КомментарийБУ;
		
	ИначеЕсли ЗначениеЗаполнено(Выборка.КомментарийНУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийУУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюНУ = Выборка.ДокументВводаВЭксплуатациюУУ)
		И (НЕ ЗначениеЗаполнено(Выборка.КомментарийБУ)
			ИЛИ Выборка.ДокументВводаВЭксплуатациюНУ = Выборка.ДокументВводаВЭксплуатациюБУ) Тогда
				
		Комментарий = Выборка.КомментарийНУ;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюУУ)  Тогда
			
		ДобавитьДанныеДокумента(
			СписокДокументов, 
			Выборка.ДокументВводаВЭксплуатациюУУ, 
			Выборка.ДокументВводаВЭксплуатациюНомерУУ, 
			Выборка.ДокументВводаВЭксплуатациюДатаУУ,
			Комментарий);
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюБУ)
		И Выборка.ДокументВводаВЭксплуатациюБУ <> Выборка.ДокументВводаВЭксплуатациюУУ Тогда
		
		ДобавитьДанныеДокумента(
			СписокДокументов, 
			Выборка.ДокументВводаВЭксплуатациюБУ, 
			Выборка.ДокументВводаВЭксплуатациюНомерБУ, 
			Выборка.ДокументВводаВЭксплуатациюДатаБУ,
			Комментарий);
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.ДокументВводаВЭксплуатациюНУ)
		И Выборка.ДокументВводаВЭксплуатациюНУ <> Выборка.ДокументВводаВЭксплуатациюУУ
		И Выборка.ДокументВводаВЭксплуатациюНУ <> Выборка.ДокументВводаВЭксплуатациюБУ Тогда
		
		ДобавитьДанныеДокумента(
			СписокДокументов, 
			Выборка.ДокументВводаВЭксплуатациюНУ, 
			Выборка.ДокументВводаВЭксплуатациюНомерНУ, 
			Выборка.ДокументВводаВЭксплуатациюДатаНУ,
			Комментарий);
			
	КонецЕсли;

	ДобавитьПараметрДокумента(
		ДанныеДокументовОС, 
		"РежимИсправленияСПрошлойДаты", 
		Выборка.РежимИсправленияСПрошлойДатыУУ ИЛИ Выборка.РежимИсправленияСПрошлойДатыБУ ИЛИ Выборка.РежимИсправленияСПрошлойДатыНУ);
	
	ДобавитьПараметрДокумента(
		ДанныеДокументовОС, 
		"ДоначислитьАмортизациюЗаПрошлыйПериод", 
		Выборка.ДоначислитьАмортизациюЗаПрошлыйПериодУУ ИЛИ Выборка.ДоначислитьАмортизациюЗаПрошлыйПериодБУ ИЛИ Выборка.ДоначислитьАмортизациюЗаПрошлыйПериодНУ);
	
	ДанныеДокументовОС.Вставить("ПринятиеКУчетуОС2_4", СписокДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияИзменениеПараметров(ДанныеДокументовОС, ВыборкаДокумент)
	
	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.ИзменениеПараметровОС2_4") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеДокументовОС.Свойство("ИзменениеПараметровОС2_4") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.ИзменениеПараметровОС2_4; // Массив
	КонецЕсли;
	
	ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
	
	Если ВыборкаДокумент.СрокИспользованияУУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "СрокИспользованияУУ", ВыборкаДокумент.СрокИспользованияУУ);
	КонецЕсли;

	Если ВыборкаДокумент.СрокИспользованияБУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "СрокИспользованияБУ", ВыборкаДокумент.СрокИспользованияБУ);
	КонецЕсли;

	Если ВыборкаДокумент.СрокИспользованияНУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "СрокИспользованияНУ", ВыборкаДокумент.СрокИспользованияНУ);
	КонецЕсли;

	Если ВыборкаДокумент.НачислятьАмортизациюУУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "НачислятьАмортизациюУУ", ВыборкаДокумент.НачислятьАмортизациюУУ);
	КонецЕсли;

	Если ВыборкаДокумент.НачислятьАмортизациюБУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "НачислятьАмортизациюБУ", ВыборкаДокумент.НачислятьАмортизациюБУ);
	КонецЕсли;

	Если ВыборкаДокумент.НачислятьАмортизациюНУФлаг Тогда
		ДобавитьПараметрДокумента(ДанныеДокументовОС, "НачислятьАмортизациюНУ", ВыборкаДокумент.НачислятьАмортизациюНУ);
	КонецЕсли;

	ДанныеДокументовОС.Вставить("ИзменениеПараметровОС2_4", СписокДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияСписание(ДанныеДокументовОС, ВыборкаДокумент)
	
	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.СписаниеОС2_4") Тогда
		Возврат;
	КонецЕсли;
		
	Если НЕ ДанныеДокументовОС.Свойство("СписаниеОС2_4") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.СписаниеОС2_4; // Массив
	КонецЕсли;
	
	ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
	
	ДанныеДокументовОС.Вставить("СписаниеОС2_4", СписокДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияКорректировкаСтоимостиИАмортизации(ДанныеДокументовОС, ВыборкаДокумент)
	
	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.КорректировкаСтоимостиИАмортизацииОС") Тогда
		Возврат;
	КонецЕсли;
		
	Если НЕ ДанныеДокументовОС.Свойство("КорректировкаСтоимостиИАмортизацииОС") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.КорректировкаСтоимостиИАмортизацииОС; // Массив
	КонецЕсли;
	
	ДанныеДокумента = ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
		
	ДанныеДокумента.Вставить("КорректировкаСтоимости", ВыборкаДокумент.КорректировкаСтоимости);
	ДанныеДокумента.Вставить("СтоимостьУУ", ВыборкаДокумент.СтоимостьУУ);
	ДанныеДокумента.Вставить("СтоимостьБУ", ВыборкаДокумент.СтоимостьБУ);
	ДанныеДокумента.Вставить("СтоимостьНУ", ВыборкаДокумент.СтоимостьНУ);
	ДанныеДокумента.Вставить("СтоимостьЦФ", ВыборкаДокумент.СтоимостьЦФ);
	ДанныеДокумента.Вставить("ОтражениеУменьшенияСтоимостиСторно", ВыборкаДокумент.ОтражениеУменьшенияСтоимостиСторно);
	
	ДанныеДокумента.Вставить("КорректировкаАмортизации", ВыборкаДокумент.КорректировкаАмортизации);
	ДанныеДокумента.Вставить("АмортизацияУУ", ВыборкаДокумент.АмортизацияУУ);
	ДанныеДокумента.Вставить("АмортизацияБУ", ВыборкаДокумент.АмортизацияБУ);
	ДанныеДокумента.Вставить("АмортизацияНУ", ВыборкаДокумент.АмортизацияНУ);
	ДанныеДокумента.Вставить("АмортизацияЦФ", ВыборкаДокумент.АмортизацияЦФ);
	ДанныеДокумента.Вставить("РаздельнаяКорректировкаТекущегоИПрошлогоПериодов", ВыборкаДокумент.РаздельнаяКорректировкаТекущегоИПрошлогоПериодов);
	ДанныеДокумента.Вставить("ОтражениеУменьшенияАмортизацииСторно", ВыборкаДокумент.ОтражениеУменьшенияАмортизацииСторно);
	
	ДанныеДокумента.Вставить("КорректировкаАмортизационнойПремии", ВыборкаДокумент.КорректировкаАмортизационнойПремии);
	ДанныеДокумента.Вставить("АмортизационнаяПремия", ВыборкаДокумент.АмортизационнаяПремия);
	ДанныеДокумента.Вставить("ОтражениеУменьшенияАмортизационнойПремииСторно", ВыборкаДокумент.ОтражениеУменьшенияАмортизационнойПремииСторно);
		
	ДанныеДокументовОС.Вставить("КорректировкаСтоимостиИАмортизацииОС", СписокДокументов);
		
КонецПроцедуры

//++ Локализация

Процедура ЗаполнитьСведенияПараметрыНачисленияНалога(ДанныеДокументовОС, ВыборкаДокумент)

	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.ПараметрыНачисленияЗемельногоНалога")
		И ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.ПараметрыНачисленияНалогаНаИмущество")
		И ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.ПараметрыНачисленияТранспортногоНалога") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеДокументовОС.Свойство("ПараметрыНачисленияНалога") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.ПараметрыНачисленияНалога; // Массив
	КонецЕсли;
	
	ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
	
	ДанныеДокументовОС.Вставить("ПараметрыНачисленияНалога", СписокДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияСнятиеСРегистрации(ДанныеДокументовОС, ВыборкаДокумент)

	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.СнятиеСРегистрацииЗемельныхУчастков")
		И ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.СнятиеСРегистрацииТранспортныхСредств") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеДокументовОС.Свойство("СнятиеСРегистрации") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.СнятиеСРегистрации; // Массив
	КонецЕсли;
	
	ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
	
	ДанныеДокументовОС.Вставить("СнятиеСРегистрации", СписокДокументов);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияПерерасчетИмущественныхНалогов(ДанныеДокументовОС, ВыборкаДокумент)
	
	Если ТипЗнч(ВыборкаДокумент.Ссылка) <> Тип("ДокументСсылка.ПерерасчетИмущественныхНалогов") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеДокументовОС.Свойство("ПерерасчетИмущественныхНалогов") Тогда
		СписокДокументов = Новый Массив;
	Иначе
		СписокДокументов = ДанныеДокументовОС.ПерерасчетИмущественныхНалогов; // Массив
	КонецЕсли;
	
	ДанныеДокумента = ДобавитьДанныеДокумента(
		СписокДокументов, 
		ВыборкаДокумент.Ссылка, 
		ВыборкаДокумент.Номер, 
		ВыборкаДокумент.Дата,
		ВыборкаДокумент.Комментарий,
		ВыборкаДокумент.ОтражатьВРеглУчете,
		ВыборкаДокумент.ОтражатьВУпрУчете);
	
	ДанныеДокумента.Вставить("ВариантПерерасчета", ВыборкаДокумент.ВариантПерерасчета);
	ДанныеДокумента.Вставить("ВариантВозмещения", ВыборкаДокумент.ВариантВозмещения);
	ДанныеДокумента.Вставить("СуммаКорректировки", ВыборкаДокумент.СуммаКорректировки);
	
	ДанныеДокументовОС.Вставить("ПерерасчетИмущественныхНалогов", СписокДокументов);
	
КонецПроцедуры

//-- Локализация

Процедура ЗаполнитьИнформацию(ДанныеСтроки, ДанныеДокументовОС)
	
	ВалютаУпр = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	ВалютаРегл = Строка(ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(ДанныеСтроки.Организация));
	
	СтрокиИнформация = Новый Массив;
	
	ИмяСтиляШрифтНаклонный = Метаданные.ЭлементыСтиля.ШрифтНаклонныйУП.Имя;
	
	#Область ПринятиеКУчету
	
	Если ДанныеДокументовОС.Свойство("РежимИсправленияСПрошлойДаты")
		И ДанныеДокументовОС.РежимИсправленияСПрошлойДаты Тогда
			
		Текст = НСтр("ru = 'Основное средство принято к учету с прошлой даты.'");
		СтрокиИнформация.Добавить(Текст);
	
		Если ДанныеДокументовОС.ДоначислитьАмортизациюЗаПрошлыйПериод Тогда
			Текст = НСтр("ru = 'Амортизация доначисляется автоматически при расчете амортизации.'");
			СтрокиИнформация.Добавить(Текст);
		Иначе
			Текст = НСтр("ru = 'Амортизация доначисляется вручную при помощи корректировки.'");
			СтрокиИнформация.Добавить(Текст);
		КонецЕсли;
	
	КонецЕсли;
	
	#КонецОбласти

	#Область ИзменениеПараметров
	
	Если ДанныеДокументовОС.Свойство("ИзменениеПараметровОС2_4") Тогда
		
		ЕстьИзменениеСПИ = 
			ДанныеДокументовОС.Свойство("СрокИспользованияУУ")
			ИЛИ ДанныеДокументовОС.Свойство("СрокИспользованияБУ")
			ИЛИ ДанныеДокументовОС.Свойство("СрокИспользованияНУ");
			
		ЕстьИзменениеНачисленияАмортизации = 
			ДанныеДокументовОС.Свойство("НачислятьАмортизациюУУ")
				И ДанныеДокументовОС.НачислятьАмортизациюУУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюБУ")
				И ДанныеДокументовОС.НачислятьАмортизациюБУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюНУ");
			
		Если ЕстьИзменениеСПИ И ЕстьИзменениеНачисленияАмортизации Тогда
			
			Текст = НСтр("ru = 'Изменением параметров установлен новый срок использования и начисление амортизации.'");
			СтрокиИнформация.Добавить(Текст);
		
		ИначеЕсли ЕстьИзменениеСПИ Тогда
			
			Текст = НСтр("ru = 'Изменением параметров установлен новый срок использования.'");
			СтрокиИнформация.Добавить(Текст);
			
		ИначеЕсли ДанныеДокументовОС.Свойство("НачислятьАмортизациюУУ")
				И ДанныеДокументовОС.НачислятьАмортизациюУУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюБУ")
				И ДанныеДокументовОС.НачислятьАмортизациюБУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюНУ")
				И ДанныеДокументовОС.НачислятьАмортизациюНУ Тогда
			
			Текст = НСтр("ru = 'Изменением параметров возобновлено начисление амортизации.'");
			СтрокиИнформация.Добавить(Текст);
			
		ИначеЕсли ДанныеДокументовОС.Свойство("НачислятьАмортизациюУУ")
				И НЕ ДанныеДокументовОС.НачислятьАмортизациюУУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюБУ")
				И НЕ ДанныеДокументовОС.НачислятьАмортизациюБУ
			ИЛИ ДанныеДокументовОС.Свойство("НачислятьАмортизациюНУ")
				И НЕ ДанныеДокументовОС.НачислятьАмортизациюНУ Тогда
			
			Текст = НСтр("ru = 'Изменением параметров остановлено начисление амортизации.'");
			СтрокиИнформация.Добавить(Текст);
			
		КонецЕсли;
		
	Иначе
			
		Текст = НСтр("ru = 'Если с даты принятия к учету параметры учета изменялись, то необходимо оформить изменение параметров (можно оформить несколько документов).'");
		СтрокиИнформация.Добавить(Текст);
		
	КонецЕсли;
	
	#КонецОбласти

	#Область КорректировкаСтоимостиИАмортизации
	
	Если ДанныеДокументовОС.Свойство("КорректировкаСтоимостиИАмортизацииОС") Тогда
	
		СтоимостьУУ = 0;
		СтоимостьБУ = 0;
		СтоимостьНУ = 0;
		СтоимостьЦФ = 0;
		
		АмортизацияУУ = 0;
		АмортизацияБУ = 0;
		АмортизацияНУ = 0;
		АмортизацияЦФ = 0;
		
		АмортизационнаяПремия = 0;
		
		СписокДокументов = ДанныеДокументовОС.КорректировкаСтоимостиИАмортизацииОС; // Массив
		Для Каждого ДанныеДокумента Из СписокДокументов Цикл
			
			Если ДанныеДокумента.КорректировкаСтоимости
				И СтоимостьУУ = 0
				И СтоимостьБУ = 0
				И СтоимостьНУ = 0
				И СтоимостьЦФ = 0 Тогда
			
				Если ДанныеДокумента.ОтражатьВУпрУчете
					И ДанныеДокумента.СтоимостьУУ <> 0 Тогда
							
					СтоимостьУУ = ДанныеДокумента.СтоимостьУУ;
				КонецЕсли;
				
				Если ДанныеДокумента.ОтражатьВРеглУчете
					И (ДанныеДокумента.СтоимостьБУ <> 0 
						ИЛИ ДанныеДокумента.СтоимостьНУ <> 0 
						ИЛИ ДанныеДокумента.СтоимостьЦФ <> 0) Тогда
							
					СтоимостьБУ = ДанныеДокумента.СтоимостьБУ;
					СтоимостьНУ = ДанныеДокумента.СтоимостьНУ;
					СтоимостьЦФ = ДанныеДокумента.СтоимостьЦФ;
					
				КонецЕсли;
			
			КонецЕсли;
			
			Если ДанныеДокумента.КорректировкаАмортизации
				И АмортизацияУУ = 0
				И АмортизацияБУ = 0
				И АмортизацияНУ = 0
				И АмортизацияЦФ = 0 Тогда
			
				Если ДанныеДокумента.ОтражатьВУпрУчете
					И ДанныеДокумента.АмортизацияУУ <> 0 Тогда
							
					АмортизацияУУ = ДанныеДокумента.АмортизацияУУ;
				КонецЕсли;
				
				Если ДанныеДокумента.ОтражатьВРеглУчете
					И (ДанныеДокумента.АмортизацияБУ <> 0 
						ИЛИ ДанныеДокумента.АмортизацияНУ <> 0 
						ИЛИ ДанныеДокумента.АмортизацияЦФ <> 0) Тогда
							
					АмортизацияБУ = ДанныеДокумента.АмортизацияБУ;
					АмортизацияНУ = ДанныеДокумента.АмортизацияНУ;
					АмортизацияЦФ = ДанныеДокумента.АмортизацияЦФ;
					
				КонецЕсли;
			
			КонецЕсли;
			
			Если ДанныеДокумента.КорректировкаАмортизационнойПремии
				И АмортизационнаяПремия = 0 Тогда
				
				АмортизационнаяПремия = ДанныеДокумента.АмортизационнаяПремия;
					
			КонецЕсли;
			
		КонецЦикла;
		
		Если СтоимостьУУ <> 0
			ИЛИ СтоимостьБУ <> 0
			ИЛИ СтоимостьНУ <> 0
			ИЛИ СтоимостьЦФ <> 0 Тогда
			
			Если СписокДокументов.Количество() > 1 Тогда
				Текст = СтрШаблон(НСтр("ru = 'Сведения об изменении стоимости по данным первого документа:<span style=""font:%1"">'"), ИмяСтиляШрифтНаклонный);
				СтрокиИнформация.Добавить(Текст);
			Иначе
				Текст = СтрШаблон(НСтр("ru = 'Сведения об изменении стоимости:<span style=""font:%1"">'"), ИмяСтиляШрифтНаклонный);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если СтоимостьУУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'УУ: %1 (%2)'"), Формат(СтоимостьУУ, "ЧДЦ=2;"), ВалютаУпр);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если СтоимостьБУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'БУ: %1 (%2)'"), Формат(СтоимостьБУ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если СтоимостьНУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'НУ: %1 (%2)'"), Формат(СтоимостьНУ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если СтоимостьЦФ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'ЦФ: %1 (%2)'"), Формат(СтоимостьЦФ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			СтрокиИнформация.Добавить("</span>");
			
		КонецЕсли;
		
		Если АмортизацияУУ <> 0
			ИЛИ АмортизацияБУ <> 0
			ИЛИ АмортизацияНУ <> 0
			ИЛИ АмортизацияЦФ <> 0 Тогда
			
			Если СписокДокументов.Количество() > 1 Тогда
				Текст = СтрШаблон(НСтр("ru = 'Сведения об изменении амортизации по данным первого документа:<span style=""font:%1"">'"), ИмяСтиляШрифтНаклонный);
				СтрокиИнформация.Добавить(Текст);
			Иначе
				Текст = СтрШаблон(НСтр("ru = 'Сведения об изменении амортизации:<span style=""font:%1"">'"), ИмяСтиляШрифтНаклонный);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если АмортизацияУУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'УУ: %1 (%2)'"), Формат(АмортизацияУУ, "ЧДЦ=2;"), ВалютаУпр);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если АмортизацияБУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'БУ: %1 (%2)'"), Формат(АмортизацияБУ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если АмортизацияНУ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'НУ: %1 (%2)'"), Формат(АмортизацияНУ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			Если АмортизацияЦФ <> 0 Тогда
				Текст = СтрШаблон(НСтр("ru = 'ЦФ: %1 (%2)'"), Формат(АмортизацияЦФ, "ЧДЦ=2;"), ВалютаРегл);
				СтрокиИнформация.Добавить(Текст);
			КонецЕсли;
			
			СтрокиИнформация.Добавить("</span>");

		КонецЕсли;
		
		Если АмортизационнаяПремия <> 0 Тогда
			
			Если СписокДокументов.Количество() > 1 Тогда
				Текст = НСтр("ru = 'Сведения об изменении амортизационной премии по данным первого документа: %1 (%2)'");
			Иначе
				Текст = НСтр("ru = 'Сведения об изменении амортизационной премии: %1 (%2)'");
			КонецЕсли;
			
			Текст = СтрШаблон(Текст, Формат(АмортизационнаяПремия, "ЧДЦ=2;"), ВалютаРегл);
			СтрокиИнформация.Добавить(Текст);
			
		КонецЕсли;
				
	КонецЕсли;
	
	#КонецОбласти

	//++ Локализация
	#Область ПерерасчетИмущественныхНалогов
	
	Если ДанныеДокументовОС.Свойство("ПерерасчетИмущественныхНалогов") Тогда
	
		СписокДокументов = ДанныеДокументовОС.ПерерасчетИмущественныхНалогов; // Массив
		
		Если СписокДокументов.Количество() > 1 Тогда
			Текст = НСтр("ru = 'Сведения о пересчете налога по данным первого документа: <span style=""font:%1"">%2</span>'");
		Иначе
			Текст = НСтр("ru = 'Сведения о пересчете налога: <span style=""font:%1"">%2</span>'");
		КонецЕсли;
		
		ВыборкаДокумент = СписокДокументов[0];
		
		Если ВыборкаДокумент.ВариантПерерасчета = Перечисления.ВариантыПерерасчетаИмущественныхНалогов.Доначислить Тогда

			Текст = СтрШаблон(Текст, ИмяСтиляШрифтНаклонный, СтрШаблон(НСтр("ru = 'доначислить %1 (%2)'"), Формат(ВыборкаДокумент.СуммаКорректировки, "ЧДЦ=2;"), ВалютаРегл));
			СтрокиИнформация.Добавить(Текст);
			
		ИначеЕсли ВыборкаДокумент.ВариантПерерасчета = Перечисления.ВариантыПерерасчетаИмущественныхНалогов.Возместить
			И ВыборкаДокумент.ВариантВозмещения = Перечисления.ВариантыВозмещенияИмущественныхНалогов.ЗачестьВСчетНалогаНаИмущество Тогда
				
			Текст = СтрШаблон(Текст, ИмяСтиляШрифтНаклонный, СтрШаблон(НСтр("ru = 'зачесть в счет налога на имущество %1 (%2)'"), Формат(ВыборкаДокумент.СуммаКорректировки, "ЧДЦ=2;"), ВалютаРегл));
			СтрокиИнформация.Добавить(Текст);
			
		ИначеЕсли ВыборкаДокумент.ВариантПерерасчета = Перечисления.ВариантыПерерасчетаИмущественныхНалогов.Возместить
			И ВыборкаДокумент.ВариантВозмещения = Перечисления.ВариантыВозмещенияИмущественныхНалогов.ЗачестьВСчетТранспортногоНалога Тогда
				
			Текст = СтрШаблон(Текст, ИмяСтиляШрифтНаклонный, СтрШаблон(НСтр("ru = 'зачесть в счет транспортного налога %1 (%2)'"), Формат(ВыборкаДокумент.СуммаКорректировки, "ЧДЦ=2;"), ВалютаРегл));
			СтрокиИнформация.Добавить(Текст);
			
		ИначеЕсли ВыборкаДокумент.ВариантПерерасчета = Перечисления.ВариантыПерерасчетаИмущественныхНалогов.Возместить
			И ВыборкаДокумент.ВариантВозмещения = Перечисления.ВариантыВозмещенияИмущественныхНалогов.ЗачестьВСчетЗемельногоНалога Тогда
				
			Текст = СтрШаблон(Текст, ИмяСтиляШрифтНаклонный, СтрШаблон(НСтр("ru = 'зачесть в счет земельного налога %1 (%2)'"), Формат(ВыборкаДокумент.СуммаКорректировки, "ЧДЦ=2;"), ВалютаРегл));
			СтрокиИнформация.Добавить(Текст);
			
		КонецЕсли;
			
	КонецЕсли;
	
	#КонецОбласти
	//-- Локализация
	
	Если СтрокиИнформация.Количество() <> 0 Тогда
		ДанныеСтроки.Информация = СтрСоединить(СтрокиИнформация, Символы.ПС);
	КонецЕсли;
	
КонецПроцедуры

Функция ПредставлениеДокументов(ДанныеДокументовОС, ИмяДокумента)

	Если НЕ ДанныеДокументовОС.Свойство(ИмяДокумента) Тогда
		Возврат "";
	КонецЕсли;
	
	ДанныеДокумента = ДанныеДокументовОС[ИмяДокумента]; // Массив
	Если ДанныеДокумента.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	СписокДокументов = Новый Массив;
	
	Если ДанныеДокумента.Количество() = 1 
		И ЗначениеЗаполнено(ДанныеДокумента[0].Комментарий) Тогда
		
		Представление = СтрШаблон(НСтр("ru = '№%1 от %2 (%3)'"), 
			ДанныеДокумента[0].Номер, Формат(ДанныеДокумента[0].Дата, "ДЛФ=D;"), Лев(ДанныеДокумента[0].Комментарий, 50));
		СписокДокументов.Добавить(Представление);
	Иначе
		Представление = СтрШаблон(НСтр("ru = '№%1 от %2'"), ДанныеДокумента[0].Номер, Формат(ДанныеДокумента[0].Дата, "ДЛФ=D;"));
		СписокДокументов.Добавить(Представление);
	КонецЕсли;
	
	Если ДанныеДокумента.Количество() > 1 Тогда
		
		Представление = СтрШаблон(НСтр("ru = '№%1 от %2'"), ДанныеДокумента[1].Номер, Формат(ДанныеДокумента[1].Дата, "ДЛФ=D;"));
		СписокДокументов.Добавить(Представление);
		
	КонецЕсли;
	
	Если ДанныеДокумента.Количество() = 3 Тогда
		
		Представление = СтрШаблон(НСтр("ru = '№%1 от %2'"), ДанныеДокумента[2].Номер, Формат(ДанныеДокумента[2].Дата, "ДЛФ=D;"));
		СписокДокументов.Добавить(Представление);
		
	ИначеЕсли ДанныеДокумента.Количество() > 3 Тогда
		
		Представление = СтрШаблон(НСтр("ru = '(еще %1)'"), ДанныеДокумента.Количество() - 2);
		СписокДокументов.Добавить(Представление);
		
	КонецЕсли;

	Представление = СтрСоединить(СписокДокументов, Символы.ПС);
	
	Возврат Представление;
	
КонецФункции

Функция ДобавитьДанныеДокумента(СписокДокументов, Ссылка, Номер, Дата, Комментарий, ОтражатьВРеглУчете = Неопределено, ОтражатьВУпрУчете = Неопределено)
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("ДокументСсылка", Ссылка);
	ДанныеДокумента.Вставить("Номер", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер));
	ДанныеДокумента.Вставить("Дата", Дата);
	ДанныеДокумента.Вставить("Комментарий", Комментарий);
	ДанныеДокумента.Вставить("ОтражатьВРеглУчете", ОтражатьВРеглУчете);
	ДанныеДокумента.Вставить("ОтражатьВУпрУчете", ОтражатьВУпрУчете);
	
	СписокДокументов.Добавить(ДанныеДокумента);
	
	Возврат ДанныеДокумента;
	
КонецФункции

Процедура ДобавитьПараметрДокумента(ДанныеДокументовОС, ИмяПараметра, ЗначениеПараметра)
	
	Если ДанныеДокументовОС.Свойство(ИмяПараметра) Тогда
		ДанныеДокументовОС.Вставить(ИмяПараметра, ЗначениеПараметра ИЛИ ДанныеДокументовОС[ИмяПараметра]);
	Иначе
		ДанныеДокументовОС.Вставить(ИмяПараметра, ЗначениеПараметра);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли