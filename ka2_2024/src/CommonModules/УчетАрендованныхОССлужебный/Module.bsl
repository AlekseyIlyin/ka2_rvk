////////////////////////////////////////////////////////////////////////////////
// Содержит служебные процедуры и функции подсистемы "Аренда".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Проверяет, что на основании договора аренды можно заполнить документ.
// 
// Параметры:
// 	Договор - СправочникСсылка.ДоговорыАренды -
// 	
// Возвращаемое значение:
// 		- Структура - содержит реквизиты договора:
//			* Организация - СправочникСсылка.Организации -
//			* Партнер - СправочникСсылка.Партнеры - 
//			* Контрагент - СправочникСсылка.Контрагенты -
//			* ВалютаВзаиморасчетов - СправочникСсылка.Валюты -
//			* НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС -
//			* ЕстьВыкупПредметовАренды - Булево - 
//		- Неопределено
//
Функция ПроверитьРеквизитыДоговораАренды(Договор) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДоговорыАренды.Организация,
	|	ДоговорыАренды.Партнер,
	|	ДоговорыАренды.Контрагент,
	|	ДоговорыАренды.ВалютаВзаиморасчетов,
	|	ДоговорыАренды.ЕстьВыкупПредметовАренды,
	|	ДоговорыАренды.ПометкаУдаления,
	|	ДоговорыАренды.НалогообложениеНДС,
	|	ЕСТЬNULL(УсловияДоговоровАренды.Состояние, НЕОПРЕДЕЛЕНО) КАК Состояние
	|ИЗ
	|	Справочник.ДоговорыАренды КАК ДоговорыАренды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияДоговоровАренды.СрезПоследних(&Дата, Договор = &Договор) КАК УсловияДоговоровАренды
	|		ПО УсловияДоговоровАренды.Договор = &Договор
	|ГДЕ
	|	ДоговорыАренды.Ссылка = &Договор";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ПометкаУдаления Тогда
		ТекстОшибки = НСтр("ru = 'Договор помечен на удаление, создание документа недоступно'");
		ВызватьИсключение ТекстОшибки
	ИначеЕсли Выборка.Состояние <> Перечисления.СостоянияДоговоровКонтрагентов.Действует Тогда
		ТекстОшибки = НСтр("ru = 'Не оформлено заключение договора или договор не действует, создание документа недоступно'");
		ВызватьИсключение ТекстОшибки
	КонецЕсли;
	
	РеквизитыДоговора = Новый Структура;
	РеквизитыДоговора.Вставить("Организация", Выборка.Организация);
	РеквизитыДоговора.Вставить("Партнер", Выборка.Партнер);
	РеквизитыДоговора.Вставить("Контрагент", Выборка.Контрагент);
	РеквизитыДоговора.Вставить("ВалютаВзаиморасчетов", Выборка.ВалютаВзаиморасчетов);
	РеквизитыДоговора.Вставить("ЕстьВыкупПредметовАренды", Выборка.ЕстьВыкупПредметовАренды);
	РеквизитыДоговора.Вставить("НалогообложениеНДС", Выборка.НалогообложениеНДС);
	
	Возврат РеквизитыДоговора;
	
КонецФункции

// Проверяет, что ОС получены в аренду (забалансовый учет).
// 
// Параметры:
// 	Объект - ДокументОбъект.ПоступлениеАрендованныхОС - 
// 	Отказ - Булево -
Процедура ПроверитьЧтоОСНеПолученыВАрендуЗаБалансом(Объект, Отказ) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(АрендованныеОС.Регистратор) КАК ПредставлениеДокумента,
	|	АрендованныеОС.ОсновноеСредство КАК СсылкаНаОС,
	|	АрендованныеОС.ОсновноеСредство.Представление КАК ПредставлениеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&Период,
	|			Регистратор <> &Ссылка
	|				И ОсновноеСредство В (&СписокОС)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Период", Объект.Дата);
	Запрос.УстановитьПараметр("СписокОС", Объект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = НСтр("ru = 'Основное средство ""%1"" уже поступало в аренду (забалансовый учет). См. %2'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ПредставлениеОС, Выборка.ПредставлениеДокумента);
			
		ДанныеСтроки = Объект.ОС.Найти(Выборка.СсылкаНаОС, "ОсновноеСредство");
		Путь = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОС", ДанныеСтроки.НомерСтроки, "ОсновноеСредство");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, Путь,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
