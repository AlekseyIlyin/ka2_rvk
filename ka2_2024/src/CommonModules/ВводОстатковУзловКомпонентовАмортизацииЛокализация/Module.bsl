////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков узлов, компонентов амортизации".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаОсновныеСредства

Процедура ФормаОсновныеСредства_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	СлужебныеПараметрыФормы = Форма.СлужебныеПараметрыФормы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
		ВестиУУНаПланеСчетовХозрасчетный = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");
		
		Элементы.ОтражатьВОперативномУчете.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВБУиНУ.Видимость = ИспользоватьРеглУчет;
		Элементы.ОтражатьВУУ.Видимость = ИспользоватьРеглУчет И ВестиУУНаПланеСчетовХозрасчетный;
			
		Элементы.ВводОстатковПо.Видимость = 
			Элементы.ОтражатьВОперативномУчете.Видимость
			ИЛИ Элементы.ОтражатьВБУиНУ.Видимость;

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ОСЗаполнитьПоДаннымОУ.Видимость = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаОсновныеСредства_ПриВыполненииКоманды(ИмяКоманды, Форма) Экспорт
	
	Объект = Форма.Объект;
	
	//++ Локализация
	
	Если ИмяКоманды = Форма.Команды.ЗаполнитьПоДаннымОУ.Имя Тогда
		ЗаполнитьПоДаннымОУ(Объект, Объект.ОС);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_ПриЧтенииСозданииНаСервере(Форма) Экспорт

	//++ Локализация
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	
	ДатаУчетнойПолитики = КонецМесяца(Форма.Дата) + 1;
	
	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрОрганизацияФункциональныхОпцийФормы(
		Форма, Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Форма.Организация, ДатаУчетнойПолитики);
	Форма.ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Форма.Организация, ДатаУчетнойПолитики);
	
	Форма.ВалютаРегл = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Форма.Организация);
	Элементы.ДекорацияЗаголовокНУ.Заголовок = СтрШаблон(НСтр("ru = 'НУ (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокПР.Заголовок = СтрШаблон(НСтр("ru = 'ПР (%1):'"), Строка(Форма.ВалютаРегл));
	Элементы.ДекорацияЗаголовокВР.Заголовок = СтрШаблон(НСтр("ru = 'ВР (%1):'"), Строка(Форма.ВалютаРегл));
	
	Форма.УпрУчетПоДаннымБУ = ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете");
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
		
		Элементы.ГруппаАмортизацияУУ.ОтображатьЗаголовок = 
			Форма.ОтражатьВРеглУчете;
			
		Элементы.ДекорацияЗаголовокНУ.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ОтражатьВРеглУчете;
		
		Элементы.ДекорацияЗаголовокПР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
		
		Элементы.ДекорацияЗаголовокВР.Видимость = 
			Форма.ПлательщикНалогаНаПрибыль 
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц 
			И Форма.ОтражатьВРеглУчете;
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ГруппаФинансовогоУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете Тогда
		
			Если ЗначениеЗаполнено(Форма.ГруппаФинансовогоУчета) Тогда
				РеквизитыГФУ = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.СтруктураЗначенийПоАналитикеУчета(Форма.ГруппаФинансовогоУчета, СтрРазделить("СтоимостьВНА,СтоимостьВНА_ЦФ,АмортизацияВНА,АмортизацияВНА_ЦФ", ","));
				ТекстСтоимость     = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчета_СтоимостьВНА);
				ТекстАмортизация   = СтрШаблон(НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете %1'"), РеквизитыГФУ.СчетУчета_АмортизацияВНА);
			Иначе
				ТекстСтоимость     = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета.'");
				ТекстАмортизация   = НСтр("ru = 'Для бухгалтерского и налогового учета определяется как остаток на счете учета накопления амортизации.'");
			КонецЕсли; 
			
		Иначе	
			
			ТекстСтоимость = "";
			ТекстАмортизация = "";
			
		КонецЕсли; 
		
		Элементы.ГруппаТекущаяСтоимостьЗаголовок.Подсказка = ТекстСтоимость;
		Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Подсказка = ТекстАмортизация;
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
//  ОбъектИлиДанныеСтроки - СтрокаТабличнойЧасти - 
//  ВспомогательныеРеквизиты - Структура - 
//  ПараметрыРеквизита - Массив из Структура -
//  Действие - Строка -
//  ИзмененныеРеквизиты - Массив из Строка -
// 
Процедура ЗаполнитьРеквизитыВЗависимостиОтСвойств(ОбъектИлиДанныеСтроки, ВспомогательныеРеквизиты, ПараметрыРеквизита, Действие, ИзмененныеРеквизиты) Экспорт

	//++ Локализация
	
	Если Действие = "Очистить"
		И (ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "НакопленнаяАмортизацияНУ"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьНУ"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ПервоначальнаяСтоимостьПР"
			
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьПР"
			ИЛИ ПараметрыРеквизита.ИмяРеквизита = "ТекущаяСтоимостьНУ") Тогда
		
		ОбъектИлиДанныеСтроки[ПараметрыРеквизита.ИмяРеквизита] = 0;
		ИзмененныеРеквизиты.Добавить(ПараметрыРеквизита.ИмяРеквизита);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                         КАК Регистратор,
	|	&Период                         КАК Период,
	|	ТаблицаОС.ОсновноеСредство      КАК ОсновноеСредство,
	|	&Организация                    КАК Организация,
	|	НЕОПРЕДЕЛЕНО                    КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                    КАК Контрагент,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ДатаПринятияКУчетуУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ                           КАК ДатаВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете
	|			ТОГДА &Ссылка 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.МетодНачисленияАмортизацииБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК МетодНачисленияАмортизацииБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПорядокУчетаУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПорядокУчетаУУ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ                           КАК ПорядокУчетаУУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВРеглУчете
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьБУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьБУ,
	|
	|	ВЫБОР 
	|		КОГДА &ОтражатьВУпрУчете 
	|			ТОГДА ТаблицаОС.ПервоначальнаяСтоимостьУУ 
	|		ИНАЧЕ ЕСТЬNULL(втПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ, 0)
	|	КОНЕЦ                           КАК ПервоначальнаяСтоимостьУУ
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК втПервоначальныеСведенияОС
	|		ПО втПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПараметрыАмортизацииОСБУ() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                               КАК Регистратор,
	|	&Период                               КАК Период,
	|	&Организация                          КАК Организация,
	|	ТаблицаОС.ОсновноеСредство            КАК ОсновноеСредство,
	|
	|	ТаблицаОС.СрокИспользованияБУ         КАК СрокПолезногоИспользованияБУ,
	|	ТаблицаОС.КоэффициентУскоренияБУ      КАК КоэффициентУскорения,
	|	ТаблицаОС.ЛиквидационнаяСтоимостьРегл КАК ЛиквидационнаяСтоимость,
	|
	|	ТаблицаОС.ОбъемНаработки              КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ТаблицаОС.СрокИспользованияБУ         КАК СрокИспользованияДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьПР          КАК ПРДляВычисленияАмортизации,
	|	ТаблицаОС.ТекущаяСтоимостьБУ          КАК СтоимостьДляВычисленияАмортизации,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ        КАК ДатаПоследнегоИзменения
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаПорядокУчетаОСБУ(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивы.ТекстЗапросаСрезПоследнихРегистра(
		"ПорядокУчетаОСБУ", "ВтПорядокУчетаОСБУВладельцев", "ВтТаблицаВладельцев", ТекстыЗапроса);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                    КАК Период,
	|	&Организация               КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК СостояниеБУ,
	|
	|	ТаблицаОС.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|
	|	ТаблицаОС.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходовБУ,
	|	ТаблицаОС.СтатьяРасходовБУ КАК СтатьяРасходовБУ,
	|	ТаблицаОС.АналитикаРасходовБУ КАК АналитикаРасходовБУ,
	|	ТаблицаОС.ПодразделениеБУ КАК ПодразделениеБУ,
	|	ТаблицаОС.НаправлениеДеятельностиБУ КАК НаправлениеДеятельностиБУ,
	|
	|	СведенияВладельца.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	СведенияВладельца.НедвижимоеИмущество КАК НедвижимоеИмущество,
	|	СведенияВладельца.НалогообложениеНДС КАК НалогообложениеНДС
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПорядокУчетаОСБУВладельцев КАК СведенияВладельца
	|		ПО СведенияВладельца.Ссылка = ТаблицаОС.Ссылка 
	|			И СведенияВладельца.ОсновноеСредство = ТаблицаОС.ОсновноеСредствоВладелец 
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаСтоимостьОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	&ОтражатьВРеглУчете                          КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУпрУчете                           КАК ОтражатьВУпрУчете,
	|
	|	ТаблицаОС.ТекущаяСтоимостьУУ                 КАК Стоимость,
	|	ТаблицаОС.ТекущаяСтоимостьБУ                 КАК СтоимостьРегл,
	|	ТаблицаОС.ТекущаяСтоимостьПР                 КАК СтоимостьПР,
	|
	|	ТаблицаОС.ТекущаяСтоимостьБУ 
	|		- ТаблицаОС.ТекущаяСтоимостьПР           КАК СтоимостьВР,
	|
	|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСтоимостиОС)  КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковСтоимостиОС) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|		ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0)
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// 
// Возвращаемое значение:
//  Строка - Текст запроса
Функция ТекстЗапросаТаблицаАмортизацияОС() Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Ссылка                                      КАК Регистратор,
	|	&Период                                      КАК Период,
	|	&Организация                                 КАК Организация,
	|	&Местонахождение                             КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|	ТаблицаОС.НакопленнаяАмортизацияУУ           КАК Амортизация,
	|	ТаблицаОС.НакопленнаяАмортизацияБУ           КАК АмортизацияРегл,
	|	ТаблицаОС.НакопленнаяАмортизацияПР           КАК АмортизацияПР,
	|
	|	ТаблицаОС.НакопленнаяАмортизацияБУ
	|		- ТаблицаОС.НакопленнаяАмортизацияПР     КАК АмортизацияВР,
	|
	|	ТаблицаОС.ИдентификаторСтроки                КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВводОстатковАмортизацииОС) КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВОперативномУчете
	|	И (ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияБУ <> 0
	|		ИЛИ ТаблицаОС.НакопленнаяАмортизацияПР <> 0)
	|";
	
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ Локализация

Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                       КАК Период,
	|	&Организация                  КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)  КАК ДатаОтражения
	|ГДЕ
	|	&Период >= &ДатаНачалаУчета
	|	И (&ОтражатьВБУиНУ ИЛИ &ОтражатьВУУ)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка                        КАК Регистратор,
	|	ТаблицаОС.ДатаПринятияКУчетуБУ КАК Период,
	|	&Организация                   КАК Организация,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	&НазваниеДокумента             КАК НазваниеДокумента,
	|	&Номер                         КАК НомерДокумента
	|
	|ИЗ
	|	Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И &ОтражатьВРеглУчете
	|	И &ОтражатьВОперативномУчете
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Процедура ПроверитьОтражениеВУчете(Объект, Отказ)
	
	Если НЕ Объект.ОтражатьВОперативномУчете
		И Объект.ОтражатьВБУиНУ 
		И НЕ Объект.ОтражатьВУУ
		И Объект.ОтражатьВУпрУчете Тогда
		
		Текст = НСтр("ru='Основные средства должны быть приняты к учету только в бухгалтерском учете.'");
		ОбщегоНазначения.СообщитьПользователю(Текст, , "ВариантОтраженияВУчете",, Отказ);
		
	ИначеЕсли НЕ Объект.ОтражатьВОперативномУчете
		И Объект.ОтражатьВУУ
		И НЕ Объект.ОтражатьВБУиНУ 
		И Объект.ОтражатьВРеглУчете Тогда
			
		Текст = НСтр("ru='Основные средства должны быть приняты к учету только в управленческом учете.'");
		ОбщегоНазначения.СообщитьПользователю(Текст, , "ВариантОтраженияВУчете",, Отказ);
		
	КонецЕсли;
		
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область СтоимостьОС_Дт_СчетУчета__Кт_000
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Остатки счета учета ОС (Дт СчетУчета:: Кт 000)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.СтоимостьРегл КАК Сумма,
	|	Строки.Стоимость КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	Строки.СтоимостьПР КАК СуммаПРДт,
	|	Строки.СтоимостьВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Остатки счета учета ОС"" КАК Содержание
	|ИЗ
	|	втСтоимостьОС КАК Строки
	|
	|ГДЕ
	|	Строки.Стоимость <> 0
	|		ИЛИ Строки.СтоимостьРегл <> 0
	|		ИЛИ Строки.СтоимостьПР <> 0
	|		ИЛИ Строки.СтоимостьВР <> 0";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
			
	#Область АмортизацияОС_Дт_000__Кт_СчетАмортизации
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Накопленная амортизация ОС (Дт 000:: Кт СчетАмортизации)
	|ВЫБРАТЬ
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.АмортизацияРегл КАК Сумма,
	|	Строки.Амортизация КАК СуммаУУ,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.ОсновноеСредство КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	Строки.АмортизацияПР КАК СуммаПРКт,
	|	Строки.АмортизацияВР КАК СуммаВРКт,
	|
	|	""Накопленная амортизация ОС"" КАК Содержание
	|
	|ИЗ
	|	втАмортизацияОС КАК Строки
	|
	|ГДЕ
	|	(Строки.Амортизация <> 0
	|		ИЛИ Строки.АмортизацияРегл <> 0
	|		ИЛИ Строки.АмортизацияПР <> 0
	|		ИЛИ Строки.АмортизацияВР <> 0)";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ОбесценениеВНА // Дт <000> Кт СчетОбесцененияВНА
	ТекстЗапроса =
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Резерв дооценки НМА (Дт <000> Кт СчетОбесцененияВНА)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ОбесценениеВНА.ОбесценениеРегл КАК Сумма,
	|	ОбесценениеВНА.ОбесценениеУпр КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ОбесценениеВНА) КАК ВидСчетаКт,
	|	ОбесценениеВНА.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ОбесценениеВНА.Подразделение КАК ПодразделениеКт,
	|	ОбесценениеВНА.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ОбесценениеВНА.ВнеоборотныйАктив КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	ОбесценениеВНА.ОбесценениеРегл КАК СуммаВРКт,
	|
	|	""Обесценение ОС"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковУзловКомпонентовАмортизации КАК Операция
	|		ПО Операция.Ссылка = ДокументыКОтражению.Ссылка
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбесценениеВНА КАК ОбесценениеВНА
	|		ПО ОбесценениеВНА.Регистратор = Операция.Ссылка
	|			И ОбесценениеВНА.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	#Область втСтоимостьОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ОтражатьВРеглУчете           КАК ОтражатьВРеглУчете,
	|	ДанныеДокумента.ОтражатьВУпрУчете            КАК ОтражатьВУпрУчете,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьПР,
	|
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				И ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.ТекущаяСтоимостьБУ 
	|					- ТаблицаОС.ТекущаяСтоимостьПР           
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьВР
	|
	|ПОМЕСТИТЬ втСтоимостьОС
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковУзловКомпонентовАмортизации КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ 
	|			И ТаблицаОС.ТекущаяСтоимостьУУ <> 0
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ 
	|			И (ТаблицаОС.ТекущаяСтоимостьБУ <> 0
	|				ИЛИ ТаблицаОС.ТекущаяСтоимостьПР <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область втАмортизацияОС
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                       КАК Регистратор,
	|	ДанныеДокумента.Дата                         КАК Период,
	|	ДанныеДокумента.Организация                  КАК Организация,
	|	ДанныеДокумента.Местонахождение              КАК Подразделение,
	|	ТаблицаОС.ОсновноеСредство                   КАК ОсновноеСредство,
	|	ТаблицаОС.ГруппаФинансовогоУчета             КАК ГруппаФинансовогоУчета,
	|	ТаблицаОС.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковАмортизацииОС)  КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВУУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияУУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Амортизация,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияРегл,
	|
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА ТаблицаОС.НакопленнаяАмортизацияПР
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияПР,
	|
	|	ВЫБОР 
	|		КОГДА НЕ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.ПрименяетсяПБУ18, ЛОЖЬ)
	|				ИЛИ ТаблицаОС.ПорядокУчетаБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ИЛИ НЕ ДанныеДокумента.ОтражатьВБУиНУ
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаОС.НакопленнаяАмортизацияБУ
	|				- ТаблицаОС.НакопленнаяАмортизацияПР
	|	КОНЕЦ КАК АмортизацияВР
	|
	|ПОМЕСТИТЬ втАмортизацияОС
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковУзловКомпонентовАмортизации КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатковУзловКомпонентовАмортизации.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДокументыКОтражению.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО УчетнаяПолитикаОрганизаций.Ссылка = ДанныеДокумента.Ссылка
	|			И УчетнаяПолитикаОрганизаций.Организация = ДанныеДокумента.Организация
	|
	|ГДЕ
	|	(ДанныеДокумента.ОтражатьВУУ
	|			И ТаблицаОС.НакопленнаяАмортизацияУУ <> 0
	|		ИЛИ ДанныеДокумента.ОтражатьВБУиНУ
	|			И (ТаблицаОС.НакопленнаяАмортизацияБУ <> 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	СписокЗапросов.Добавить(Символы.ПС);
	
	Возврат СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	//-- Локализация
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	ПроверитьОтражениеВУчете(Объект, Отказ);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
// 
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ВводОстатковУзловКомпонентовАмортизации - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПоДаннымОперативногоУчета

Функция ОстаткиПоТипуОперации(Дата, Организации, ДополнительныйОтбор = Неопределено, ПараметрыЗаполненияОстатков = Неопределено) Экспорт

	//++ Локализация
	
	ДатаОстатков = Новый Граница(Дата, ВидГраницы.Включая);
	
	Возврат ОстаткиОсновныхСредств(ДатаОстатков, Организации, ДополнительныйОтбор, ПараметрыЗаполненияОстатков);

	//-- Локализация
	
	Возврат Неопределено;
	
КонецФункции

//++ Локализация

Процедура ЗаполнитьПоДаннымОУ(Объект, ТабличнаяЧасть)
	
	КлючевыеПоля = Документы.ВводОстатковУзловКомпонентовАмортизации.КлючевыеПоляРеглУчетаПоТипуОперации();
	
	Отбор = Новый Структура;
	Для Каждого ИмяПоля Из КлючевыеПоля Цикл
		Если ИмяПоля <> "Организация" Тогда
			Отбор.Вставить(ИмяПоля, Объект[ИмяПоля]);
		КонецЕсли;		
	КонецЦикла;

	ПараметрыЗаполненияОстатков = Новый Структура("ОтражатьВБУиНУ,ОтражатьВУУ", Объект.ОтражатьВБУиНУ, Объект.ОтражатьВУУ);

	Результат = ОстаткиОсновныхСредств(
					Объект.Дата, 
					Объект.Организация, 
					Отбор,
					ПараметрыЗаполненияОстатков);
	
	ТабличнаяЧасть.Очистить();
	Для Каждого Выборка Из Результат Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ОстаткиОсновныхСредств(ДатаОстатков, МассивОрганизаций, ДопОтбор, ПараметрыЗаполненияОстатков)

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втПринятыеКУчетуОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)
	|				И ОсновноеСредство.ТипОС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыОС.КомпонентАмортизации),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыОС.Узел))) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	(ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		ИЛИ ПорядокУчетаОСБУ.СостояниеНУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|	И &ОтражатьВБУиНУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСУУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСУУ.СрезПоследних(
	|			&Дата, 
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация В (&МассивОрганизаций)
	|				И ОсновноеСредство.ТипОС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыОС.КомпонентАмортизации),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыОС.Узел))) КАК ПорядокУчетаОСУУ
	|ГДЕ
	|	ПорядокУчетаОСУУ.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И &ОтражатьВУУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.Арендатор КАК Арендатор,
	|	МестонахождениеОС.ПодразделениеАрендатора КАК ПодразделениеАрендатора
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втПринятыеКУчетуОС.ОсновноеСредство
	|					ИЗ
	|						втПринятыеКУчетуОС КАК втПринятыеКУчетуОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация В (&МассивОрганизаций)
	|
	|{ГДЕ
	|	МестонахождениеОС.Местонахождение.* КАК Местонахождение}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	Местонахождение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Дата,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втМестонахождениеОС.ОсновноеСредство
	|					ИЗ
	|						втМестонахождениеОС КАК втМестонахождениеОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКомпонентыАмортизации.УзелКомпонент КАК УзелКомпонент,
	|	УзлыКомпонентыАмортизации.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ УзлыКомпонентыАмортизации
	|ИЗ
	|	РегистрСведений.УзлыКомпонентыАмортизации.СрезПоследних(
	|			&Дата,
	|			УзелКомпонент В
	|				(ВЫБРАТЬ
	|					втМестонахождениеОС.ОсновноеСредство
	|				ИЗ
	|					втМестонахождениеОС КАК втМестонахождениеОС)) КАК УзлыКомпонентыАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзелКомпонент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтоимостьОС.Организация КАК Организация,
	|	СтоимостьОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОС.Подразделение КАК Подразделение,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА СтоимостьОС.СтоимостьОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА СтоимостьОС.СтоимостьПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ТекущаяСтоимостьПР
	|
	|ПОМЕСТИТЬ втСтоимостьОС
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК СтоимостьОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АмортизацияОС.Подразделение КАК Подразделение,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВУУ
	|			ТОГДА -АмортизацияОС.АмортизацияОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияУУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияБУ,
	|
	|	ВЫБОР
	|		КОГДА &ОтражатьВБУиНУ
	|			ТОГДА -АмортизацияОС.АмортизацияПРОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НакопленнаяАмортизацияПР
	|
	|ПОМЕСТИТЬ втАмортизацияОС
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияОС.Остатки(
	|			&Дата,
	|			Организация В (&МассивОрганизаций)
	|				И (ОсновноеСредство, ГруппаФинансовогоУчета, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						втПорядокУчетаОС.ОсновноеСредство,
	|						втПорядокУчетаОС.ГруппаФинансовогоУчета,
	|						втПорядокУчетаОС.НаправлениеДеятельности
	|					ИЗ
	|						втПорядокУчетаОС КАК втПорядокУчетаОС)) КАК АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ЗаполняемаяТабличнаяЧасть,
	|	&ОтражатьВБУиНУ КАК ОтражатьВРеглУчете,
	|	&ОтражатьВУУ КАК ОтражатьВУпрУчете,
	|	втМестонахождениеОС.Организация КАК Организация,
	|	втМестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	УзлыКомпонентыАмортизации.ОсновноеСредство КАК ОсновноеСредствоВладелец,
	|
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) КАК ТекущаяСтоимостьУУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) КАК ТекущаяСтоимостьБУ,
	|	ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПР, 0) КАК ТекущаяСтоимостьПР,
	|
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) КАК НакопленнаяАмортизацияУУ
	|
	|ИЗ
	|	втМестонахождениеОС КАК втМестонахождениеОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО (втПорядокУчетаОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО (втСтоимостьОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втСтоимостьОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияОС КАК втАмортизацияОС
	|		ПО (втАмортизацияОС.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство)
	|			И (втАмортизацияОС.Подразделение = втМестонахождениеОС.Местонахождение)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УзлыКомпонентыАмортизации КАК УзлыКомпонентыАмортизации
	|		ПО (УзлыКомпонентыАмортизации.УзелКомпонент = втМестонахождениеОС.ОсновноеСредство)
	|
	|ГДЕ
	|	(ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втСтоимостьОС.ТекущаяСтоимостьУУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияБУ, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияПР, 0) <> 0
	|		ИЛИ ЕСТЬNULL(втАмортизацияОС.НакопленнаяАмортизацияУУ, 0) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	втМестонахождениеОС.Организация,
	|	втМестонахождениеОС.Местонахождение,
	|	втМестонахождениеОС.ОсновноеСредство.Представление,
	|	втМестонахождениеОС.ОсновноеСредство.ИнвентарныйНомер
	|";
	
	Запрос = Новый ПостроительЗапроса(ТекстЗапроса);
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("ОтражатьВБУиНУ", ПараметрыЗаполненияОстатков.ОтражатьВБУиНУ);
	Запрос.Параметры.Вставить("ОтражатьВУУ", ПараметрыЗаполненияОстатков.ОтражатьВУУ);
	
	Если ДопОтбор <> Неопределено Тогда
		Для Каждого УсловиеОтбора Из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат.Выгрузить();

КонецФункции

//-- Локализация

#КонецОбласти

#Область Прочее

Процедура ИнициализироватьДокументПередЗаполнением(Объект) Экспорт

	//++ Локализация
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Объект.ОтражатьВБУиНУ = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты(Объект, ЭтоДанныеСтроки, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	
	ДатаНачалаУчета = ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4();
	ВспомогательныеРеквизиты.Вставить("ДатаНачалаУчета", ДатаНачалаУчета);
	
	Если Объект.Дата < ДатаНачалаУчета И ЗначениеЗаполнено(Объект.Дата) Тогда
		ДатаУчетнойПолитики = КонецМесяца(Объект.Дата) + 1;
	Иначе
		ДатаУчетнойПолитики = Объект.Дата;
	КонецЕсли;
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", ПлательщикНалогаНаПрибыль);
	
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ПрименяетсяУСНДоходыМинусРасходы);
	
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПоддержкаПБУ18", ПоддержкаПБУ18);
	
	ВедетсяУчетПостоянныхИВременныхРазниц = УчетнаяПолитика.ВедетсяУчетПостоянныхИВременныхРазниц(Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ВедетсяУчетПостоянныхИВременныхРазниц", ВедетсяУчетПостоянныхИВременныхРазниц);
	
	ПараметрыУчетнойПолитикиНастройкиУчетаНДС = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
		"НастройкиУчетаНДС", Объект.Организация, ДатаУчетнойПолитики);
	ВспомогательныеРеквизиты.Вставить("ПараметрыУчетнойПолитикиНастройкиУчетаНДС", ПараметрыУчетнойПолитикиНастройкиУчетаНДС);
	
	ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль = НастройкиНалоговУчетныхПолитикПовтИсп.ДействующиеПараметрыНалоговУчетныхПолитик(
		"НастройкиУчетаНалогаНаПрибыль", Объект.Организация, ДатаУчетнойПолитики);
		
	ВспомогательныеРеквизиты.Вставить(
		"ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль", 
		ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль);
	
	ВспомогательныеРеквизиты.Вставить(
		"ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности", 
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности"));
		
	ВспомогательныеРеквизиты.Вставить(
		"ПрименяетсяФСБУ6", 
		НастройкиНалоговУчетныхПолитикПовтИсп.ПрименяетсяФСБУ6(Объект.Организация, ДатаУчетнойПолитики));
		
	ВспомогательныеРеквизиты.Вставить("ДоступенУчетНУ", Ложь);
		
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти