#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - ФиксированнаяСтруктура - свойства документа (См. ПроведениеДокументов.СвойстваДокумента).
//
// Возвращаемое значение:
//  Структура - параметры учетного механизма (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма).
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	
		Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрослеживаемыхИмпортныхТоваров") Тогда
			Возврат Параметры;
		КонецЕсли;
	
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.РНПТМатериаловВПроизводстве);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
	
		Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.РНПТМатериаловВПроизводстве);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.РНПТМатериаловВПроизводстве;
	ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
		ПроведениеДокументов.ТекстСторнирующегоЗапроса(
			МетаданныеРегистра, МетаданныеДокумента));
	
	Возврат ТекстыЗапросов;	
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам прослеживаемых товаров.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "РНПТМатериаловВПроизводстве");
	
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРНПТМатериаловВПроизводствеИзменение") Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	ОстаткиРНПТ.Организация                    КАК Организация,
			|	ОстаткиРНПТ.ПартияПроизводства             КАК ПартияПроизводства,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.МестоХранения                 КАК Подразделение,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.Номенклатура                  КАК Номенклатура,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.Характеристика                КАК Характеристика,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.Серия                         КАК Серия,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры.Назначение                    КАК Назначение,
			|	ОстаткиРНПТ.НомерГТД                       КАК НомерГТД,
			|	СУММА(ОстаткиРНПТ.КоличествоОстаток)       КАК Количество,
			|	СУММА(ОстаткиРНПТ.КоличествоПоРНПТОстаток) КАК КоличествоПоРНПТ
			|ИЗ
			|	РегистрНакопления.РНПТМатериаловВПроизводстве.Остатки(,
			|		(ПартияПроизводства, АналитикаУчетаНоменклатуры, Организация, НомерГТД) В
			|					(ВЫБРАТЬ
			|						Таблица.ПартияПроизводства,
			|						Таблица.АналитикаУчетаНоменклатуры,
			|						Таблица.Организация,
			|						Таблица.НомерГТД
			|					ИЗ
			|						ДвиженияРНПТМатериаловВПроизводствеИзменение КАК Таблица)
			|		) КАК ОстаткиРНПТ
			|
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиРНПТ.ПартияПроизводства,
			|	ОстаткиРНПТ.АналитикаУчетаНоменклатуры,
			|	ОстаткиРНПТ.Организация,
			|	ОстаткиРНПТ.НомерГТД
			|
			|ИМЕЮЩИЕ
			|	СУММА(ОстаткиРНПТ.КоличествоОстаток) < 0
			|	ИЛИ СУММА(ОстаткиРНПТ.КоличествоПоРНПТОстаток) < 0
			|";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиРНПТМатериаловВПроизводстве");
		
	КонецЕсли;
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияРНПТМатериаловВПроизводствеИзменение") Тогда
		
		ШаблонСообщенияОтрицательныйОстаток =
			НСтр("ru = 'По организации ""%Организация%"" в цехе ""%Подразделение%"" для партии производства ""%ПартияПроизводства%"" обнаружен отрицательный остаток РНПТ ""%НомерГТД%"" материала ""%Товар%"" в количестве %Количество% %ЕдиницаИзмерения%.'");
		ШаблонСообщенияОтрицательныйОстатокРНПТ =
			НСтр("ru = 'По организации ""%Организация%"" в цехе ""%Подразделение%"" для партии производства ""%ПартияПроизводства%"" обнаружен отрицательный остаток РНПТ ""%НомерГТД%"" материала ""%Товар%"" в количестве по РНПТ %Количество% %ЕдиницаИзмерения%.'");
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиРНПТМатериаловВПроизводстве Цикл
			
			Если СтрокаОшибки.Количество < 0 Тогда
				ТекущийШаблон = ШаблонСообщенияОтрицательныйОстаток;
				ТекущееКоличество = -СтрокаОшибки.Количество;
			Иначе
				ТекущийШаблон = ШаблонСообщенияОтрицательныйОстатокРНПТ;
				ТекущееКоличество = -СтрокаОшибки.КоличествоПоРНПТ;
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекущийШаблон, "%Организация%",         СтрокаОшибки.Организация);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%",      СтрокаОшибки.Подразделение);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПартияПроизводства%", СтрокаОшибки.ПартияПроизводства);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%",           СокрЛП(СтрокаОшибки.НомерГТД));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%",         ТекущееКоличество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%",   СтрокаОшибки.ЕдиницаИзмерения);
			
			ТекстСообщения =
				СтрЗаменить(
					ТекстСообщения,
					"%Товар%", 
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
						СтрокаОшибки.Номенклатура,
						СтрокаОшибки.Характеристика,,
						СтрокаОшибки.Серия,
						СтрокаОшибки.Назначение));
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Документ,,, Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеНаОсновании

// Оформить перенос РНПТ материалов на продукцию в фоне.
// 
// Параметры:
//  МассивСсылок - Массив Из ДокументСсылка
//  УникальныйИдентификатор - УникальныйИдентификатор
// 
// Возвращаемое значение:
//  см. ДлительныеОперации.ВыполнитьВФоне
//
Функция ОформитьПереносРНПТМатериаловНаПродукциюВФоне(МассивСсылок, УникальныйИдентификатор) Экспорт
	
	ПараметрыПроцедуры = Новый Структура;
	
	ПараметрыПроцедуры.Вставить("ДокументОснование", МассивСсылок);
	
	ПараметрыОстатков = ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве();
	ПараметрыОстатков.ОтборПоТоварам = ОтборПоТоварамКОформлению(МассивСсылок);
	ПараметрыПроцедуры.Вставить("ПараметрыОстатков", ПараметрыОстатков);
	
	ПараметрыПроцедуры.Вставить("ПараметрыФормыСозданныхДокументов", ПараметрыФормыСозданныхДокументовРНПТМатериалов());
	ПараметрыПроцедуры.Вставить("СписокОшибок", Неопределено);
	ПараметрыПроцедуры.Вставить("ПолеОшибки",   "Объект");
	
	НаименованиеЗадания = НСтр("ru = 'Учет РНПТ в производстве: Оформление переноса РНПТ.'");
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
				"Документы.ПереносРНПТМатериаловНаПродукцию.ЗаполнитьПоОстаткамВФоне",
				ПараметрыПроцедуры,
				ПараметрыВыполнения);
	
КонецФункции

// Параметры формы созданных документов переноса РНПТ материалов на продукцию.
// 
// Возвращаемое значение:
//  Структура - Параметры формы созданных документов переноса РНПТМатериалов на продукцию:
// * КлючДанных - Строка
// * ВидимыеКолонки - Массив Из Строка
// * СобытияОбновления - Массив Из Строка
//
Функция ПараметрыФормыСозданныхДокументовРНПТМатериалов() Экспорт
	
	ПараметрыФормы =
		Новый Структура("КлючДанных, ВидимыеКолонки, СобытияОбновления", "ПереносРНПТМатериаловНаПродукцию", Новый Массив, Новый Массив);
	
	ПараметрыФормы.ВидимыеКолонки.Добавить("Номер");
	ПараметрыФормы.ВидимыеКолонки.Добавить("Дата");
	ПараметрыФормы.ВидимыеКолонки.Добавить("ТипЗначения");
	ПараметрыФормы.ВидимыеКолонки.Добавить("Организация");
	ПараметрыФормы.ВидимыеКолонки.Добавить("Подразделение");
	
	ПараметрыФормы.СобытияОбновления.Добавить("Запись_ВыбытиеРНПТМатериаловИзПроизводства");
	ПараметрыФормы.СобытияОбновления.Добавить("Запись_ПереносРНПТМатериаловНаПродукцию");
	ПараметрыФормы.СобытияОбновления.Добавить("Запись_ПроизводствоБезЗаказа");
	
	Возврат ПараметрыФормы;
	
КонецФункции

#КонецОбласти

// Параметры запроса остатков.
// 
// Возвращаемое значение:
//  Структура - Параметры запроса остатков:
// * ОтборПоТоварам - ТаблицаЗначений - адрес таблицы отборов.
// * Отбор - Соответствие из Структура - описание отборов.
// * ЗначенияПараметровОтбора - Соответствие из Структура - значения параметров отбора.
// * ПоляУпорядочивания - Строка - перечень полей для сортировки.
// * ИмяВТ - Строка - имя временной таблицы. Если задано, то результат будет помещен во временную таблицу.
// * ЗаполнитьРекомендуетсяВыбытие - Булево - необходимость расчета и вывода только рекомендуемых к выбытию.
//
Функция ПараметрыЗапросаОстатковРНПТМатериаловВПроизводстве() Экспорт
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ОтборПоТоварам",                Неопределено);
	Параметры.Вставить("Отбор",                         Новый Соответствие);
	Параметры.Вставить("ЗначенияПараметровОтбора",      Новый Соответствие);
	Параметры.Вставить("ПоляУпорядочивания",            "");
	Параметры.Вставить("ИмяВТ",                         "");
	Параметры.Вставить("ЗаполнитьРекомендуетсяВыбытие", Ложь);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СозданиеНаОсновании

Функция ОтборПоТоварамКОформлению(МассивСсылок)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВыпускИзделий.Организация                               КАК Организация,
	|	ВыпускИзделий.АналитикаУчетаНоменклатуры.МестоХранения  КАК МестоХранения,
	|	ВыпускИзделий.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ВыпускИзделий.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВыпускИзделий.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ВыпускИзделий.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ВыпускИзделий
	|ГДЕ
	|	ВыпускИзделий.Регистратор В(&МассивСсылок)
	|	И ВыпускИзделий.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
	|	И ВыпускИзделий.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ВыпускИзделий.ХозяйственнаяОперация В(
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#КонецОбласти