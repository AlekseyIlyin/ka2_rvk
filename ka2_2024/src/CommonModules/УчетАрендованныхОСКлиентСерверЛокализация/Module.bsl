////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Аренда", предназначенные для локализации.
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ИзменениеУсловийДоговораАренды

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ИзменениеУсловийДоговораАренды(Объект, ВспомогательныеРеквизиты, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	РеквизитыДоговора = ВспомогательныеРеквизиты.РеквизитыДоговора;
	БалансодержательАрендатор = 
		(РеквизитыДоговора.Балансодержатель = ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендатор"));
		
	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И БалансодержательАрендатор
			ИЛИ ВспомогательныеРеквизиты.ИспользуетсяУчетАрендыПоФСБУ25_2018
				И РеквизитыДоговора.УчитыватьПредметыАрендыВРеглУчете;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СрокИспользованияБУ", 
			"ОССрокИспользованияБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			БалансодержательАрендатор
			И РеквизитыДоговора.УчитыватьПредметыАрендыВРеглУчете;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СрокИспользованияНУ", 
			"ОССрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ВыкупАрендованныхОС

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВыкупАрендованныхОС(Объект, ВспомогательныеРеквизиты, ПараметрыВыкупаОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ИмуществоНаБалансе = (ВспомогательныеРеквизиты.Балансодержатель 
							= ПредопределенноеЗначение("Перечисление.БалансодержательПредметовАренды.Арендатор"));

	#Область СтраницаОС
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства =
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОС.СтоимостьНУ", 
			"ОССтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти

	#Область СтраницаУчет
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = НЕ ИмуществоНаБалансе;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И НЕ ИмуществоНаБалансе;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = НЕ Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ПроцентКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособОтраженияРасходовНУ", 
			"СпособОтраженияРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеНУ", 
			"ПодразделениеНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиНУ", 
			"НаправлениеДеятельностиНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ", 
			"ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = НЕ ИмуществоНаБалансе;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Договор") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И НЕ ИмуществоНаБалансе
			И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособОтраженияРасходовАмортизационнойПремии", 
			"СпособОтраженияРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАмортизационнойПремии", 
			"ПодразделениеАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиАмортизационнойПремии", 
			"НаправлениеДеятельностиАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии", 
			"ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ПараметрыВыкупаОС.СтатьяРасходовНУОбязательна, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СпособОтраженияРасходовНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АналитикаРасходовНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПодразделениеНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НаправлениеДеятельностиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ
			И ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеНУ", 
			"ПодразделениеНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиНУ", 
			"НаправлениеДеятельностиНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СпособОтраженияРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АналитикаРасходовАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПодразделениеАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НаправлениеДеятельностиАмортизационнойПремии")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		ЗначениеСвойства = 
			Объект.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии
			И ПараметрыВыкупаОС.ДоступноОтражениеРасходовНУ
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			И НЕ ИмуществоНаБалансе
			И Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПодразделениеАмортизационнойПремии", 
			"ПодразделениеАмортизационнойПремии", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельностиАмортизационнойПремии", 
			"НаправлениеДеятельностиАмортизационнойПремии", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВыкупаОС(Объект, ВспомогательныеРеквизиты, ПараметрыВыкупаОС) Экспорт
	
	//++ Локализация

	ДоступныПараметрыАмортизацииНУ = ВнеоборотныеАктивыКлиентСерверЛокализация.ДоступныПараметрыАмортизацииНУ(
		Объект, ВспомогательныеРеквизиты);
	ДоступноОтражениеРасходовНУ = ВнеоборотныеАктивыКлиентСерверЛокализация.ДоступноОтражениеРасходовНУ(
		Объект, ВспомогательныеРеквизиты);
	
	СтатьяРасходовНУОбязательна = ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
	ПараметрыВыкупаОС.Вставить("ДоступныПараметрыАмортизацииНУ", ДоступныПараметрыАмортизацииНУ);
	ПараметрыВыкупаОС.Вставить("ДоступноОтражениеРасходовНУ",    ДоступноОтражениеРасходовНУ);
	ПараметрыВыкупаОС.Вставить("СтатьяРасходовНУОбязательна",    СтатьяРасходовНУОбязательна);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьВспомогательныеРеквизиты_ВыкупАрендованныхОС(Форма, ВспомогательныеРеквизиты) Экспорт

	//++ Локализация
	ВспомогательныеРеквизиты.Вставить("ПлательщикНалогаНаПрибыль", Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль);
	ВспомогательныеРеквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВБУ", Истина);
	ВспомогательныеРеквизиты.Вставить("ОтражатьВНУ", Истина);
	//-- Локализация
	
КонецПроцедуры

Процедура НастроитьЗависимыеЭлементыФормы_ВыкупАрендованныхОС(Форма, СтруктураИзмененныхРеквизитов) Экспорт
	
	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		Если Элементы.ПорядокУчетаНУ.Видимость Тогда
				
			СписокВыбораНУ = Элементы.ПорядокУчетаНУ.СписокВыбора;
			
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПлательщикНалогаНаПрибыль, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),, 
				0);

			//
			ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
				СписокВыбораНУ, 
				Форма.СлужебныеПараметрыФормы.ПрименяетсяУСНДоходыМинусРасходы, 
				ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),, 
				0);
		
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Договор")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда

		Элементы.СрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУ.Видимость;
		
		Если Элементы.ПорядокУчетаНУ.Видимость
			И НЕ ЗначениеЗаполнено(Объект.ПорядокУчетаНУ)
			И НЕ ОбновитьВсе Тогда
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации");
			Объект.НачислятьАмортизациюНУ = Истина; 
		КонецЕсли;
		
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаОтражениеРасходовПоАмортизацииНУ.Заголовок = 
			?(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету"),
				НСтр("ru = 'Включение в расходы (налоговый учет)'"),
				НСтр("ru = 'Амортизация (налоговый учет)'"));
	КонецЕсли;

	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Объект.СрокИспользованияНУ);
			
	КонецЕсли;
	
	//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область ВводОстатковВзаиморасчетовПоАренде

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатковВзаиморасчетовПоАренде(Объект, ВспомогательныеРеквизиты, ИзмененныеРеквизиты, ПараметрыРеквизитовОбъекта) Экспорт
	
	//++ Локализация
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ИспользоватьРеглУчет;
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражатьВБУиНУ", 
			"ОтражатьВБУиНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ИспользоватьРеглУчет
			И ВспомогательныеРеквизиты.ВестиУУНаПланеСчетовХозрасчетный;

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОтражатьВУУ", 
			"ОтражатьВУУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВОперативномУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУиНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ОтражатьВБУиНУ ИЛИ Объект.ОтражатьВУУ)
			И НЕ Объект.ОтражатьВОперативномУчете;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ЗаполнитьПоДаннымОУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти