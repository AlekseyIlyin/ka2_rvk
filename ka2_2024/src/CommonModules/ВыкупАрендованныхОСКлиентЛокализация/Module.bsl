////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Выкуп арендованных ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

// 
// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Элемент.Имя = Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
	ИначеЕсли Элемент.Имя = Элементы.ПорядокУчетаНУ.Имя
		ИЛИ Элемент.Имя = Элементы.СрокИспользованияНУ.Имя Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовНалог.Имя Тогда
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элемент);
		
	ИначеЕсли Элемент.Имя = Элементы.ПорядокУчетаНУ.Имя Тогда
		
		Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовНУ)
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы") Тогда
			Объект.СпособОтраженияРасходовНУ = ПредопределенноеЗначение("Справочник.СпособыОтраженияРасходов.ПустаяСсылка");
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовНУ," + Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовНУ.Имя Тогда
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элемент);
		
		Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовНУ) Тогда
			Объект.СпособОтраженияРасходовНУ = ПредопределенноеЗначение("Справочник.СпособыОтраженияРасходов.ПустаяСсылка");
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовНУ," + Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.СтатьяРасходовАмортизационнойПремии.Имя Тогда
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элемент);

		Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовАмортизационнойПремии) Тогда
			Объект.СпособОтраженияРасходовАмортизационнойПремии = ПредопределенноеЗначение("Справочник.СпособыОтраженияРасходов.ПустаяСсылка");
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовАмортизационнойПремии," + Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.СпособОтраженияРасходовНУ.Имя Тогда

		СпособОтраженияРасходовНУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.СпособОтраженияРасходовАмортизационнойПремии.Имя Тогда

		СпособОтраженияРасходовАмортизационнойПремииПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.АналитикаРасходовНУ.Имя
		ИЛИ Элемент.Имя = Элементы.ПодразделениеНУ.Имя
		ИЛИ Элемент.Имя = Элементы.НаправлениеДеятельностиНУ.Имя
		ИЛИ Элемент.Имя = Элементы.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ.Имя Тогда
		
		Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовНУ) Тогда
			Объект.СпособОтраженияРасходовНУ = ПредопределенноеЗначение("Справочник.СпособыОтраженияРасходов.ПустаяСсылка");
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовНУ," + Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.АналитикаРасходовАмортизационнойПремии.Имя
		ИЛИ Элемент.Имя = Элементы.ПодразделениеАмортизационнойПремии.Имя
		ИЛИ Элемент.Имя = Элементы.НаправлениеДеятельностиАмортизационнойПремии.Имя
		ИЛИ Элемент.Имя = Элементы.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии.Имя Тогда
		
		Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовАмортизационнойПремии) Тогда
			Объект.СпособОтраженияРасходовАмортизационнойПремии = ПредопределенноеЗначение("Справочник.СпособыОтраженияРасходов.ПустаяСсылка");
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовАмортизационнойПремии," + Элемент.Имя);
		
	КонецЕсли;
	
	//-- Локализация
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			Элемент.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
	
	КонецЕсли;
	
КонецПроцедуры

Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(Объект, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")  
		И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
		И ЗначениеЗаполнено(Объект.СтатьяРасходовНУ) Тогда
			
		Возврат Истина;
	КонецЕсли; 
	//-- Локализация
	
	Возврат Ложь;

КонецФункции

Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "УстановкаПорядкаУчетаНУ" Тогда
		СтандартнаяОбработка = Ложь;
		
		Форма.Модифицированность = Истина;
		Объект.ПорядокУчетаНУ = Форма.РекомендуемыйПорядокУчетаНУ;
		
		ДополнительныеПараметрыДействия = Новый Структура;
		ДополнительныеПараметрыДействия.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы");
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			"ПорядокУчетаНУ", 
			Ложь,
			ДополнительныеПараметрыДействия);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.СтатьяРасходовНалог
		ИЛИ Элемент = Элементы.СтатьяРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораСтатьи(Форма, Элемент, СтандартнаяОбработка);
		
	ИначеЕсли Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(Форма, Элемент, СтандартнаяОбработка);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

//++ Локализация

Процедура СпособОтраженияРасходовНУПриИзменении(Форма, ДополнительныеПараметры)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	ВнеоборотныеАктивыКлиентСервер.ЗаполнитьПоСпособуОтраженияРасходов(
		Объект.СпособОтраженияРасходовНУ, 
		Объект.СтатьяРасходовНУ, 
		Объект.АналитикаРасходовНУ, 
		Объект.ПодразделениеНУ, 
		Объект.НаправлениеДеятельностиНУ, 
		Объект.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ);
	
	Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовНУ) Тогда
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элементы.СтатьяРасходовНУ);
	КонецЕсли;

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовНУ,СтатьяРасходовНУ,ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаНУ");
	
КонецПроцедуры

Процедура СпособОтраженияРасходовАмортизационнойПремииПриИзменении(Форма, ДополнительныеПараметры)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;

	ВнеоборотныеАктивыКлиентСервер.ЗаполнитьПоСпособуОтраженияРасходов(
		Объект.СпособОтраженияРасходовАмортизационнойПремии, 
		Объект.СтатьяРасходовАмортизационнойПремии, 
		Объект.АналитикаРасходовАмортизационнойПремии, 
		Объект.ПодразделениеАмортизационнойПремии, 
		Объект.НаправлениеДеятельностиАмортизационнойПремии, 
		Объект.ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии);
	
	Если ЗначениеЗаполнено(Объект.СпособОтраженияРасходовАмортизационнойПремии) Тогда
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элементы.СтатьяРасходовАмортизационнойПремии);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "СпособОтраженияРасходовАмортизационнойПремии,СтатьяРасходовАмортизационнойПремии,ПодразделениеИНаправлениеДеятельностиСовпадаютСДаннымиУчетаАмортизационнойПремии");
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
