
#Область ПрограммныйИнтерфейс

// Процедура выполняет редактирования выражения представления или сортировки элемента бюджетного отчета
// в редакторе формул.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма редактирования элемента бюджетного отчета
//  ИмяВыражения - Строка - ВыражениеПредставления или ВыражениеСортировки
//  НаименованиеДляПечати - Строка - текущее наименование для печати
//
Процедура ИзменениеВыраженияПредставленияСортировкиВРедактореФормул(Форма, ИмяВыражения, НаименованиеДляПечати = "") Экспорт
	
	ОчиститьСообщения();
	
	Если Форма.ИмяФормы = "Справочник.ЭлементыФинансовыхОтчетов.Форма.СтатьяБюджетов"
		Или Форма.ИмяФормы = "Справочник.ЭлементыФинансовыхОтчетов.Форма.СтатьяБюджетовБезНастроек"
		Или Форма.ИмяФормы = "Справочник.ЭлементыФинансовыхОтчетов.Форма.СтатьяБюджетовДляВвода" Тогда
		Источник = Форма.СтатьяБюджетов;
	ИначеЕсли Форма.ИмяФормы = "Справочник.ЭлементыФинансовыхОтчетов.Форма.ПоказательБюджетов" Тогда
		Источник = Форма.ПоказательБюджетов;
	ИначеЕсли Форма.ИмяФормы = "Справочник.ЭлементыФинансовыхОтчетов.Форма.НефинансовыйПоказатель" Тогда
		Источник = Форма.НефинансовыйПоказатель;
	Иначе
		Источник = Форма.ВидАналитики;
	КонецЕсли;
	
	ПараметрыРедактированияВыражения = Новый Структура;
	ПараметрыРедактированияВыражения.Вставить("Формула", Форма[ИмяВыражения]);
	ПараметрыРедактированияВыражения.Вставить("ТипРезультата", Новый ОписаниеТипов("Строка"));
	ПараметрыРедактированияВыражения.Вставить("ДеревоОперандов", БюджетнаяОтчетностьВызовСервера.ДеревоОперандовДляРедактированияВыраженияПредставленияСортировки(Источник, Форма.УникальныйИдентификатор));
	
	ДополнительныеПараметры = Новый Структура("Форма, ИмяВыражения, Источник, НаименованиеДляПечати", Форма, ИмяВыражения, Источник, НаименованиеДляПечати);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменениеВыраженияПредставленияСортировкиВРедактореФормулЗавершение", ЭтотОбъект,
		ДополнительныеПараметры);
	
	ОткрытьФорму(
		"ОбщаяФорма.КонструкторФормул",
		ПараметрыРедактированияВыражения,
		Форма,
		,
		,
		,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура-обработчик завершения открытия общей формы "Конструктор формул"
//
// Параметры:
//  Результат - Произвольный
//  ДополнительныеПараметры - Структура:
//   *Форма - ФормаКлиентскогоПриложения
//   *ИмяВыражения - Строка
//   *Источник - Строка
//   *НаименованиеДляПечати - Строка
//
Процедура ИзменениеВыраженияПредставленияСортировкиВРедактореФормулЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	ИмяВыражения = ДополнительныеПараметры.ИмяВыражения;
	Источник = ДополнительныеПараметры.Источник;
	НаименованиеДляПечати = ДополнительныеПараметры.НаименованиеДляПечати;
	
	Если Результат <> Неопределено Тогда
		Результат = СокрЛП(Результат);
		ТекстОшибки = ?(ПустаяСтрока(Результат), "",
			ФинансоваяОтчетностьВызовСервера.ТекстОшибкиВыраженияПредставленияСортировки(Результат, Источник,
			НаименованиеДляПечати));
		Если Не ПустаяСтрока(ТекстОшибки) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		Иначе
			Если Форма[ИмяВыражения] <> Результат Тогда
				Форма.Модифицированность = Истина;
				Форма[ИмяВыражения] = Результат;
				Если ПустаяСтрока(Результат) Тогда
					НаименованиеДляПечати = "";
				КонецЕсли;
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект, "НаименованиеДляПечати") Тогда
				Если Форма.Объект.НаименованиеДляПечати <> НаименованиеДляПечати Тогда
					Форма.Модифицированность = Истина;
					Если Не ПустаяСтрока(НаименованиеДляПечати) Тогда
						Форма.Объект.НаименованиеДляПечати = НаименованиеДляПечати;
					Иначе
						Форма.Объект.НаименованиеДляПечати = ФинансоваяОтчетностьВызовСервера.ЗначениеРеквизитаОбъекта(Источник, "Наименование");
					КонецЕсли;
				КонецЕсли;
				Форма.Элементы.НаименованиеДляПечати.Доступность = ПустаяСтрока(Результат);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура устанавливает период смещения в формах статей бюджетов, показателей бюджетов
// так же корректирует наименование для отображения установленного смещения.
//
// Параметры:
//  Объект  - ДанныеФормыСтруктура - объект формы
//  Форма  - ФормаКлиентскогоПриложения - форма, для которой устанавливаем смещение. Содержит в том числе:
//  	* Элементы - ВсеЭлементыФормы - содержит в том числе:
//  		** НастройкаСмещенияПериода - ДекорацияФормы -  
//  РезультатВыбора  - Структура - результат выбора в форме настройки смещения.
//
Процедура УстановитьПериодСмещения(Объект, Форма, РезультатВыбора) Экспорт
	
	Перем ЗначениеПустое;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееПредставлениеСмещения = БюджетнаяОтчетностьКлиентСервер.ПредставлениеСмещения(Форма);
	
	ЗаполнитьЗначенияСвойств(Форма, РезультатВыбора);
	
	НовоеПредставлениеСмещения = БюджетнаяОтчетностьКлиентСервер.ПредставлениеСмещения(Форма, ЗначениеПустое);
	Форма.Элементы.НастройкаСмещенияПериода.Заголовок = НовоеПредставлениеСмещения;
	
	Если СтрНайти(Объект.НаименованиеДляПечати, ПредыдущееПредставлениеСмещения) Тогда
		Если ЗначениеПустое Тогда
			Объект.НаименованиеДляПечати = СтрЗаменить(Объект.НаименованиеДляПечати, "(" + ПредыдущееПредставлениеСмещения + ")", "");
		Иначе
			Объект.НаименованиеДляПечати = СтрЗаменить(Объект.НаименованиеДляПечати, ПредыдущееПредставлениеСмещения, НовоеПредставлениеСмещения);
		КонецЕсли;
	ИначеЕсли Не ЗначениеПустое Тогда
		Постфикс = " (" + НовоеПредставлениеСмещения + ")";
		Если Не Прав(Объект.НаименованиеДляПечати, СтрДлина(Постфикс)) = Постфикс Тогда
			Объект.НаименованиеДляПечати = Объект.НаименованиеДляПечати + Постфикс;
		КонецЕсли;
	КонецЕсли;
	Объект.НаименованиеДляПечати = СокрЛП(Объект.НаименованиеДляПечати);
	
КонецПроцедуры

Процедура ОткрытьФормуОтчета(ПараметрыОткрытия, ФормаВладелец) Экспорт
	Перем ХранимыеПараметрыОтчета;
	
	ДополнительныйИндексУникальности = 0;
	Если ПараметрыОткрытия.ПараметрыОтчета.Свойство("ХранимыеПараметрыОтчета", ХранимыеПараметрыОтчета) Тогда
		ДополнительныйИндексУникальности = ХранимыеПараметрыОтчета.ИндексСтрокиДанных;
	КонецЕсли;
	
	КлючУникальности = Строка(ФормаВладелец.УникальныйИдентификатор) + "_" + ДополнительныйИндексУникальности;
	
	ОткрытьФорму(ПараметрыОткрытия.ИмяФормы, ПараметрыОткрытия.ПараметрыОтчета, ФормаВладелец, КлючУникальности);
	
КонецПроцедуры

Функция МассивРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения = Ложь, Результат = Неопределено)
	
	Если Результат = Неопределено Тогда
		Результат = Новый Массив;
	КонецЕсли;
	
	ПодчиненныеЭлементы = ФинансоваяОтчетностьКлиент.ПодчиненныеСтрокиЭлементаФормы(СтрокаДерева);
	Для Каждого ПодчиненныйЭлемент Из ПодчиненныеЭлементы Цикл
		Если ПодчиненныйЭлемент.ВидЭлемента = БюджетнаяОтчетностьКлиентСервер.ВидЭлемента("РедактируемоеЗначение") Тогда
			Если ПроверкаЗаполнения Тогда
				ЭтоПропускаемыйЭлемент = ПодчиненныйЭлемент.АдресСтруктурыЭлемента = ИсключитьИД;
			Иначе
				ЭтоПропускаемыйЭлемент = ПодчиненныйЭлемент.ПолучитьИдентификатор() = ИсключитьИД;
			КонецЕсли;
			Если Не ЭтоПропускаемыйЭлемент Тогда
				Результат.Добавить(ПодчиненныйЭлемент);
			КонецЕсли;
		КонецЕсли;
		МассивРедактируемыхЯчеек(ПодчиненныйЭлемент, ИсключитьИД, ПроверкаЗаполнения, Результат);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ИменаРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения = Ложь) Экспорт
	
	МассивРедактируемыхЯчеек = МассивРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения);
	
	Результат = Новый СписокЗначений;
	Для Каждого Элемент Из МассивРедактируемыхЯчеек Цикл
		Результат.Добавить(Элемент.НаименованиеДляПечати);
	КонецЦикла;
	Результат.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	Возврат Результат.ВыгрузитьЗначения();
	
КонецФункции

#КонецОбласти

