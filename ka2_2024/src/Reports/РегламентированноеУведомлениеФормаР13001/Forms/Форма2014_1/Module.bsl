
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Данные = Неопределено;
	ПараметрыЗаполнения = Неопределено;
	Параметры.Свойство("Данные", Данные);
	Параметры.Свойство("ПараметрыЗаполнения", ПараметрыЗаполнения);
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР13001;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2014_1");
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		УведомлениеОСпецрежимахНалогообложения.ЗагрузитьДанныеПростогоУведомления(ЭтотОбъект, Данные, ПредставлениеУведомления)
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Организация = Параметры.Ключ.Организация;
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Организация = Параметры.ЗначениеКопирования.Организация;
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	Иначе
		Параметры.Свойство("Организация", Объект.Организация);
		СформироватьДеревоСтраниц();
		
		ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", ИмяФормы, РеквизитФормыВЗначение("ДеревоСтраниц"));
		РезультатКонтейнер = Новый Структура;
		УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер, Истина);
		Для Каждого КЗ Из РезультатКонтейнер Цикл 
			ЭтотОбъект[КЗ.Ключ] = КЗ.Значение;
		КонецЦикла;
		
		РезультатКонтейнер.Очистить();
		УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер);
		Для Каждого КЗ Из РезультатКонтейнер Цикл 
			ЗначениеВРеквизитФормы(КЗ.Значение, КЗ.Ключ);
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ЭтотОбъект["ДанныеУведомления"], ЭтотОбъект["ДанныеМногостраничныхРазделов"]);
	КонецЕсли;
	
	Если Параметры.СформироватьФормуОтчетаАвтоматически Тогда 
		ЗаполнитьАвтоНаСервере(ПараметрыЗаполнения);
	КонецЕсли;
	
	Если Параметры.СформироватьПечатнуюФорму Тогда
		Модифицированность = Истина;
		СохранитьДанные();
		Отказ = Истина;
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
			РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьТаблицуФорматов(ЭтотОбъект, "Форматы2014_1");
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложения.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		СохраненныеДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
		УведомлениеЗаполненоВПомощнике = СохраненныеДанныеУведомления.Свойство("ДанныеПомощникаЗаполнения") 
			И ТипЗнч(СохраненныеДанныеУведомления.ДанныеПомощникаЗаполнения) = Тип("Структура")
			И ЗначениеЗаполнено(СохраненныеДанныеУведомления.ДанныеПомощникаЗаполнения);
	Иначе
		УведомлениеЗаполненоВПомощнике = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	СформироватьДеревоСтраниц();
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", ИмяФормы, РеквизитФормыВЗначение("ДеревоСтраниц"));
	РезультатКонтейнер = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер, Истина);
	Для Каждого КЗ Из РезультатКонтейнер Цикл 
		ЭтотОбъект[КЗ.Ключ] = КЗ.Значение;
	КонецЦикла;
	
	РезультатКонтейнер.Очистить();
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииСКонтейнеромМногострочныхБлоков(ВходящийКонтейнер, РезультатКонтейнер);
	Для Каждого КЗ Из РезультатКонтейнер Цикл 
		ЗначениеВРеквизитФормы(КЗ.Значение, КЗ.Ключ);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвтоНаСервере(ПараметрыЗаполнения = Неопределено)
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", 			     Объект.Организация);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения",          ПараметрыЗаполнения);
	
	Контейнер = СформироватьКонтейнерДляАвтозаполнения();
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(Объект.ИмяОтчета, Объект.ИмяФормы, ПараметрыОтчета, Контейнер);
	ЗагрузитьПодготовленныеДанные(Контейнер);
КонецПроцедуры

&НаСервере
Функция СформироватьКонтейнерДляАвтозаполнения()
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ЭтотОбъект["ДанныеУведомления"] Цикл 
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Контейнер.Вставить("МногострочнаяЧасть1", РеквизитФормыВЗначение("МногострочнаяЧасть1"));
	Контейнер.Вставить("МногострочнаяЧасть2", РеквизитФормыВЗначение("МногострочнаяЧасть2"));
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ЭтотОбъект["ДанныеМногостраничныхРазделов"] Цикл 
		Для Каждого Стр Из КЗ.Значение Цикл 
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные", КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда 
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда 
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл 
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда 
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные(Контейнер)
	КУдалению = Новый Массив;
	Для Каждого КЗ Из ЭтотОбъект["ДанныеМногостраничныхРазделов"] Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл 
		Если ЭтотОбъект["ДанныеУведомления"].Свойство(КЗ.Ключ) Тогда 
			ЗаполнитьЗначенияСвойств(ЭтотОбъект["ДанныеУведомления"][КЗ.Ключ], КЗ.Значение);
		ИначеЕсли ЭтотОбъект["ДанныеМногостраничныхРазделов"].Свойство(КЗ.Ключ) Тогда 
			Для Каждого Стр Из КЗ.Значение Цикл 
				ВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ЭтотОбъект["ДанныеМногостраничныхРазделов"][КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Контейнер.МногострочнаяЧасть1, "МногострочнаяЧасть1");
	ЗначениеВРеквизитФормы(Контейнер.МногострочнаяЧасть2, "МногострочнаяЧасть2");
	СформироватьДеревоСтраницПоДанным();
КонецПроцедуры

&НаСервере
Процедура ДобавитьДочерниеСтраницы(ВставляемыеДанные)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из ВставляемыеДанные Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("СписокЗначений")
			И ЭтотОбъект["ДанныеМногостраничныхРазделов"].Свойство(КЗ.Ключ) Тогда
			
			Для Каждого Стр Из КЗ.Значение Цикл
				ДочерниеВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ДочерниеВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ДочерниеВставляемыеДанные.Вставить("УИДРодителя", ВставляемыеДанные.УИД);
				ЭтотОбъект["ДанныеМногостраничныхРазделов"][КЗ.Ключ].Добавить(ДочерниеВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ДочерниеВставляемыеДанные);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраницПоДанным()
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".");
	ДС = Неопределено;
	Отчеты[Разложение[1]].СформироватьДеревоСтраницПоДанным(ДС, ЭтотОбъект["ДанныеМногостраничныхРазделов"]);
	ЗначениеВРеквизитФормы(ДС, "ДеревоСтраниц");
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".");
	ДС = Отчеты[Разложение[1]].СформироватьДеревоСтраниц(Разложение[3]);
	ЗначениеВРеквизитФормы(ДС, "ДеревоСтраниц");
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	Если Элемент.ТекущиеДанные.Многостраничность Тогда 
		ИмяМакета = УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
		ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета);
	Иначе 
		ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета);
		
		Если Элемент.ТекущиеДанные.Многострочность Тогда
			Если ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1" Тогда 
				ВывестиМногострочнуюЧасть("МногострочнаяЧасть1");
			ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ2" Тогда
				ВывестиМногострочнуюЧасть("МногострочнаяЧасть2");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета)
	ПредставлениеУведомления.Очистить();
	ПредставлениеУведомления.Вывести(УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета));
	УведомлениеОСпецрежимахНалогообложения.УстановитьФорматыВПолях(ЭтотОбъект);
	СтрДанных = ЭтотОбъект["ДанныеУведомления"][ЭтотОбъект["ТекущееИДНаименования"]];
	Для Каждого Обл Из ПредставлениеУведомления.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение Тогда 
			
			СтрДанных.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета)
	ПредставлениеУведомления.Очистить();
	ПредставлениеУведомления.Вывести(УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета));
	УведомлениеОСпецрежимахНалогообложения.УстановитьФорматыВПолях(ЭтотОбъект);
	СтрДанных = Неопределено;
	Для Каждого Элт Из ЭтотОбъект["ДанныеМногостраничныхРазделов"][ЭтотОбъект["ТекущееИДНаименования"]] Цикл 
		Если Элт.Значение.УИД = ЭтотОбъект["УИДТекущаяСтраница"] Тогда 
			СтрДанных = Элт.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Обл Из ПредставлениеУведомления.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение Тогда 
			
			СтрДанных.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	Если СтрНачинаетсяС(Область.Имя, "А01020000_") И СтрНачинаетсяС(ЭтотОбъект["ТекущееИДНаименования"], "ЛистЛ") Тогда 
		Постфикс = Число(СтрЗаменить(Область.Имя, "А01020000_", ""));
		МногострочнаяЧасть = ?(ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1", МногострочнаяЧасть1, МногострочнаяЧасть2);
		МногострочнаяЧасть[Постфикс-1].А01020000 = Область.Значение;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	СтруктураПараметров.Вставить("ДанныеПомощникаЗаполнения", Новый Структура);
	СтруктураПараметров.Вставить("МногострочнаяЧасть1", РеквизитФормыВЗначение("МногострочнаяЧасть1"));
	СтруктураПараметров.Вставить("МногострочнаяЧасть2", РеквизитФормыВЗначение("МногострочнаяЧасть2"));
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаКлиенте();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
	МногострочнаяЧасть1.Загрузить(СтруктураПараметров.МногострочнаяЧасть1);
	МногострочнаяЧасть2.Загрузить(СтруктураПараметров.МногострочнаяЧасть2);
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если (Область.Имя = "Д02020000" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистД")
		Или (Область.Имя = "Д03020100" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистД")
		Или (Область.Имя = "Е03060201" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЕ")
		Или (Область.Имя = "К03020201" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистК")
		Или (Область.Имя = "К04020201" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистК")
		Или (Область.Имя = "Ж040203050201" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЖ2_4")
		Или (Область.Имя = "М03050201" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистМ") Тогда
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если СтрЧислоВхождений(Область.Имя, "ДобавитьСтроку") > 0 Тогда
		ДобавитьСтроку();
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтроку") > 0 Тогда
		УдалитьСтроку(Область);
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 Тогда
		ДобавитьСтраницу(Неопределено);
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.УдалитьСтраницу(ЭтотОбъект);
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	
	Если СтандартнаяОбработка Тогда
		Если (Область.Имя = "П02000000" И ЭтотОбъект["ТекущееИДНаименования"] = "Лист001") Тогда 
			СтандартнаяОбработка = Ложь;
			Область.Значение = ?(ЗначениеЗаполнено(Область.Значение), "", "V");
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
			Возврат;
		КонецЕсли;
		
		Если ЭтоОбластьОКСМ(Область) Тогда 
			УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу() Экспорт
	УдалитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтроку()
	Если ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1" Тогда 
		МногострочнаяЧасть1.Добавить();
		ВывестиМногострочнуюЧасть("МногострочнаяЧасть1");
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ2" Тогда
		МногострочнаяЧасть2.Добавить();
		ВывестиМногострочнуюЧасть("МногострочнаяЧасть2");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Область)
	ОбластьИмя = Область.Имя;
	Номер = Число(Сред(ОбластьИмя, СтрНайти(ОбластьИмя, "_") + 1)) - 1;
	
	Если ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1" Тогда
		МногострочнаяЧасть1.Удалить(Номер);
		Если МногострочнаяЧасть1.Количество() = 0 Тогда 
			МногострочнаяЧасть1.Добавить();
		КонецЕсли;
		ВывестиМногострочнуюЧасть("МногострочнаяЧасть1");
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ2" Тогда
		МногострочнаяЧасть2.Удалить(Номер);
		Если МногострочнаяЧасть2.Количество() = 0 Тогда 
			МногострочнаяЧасть2.Добавить();
		КонецЕсли;
		ВывестиМногострочнуюЧасть("МногострочнаяЧасть2");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВывестиМногострочнуюЧасть(МногострочнаяЧасть)
	Обл = ПредставлениеУведомления.Область(МногострочнаяЧасть);
	ПредставлениеУведомления.УдалитьОбласть(ПредставлениеУведомления.Область(Обл.Верх, , Обл.Верх + 10 * ЭтотОбъект[МногострочнаяЧасть].Количество()), ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	Колонки = РеквизитФормыВЗначение(МногострочнаяЧасть).Колонки;
	Если ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1" Тогда 
		Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, "Форма2014_1_СтраницаЛ1");
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ2" Тогда
		Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, "Форма2014_1_СтраницаЛ2");
	КонецЕсли;
	ОбластьМнг = Макет.ПолучитьОбласть(МногострочнаяЧасть);
	ОбластьДоб = Макет.ПолучитьОбласть("ДобавлениеСтроки");
	
	Инд = 1;
	Для Каждого Стр Из ЭтотОбъект[МногострочнаяЧасть] Цикл 
		Если Инд > 1 Тогда 
			Для Каждого Колонка Из Колонки Цикл 
				ОбластьМнг.Области[Колонка.Имя + "_" + (Инд - 1)].Имя = Колонка.Имя + "_" + Инд;
			КонецЦикла;
			ОбластьМнг.Области["УдалитьСтроку_" + (Инд - 1)].Имя = "УдалитьСтроку_" + Инд;
			Если Инд = 2 Тогда 
				ОбластьМнг.Области[МногострочнаяЧасть].Имя = "";
			КонецЕсли;
		КонецЕсли;
		ПредставлениеУведомления.Вывести(ОбластьМнг);
		
		Для Каждого Колонка Из Колонки Цикл 
			ПредставлениеУведомления.Области[Колонка.Имя + "_" + Инд].Значение = Стр[Колонка.Имя];
		КонецЦикла;
		Инд = Инд + 1;
	КонецЦикла;
	
	ПредставлениеУведомления.Вывести(ОбластьДоб);
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
	Если ("А01020000" = Лев(ОбластьИмя, СтрНайти(ОбластьИмя, "_") - 1)) Тогда 
		Если ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ1" Тогда
			Возврат "МногострочнаяЧасть1";
		ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "ЛистЛ2" Тогда
			Возврат "МногострочнаяЧасть2";
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	Если Модифицированность И УведомлениеЗаполненоВПомощнике Тогда
		Оповестить("ЗакрытьПомощникВнесенияИзмененийЕГР", Объект.Ссылка);
	КонецЕсли;
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьНаКлиенте();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ПроверитьДокумент(УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	ПроверитьВыгрузкуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ЕстьВыходЗаГраницы = Ложь;
	ПечатьБРОНаСервере(ЕстьВыходЗаГраницы);
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов,
		Новый Структура("ЕстьВыходЗаГраницы", ЕстьВыходЗаГраницы));
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере(ЕстьВыходЗаГраницы)
	ЕстьВыходЗаГраницы = Ложь;
	СохранитьДанные();
	ЭтотОбъект["СтруктураРеквизитовУведомления"] = Новый Структура("СписокПечатаемыхЛистов", 
		ОбщегоНазначения.ОбщийМодуль("Отчеты." + Объект.ИмяОтчета).СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы));
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКодОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = "";
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизации(Элемент)
	Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьКодОКСМ.Доступность = ЭтоОбластьОКСМ(Элемент.ТекущаяОбласть);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеЗаполненоВПомощникеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВнесениеИзмененийЕГР" Тогда
		СтандартнаяОбработка = Ложь;
		
		МодульРегистрацияОрганизацииКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("РегистрацияОрганизацииКлиентСервер");
		ПараметрыПомощника = МодульРегистрацияОрганизацииКлиентСервер.НовыеПараметрыПомощникаВнесенияИзменений();
		ПараметрыПомощника.Организация = Объект.Организация;
		ПараметрыПомощника.КонтекстныйВызов = Истина;
		
		МодульРегистрацияОрганизацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РегистрацияОрганизацииКлиент");
		МодульРегистрацияОрганизацииКлиент.ОткрытьПомощникВнесенияИзменений(ПараметрыПомощника);
		
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьУведомлениеЗаполненоВПомощникеНажатие(Элемент)
	УведомлениеЗаполненоВПомощнике = Ложь;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Форма.Элементы.ГруппаУведомлениеИзПомощника.Видимость = Форма.УведомлениеЗаполненоВПомощнике;
КонецПроцедуры
