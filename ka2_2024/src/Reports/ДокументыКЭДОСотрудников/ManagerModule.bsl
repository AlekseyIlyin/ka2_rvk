#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, НастройкиОтчета) Экспорт
	
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДокументыНаПодписании");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет показывает сотрудников у которых есть не подписанные документы КЭДО'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДокументыБезПодписиОрганизации");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет показывает документы КЭДО не подписанные со стороны организации'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДокументыНеПереданныеСотрудникам");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет показывает документы КЭДО созданные, но так и не перданные сотрудникам'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДокументыПолностьюПодписанные");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет показывает документы КЭДО работа с которыми завершена'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДокументыСОтказамиПодписания");
	НастройкиВарианта.Описание = НСтр("ru = 'Отчет показывает документы КЭДО с которыми сотрудники не согласны'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "КарточкаЭлектронногоДокумента");
	НастройкиВарианта.Описание = НСтр("ru = 'Формирует карточки документов КЭДО'");
	НастройкиВарианта.ВидимостьПоУмолчанию = Ложь;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

Процедура ДобавитьКомандыФормированияОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	Если Не ПравоДоступа("Просмотр", Метаданные.Отчеты.ДокументыКЭДОСотрудников) Тогда
		Возврат;
	КонецЕсли;
	
	Команда = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'Документы на подписании'");
	Команда.Важность           = "Обычное";
	Команда.Менеджер           = "Отчет.ДокументыКЭДОСотрудников";
	Команда.КлючВарианта       = "ДокументыНаПодписании";
	Команда.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.A, Ложь, Истина, Истина);
	Команда.Подменю            = "ДокументыКЭДОСотрудников";
	Команда.Картинка           = БиблиотекаКартинок.Отчет;
	Команда.Назначение         = "ДляСписка";
	
	Команда = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'Без подписи организации'");
	Команда.Важность           = "Обычное";
	Команда.Менеджер           = "Отчет.ДокументыКЭДОСотрудников";
	Команда.КлючВарианта       = "ДокументыБезПодписиОрганизации";
	Команда.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.A, Ложь, Истина, Истина);
	Команда.Подменю            = "ДокументыКЭДОСотрудников";
	Команда.Картинка           = БиблиотекаКартинок.Отчет;
	Команда.Назначение         = "ДляСписка";
	
	Команда = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'Не переданные сотрудникам'");
	Команда.Важность           = "Обычное";
	Команда.Менеджер           = "Отчет.ДокументыКЭДОСотрудников";
	Команда.КлючВарианта       = "ДокументыНеПереданныеСотрудникам";
	Команда.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.A, Ложь, Истина, Истина);
	Команда.Подменю            = "ДокументыКЭДОСотрудников";
	Команда.Картинка           = БиблиотекаКартинок.Отчет;
	Команда.Назначение         = "ДляСписка";
	
	Команда = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'Полностью подписанные'");
	Команда.Важность           = "Обычное";
	Команда.Менеджер           = "Отчет.ДокументыКЭДОСотрудников";
	Команда.КлючВарианта       = "ДокументыПолностьюПодписанные";
	Команда.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.A, Ложь, Истина, Истина);
	Команда.Подменю            = "ДокументыКЭДОСотрудников";
	Команда.Картинка           = БиблиотекаКартинок.Отчет;
	Команда.Назначение         = "ДляСписка";
	
	Команда = КомандыОтчетов.Добавить();
	Команда.Представление      = НСтр("ru = 'С отказами подписания'");
	Команда.Важность           = "Обычное";
	Команда.Менеджер           = "Отчет.ДокументыКЭДОСотрудников";
	Команда.КлючВарианта       = "ДокументыСОтказамиПодписания";
	Команда.СочетаниеКлавиш    = Новый СочетаниеКлавиш(Клавиша.A, Ложь, Истина, Истина);
	Команда.Подменю            = "ДокументыКЭДОСотрудников";
	Команда.Картинка           = БиблиотекаКартинок.Отчет;
	Команда.Назначение         = "ДляСписка";
	
КонецПроцедуры

Процедура ДобавитьКомандуПечати(КомандыПечати, ИдентификаторыПФ = Неопределено, СторонняяПечатнаяФорма = Ложь) Экспорт
	
	// Трудовой договор микропредприятий
	Если ПравоДоступа("Просмотр", Метаданные.Отчеты.ДокументыКЭДОСотрудников) Тогда
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюБЗККлиент.ВыполнитьКомандуПечати";
		КомандаПечати.МенеджерПечати = "Отчет.ДокументыКЭДОСотрудников";
		КомандаПечати.Идентификатор = "ПФ_MXL_КарточкаЭлектронногоДокумента";
		КомандаПечати.Представление = НСтр("ru = 'Карточка'");
		
		Если Не Пользователи.ЭтоПолноправныйПользователь() И ИдентификаторыПФ <> Неопределено Тогда
			ЗарплатаКадры.ДобавитьИдентификаторКомандыДляПечатиВПакетномРежиме(ИдентификаторыПФ, КомандаПечати);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Отборы = Новый Массив;
	Отборы.Добавить(
		Новый Структура("ЛевоеЗначение,ВидСравнения,ПравоеЗначение",
			"СсылкаНаОбъект",
			ВидСравненияКомпоновкиДанных.ВСписке,
			МассивОбъектов));
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Отбор", Отборы);
	
	ЗарплатаКадрыОтчеты.ВывестиВКоллекциюПечатнуюФорму("Отчет.ДокументыКЭДОСотрудников",
		МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, ВнешниеНаборыДанных(), ДополнительныеПараметры);
		
КонецПроцедуры

Функция ВнешниеНаборыДанных()
	Возврат Новый Структура;
КонецФункции

Процедура Сформировать(ДокументРезультат, РезультатКомпоновки, ОбъектыПечати = Неопределено, ПараметрыПечати = Неопределено) Экспорт

	ДокументРезультат.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КарточкаЭлектронногоДокумента";
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	Для Каждого ДанныеНаПечать Из РезультатКомпоновки.ДанныеОтчета.Строки Цикл
		
		Если ДокументРезультат.ВысотаТаблицы > 0 Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПерваяСтрокаПечатнойФормы = ДокументРезультат.ВысотаТаблицы + 1;
		
		Для Каждого ДанныеДетальныхЗаписей Из ДанныеНаПечать.Строки Цикл
			
			ДанныеПользовательскихПолей = ЗарплатаКадрыОтчеты.ЗначенияЗаполненияПользовательскихПолей(РезультатКомпоновки.ИдентификаторыМакета, ДанныеДетальныхЗаписей);
			
			ОбластиШапки = "Шапка,Основание,Свойства";
			Если ТипЗнч(ДанныеДетальныхЗаписей.СсылкаНаОбъектОснованиеДокумента) = Тип("ДокументСсылка.ДокументКадровогоЭДО") Тогда
				ОбластиШапки = "Шапка,Свойства";
			КонецЕсли;
			ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
				ДокументРезультат,
				РезультатКомпоновки.МакетПечатнойФормы,
				ОбластиШапки,
				ДанныеНаПечать,
				ДанныеДетальныхЗаписей,
				ДанныеПользовательскихПолей);
				
			Если ДанныеДетальныхЗаписей.Строки.Количество() > 0 Тогда
				
				ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
					ДокументРезультат,
					РезультатКомпоновки.МакетПечатнойФормы,
					"МероприятияШапка",
					ДанныеНаПечать,
					ДанныеДетальныхЗаписей,
					ДанныеПользовательскихПолей);
					
				Для Каждого СтрокаМероприятия Из ДанныеДетальныхЗаписей.Строки Цикл
					
					ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
						ДокументРезультат,
						РезультатКомпоновки.МакетПечатнойФормы,
						"МероприятияСтрока",
						ДанныеНаПечать,
						СтрокаМероприятия,
						ДанныеПользовательскихПолей);
						
				КонецЦикла;
				
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("СсылкаНаОбъект", ДанныеНаПечать.СсылкаНаОбъект);
			Запрос.Текст =
				"ВЫБРАТЬ
				|	ДокументКадровогоЭДОВнешниеПодписанты.НомерСтроки КАК НомерСтроки,
				|	ДокументКадровогоЭДОВнешниеПодписанты.ФизическоеЛицо КАК ФизическоеЛицо,
				|	ДокументКадровогоЭДОВнешниеПодписанты.ФизическоеЛицо.ФИО КАК КомуВыданСертификат,
				|	ИСТИНА КАК ПодписьСотрудника,
				|	ПодписиДокументовКЭДО.Отпечаток КАК Отпечаток,
				|	ПодписиДокументовКЭДО.ДатаПодписи КАК ДатаПодписи,
				|	ПодписиДокументовКЭДО.РезультатСогласования КАК РезультатСогласования
				|ИЗ
				|	Документ.ДокументКадровогоЭДО.ВнешниеПодписанты КАК ДокументКадровогоЭДОВнешниеПодписанты
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПодписиДокументовКЭДО КАК ПодписиДокументовКЭДО
				|		ПО ДокументКадровогоЭДОВнешниеПодписанты.Ссылка = ПодписиДокументовКЭДО.Объект
				|			И ДокументКадровогоЭДОВнешниеПодписанты.ФизическоеЛицо = ПодписиДокументовКЭДО.ФизическоеЛицо
				|ГДЕ
				|	ДокументКадровогоЭДОВнешниеПодписанты.Ссылка = &СсылкаНаОбъект";
			
			ПодписиОбъекта = Запрос.Выполнить().Выгрузить();
			ПодписиОбъекта.Колонки.Добавить("Статус", Новый ОписаниеТипов("Строка"));
			ПодписиОбъекта.Колонки.Добавить("ПодписьВерна", Новый ОписаниеТипов("Булево"));
			ПодписиОбъекта.Колонки.Добавить("ДатаПроверкиПодписи", Новый ОписаниеТипов("Дата"));
			ПодписиОбъекта.Колонки.Добавить("РезультатПроверкиПодписи", Новый ОписаниеТипов("Строка"));
			
			УстановленныеПодписи = ЭлектроннаяПодписьКЭДО.УстановленныеПодписи(ДанныеНаПечать.СсылкаНаОбъектЭлектронныйДокумент);
			Для Каждого УстановленнаяПодпись Из УстановленныеПодписи Цикл
				
				СтрокаДокумента = ПодписиОбъекта.Найти(УстановленнаяПодпись.Отпечаток, "Отпечаток");
				Если СтрокаДокумента = Неопределено Тогда
					СтрокаДокумента = ПодписиОбъекта.Добавить();
					СтрокаДокумента.ПодписьСотрудника = Ложь;
					СтрокаДокумента.ДатаПодписи = УстановленнаяПодпись.ДатаПодписи;
					СтрокаДокумента.РезультатСогласования = Перечисления.РезультатыСогласованияБЗК.Согласовано;
					СтрокаДокумента.Отпечаток = УстановленнаяПодпись.Отпечаток;
				КонецЕсли;
				СтрокаДокумента.КомуВыданСертификат = УстановленнаяПодпись.КомуВыданСертификат;
				СтрокаДокумента.ДатаПроверкиПодписи = УстановленнаяПодпись.ДатаПроверкиПодписи;
				СтрокаДокумента.ПодписьВерна = УстановленнаяПодпись.ПодписьВерна;
				
			КонецЦикла;
			ПодписиОбъекта.Сортировать("ПодписьСотрудника,НомерСтроки,ДатаПодписи");
			Для Каждого СтрокаПодписи Из ПодписиОбъекта Цикл
				ЗаполнитьСтатусПроверкиПодписиОбъекта(СтрокаПодписи);
				СтрокиРезультата = Новый Массив;
				СтрокиРезультата.Добавить(СтрокаПодписи.Статус);                                                           
				Если ЗначениеЗаполнено(СтрокаПодписи.ДатаПроверкиПодписи) Тогда
					СтрокиРезультата.Добавить(СтрокаПодписи.ДатаПроверкиПодписи);
				КонецЕсли;
				СтрокаПодписи.РезультатПроверкиПодписи = СтрСоединить(СтрокиРезультата, ", ");
			КонецЦикла;
			
			ПодписиОтветсвенныхЛиц = ПодписиОбъекта.Скопировать(Новый Структура("ПодписьСотрудника", Ложь));
			Если ЗначениеЗаполнено(ПодписиОтветсвенныхЛиц) Тогда
				
				ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
					ДокументРезультат,
					РезультатКомпоновки.МакетПечатнойФормы,
					"ОтветственныеЛицаШапка",
					ДанныеНаПечать,
					ДанныеДетальныхЗаписей,
					ДанныеПользовательскихПолей);
					
				Для Каждого ПодписьОтветсвенногоЛица Из ПодписиОтветсвенныхЛиц Цикл
					
					ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
						ДокументРезультат,
						РезультатКомпоновки.МакетПечатнойФормы,
						"ОтветственныеЛицаСтрока",
						ДанныеНаПечать,
						ПодписьОтветсвенногоЛица,
						ДанныеПользовательскихПолей);
						
				КонецЦикла;
					
			КонецЕсли;
			
			ПодписиСотрудников = ПодписиОбъекта.Скопировать(Новый Структура("ПодписьСотрудника", Истина));
			Если ЗначениеЗаполнено(ПодписиСотрудников) Тогда
				
				ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
					ДокументРезультат,
					РезультатКомпоновки.МакетПечатнойФормы,
					"СотрудникиШапка",
					ДанныеНаПечать,
					ДанныеДетальныхЗаписей,
					ДанныеПользовательскихПолей);
					
				Для Каждого ПодписьСотрудника Из ПодписиСотрудников Цикл
					
					ЗарплатаКадрыОтчеты.ВывестиВДокументРезультатОбластиМакета(
						ДокументРезультат,
						РезультатКомпоновки.МакетПечатнойФормы,
						"СотрудникиСтрока",
						ДанныеНаПечать,
						ПодписьСотрудника,
						ДанныеПользовательскихПолей);
						
				КонецЦикла;
					
			КонецЕсли;
		
		КонецЦикла;
			
		Если ОбъектыПечати <> Неопределено Тогда
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ДокументРезультат, ПерваяСтрокаПечатнойФормы, ОбъектыПечати, ДанныеНаПечать.СсылкаНаОбъект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтатусПроверкиПодписиОбъекта(Объект) Экспорт
	
	Если Объект.ПодписьВерна Тогда
		Объект.Статус = НСтр("ru = 'Верна'");
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаПроверкиПодписи) Тогда
		Объект.Статус = НСтр("ru = 'Неверна'");
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаПодписи) Тогда
		Если ЗначениеЗаполнено(Объект.Отпечаток) Тогда
			Объект.Статус = НСтр("ru = 'Не проверялась'");
		Иначе
			Объект.Статус = НСтр("ru = 'Требуется собственноручная подпись'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
	
#КонецЕсли