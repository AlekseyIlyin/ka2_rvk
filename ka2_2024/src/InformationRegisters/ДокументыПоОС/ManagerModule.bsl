#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.ДокументыПоОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.20.24";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("1892904b-52b1-403d-b930-22e24bcc7bf8");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ДокументыПоОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Некритичный;
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Документы по ОС"" по данным исходных документов.
	|Пока работа обработчика не завершена, журнал документов по ОС может работать некорректно.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.Документы.ВнутреннееПотребление.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПриобретениеУслугПрочихАктивов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуУзловКомпонентовАмортизации.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеПараметровОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.КорректировкаСтоимостиИАмортизацииОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СписаниеОС2_4.ПолноеИмя());
	//++ Локализация
	Читаемые.Добавить(Метаданные.Документы.ПараметрыНачисленияЗемельногоНалога.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПараметрыНачисленияНалогаНаИмущество.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПараметрыНачисленияТранспортногоНалога.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СнятиеСРегистрацииЗемельныхУчастков.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.СнятиеСРегистрацииТранспортныхСредств.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПерерасчетИмущественныхНалогов.ПолноеИмя());
	//-- Локализация
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.ДокументыПоОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.ДокументыПоОС.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");
	
КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ДокументыПоОС";
	ИмяРегистра = "ДокументыПоОС";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ВнутреннееПотребление");
	СписокДокументов.Добавить("Документ.ПриобретениеУслугПрочихАктивов");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуУзловКомпонентовАмортизации");
	СписокДокументов.Добавить("Документ.ИзменениеПараметровОС2_4");
	СписокДокументов.Добавить("Документ.КорректировкаСтоимостиИАмортизацииОС");
	СписокДокументов.Добавить("Документ.ПринятиеКУчетуОС2_4");
	СписокДокументов.Добавить("Документ.СписаниеОС2_4");
	//++ Локализация
	СписокДокументов.Добавить("Документ.ПараметрыНачисленияЗемельногоНалога");
	СписокДокументов.Добавить("Документ.ПараметрыНачисленияНалогаНаИмущество");
	СписокДокументов.Добавить("Документ.ПараметрыНачисленияТранспортногоНалога");
	СписокДокументов.Добавить("Документ.СнятиеСРегистрацииЗемельныхУчастков");
	СписокДокументов.Добавить("Документ.СнятиеСРегистрацииТранспортныхСредств");
	СписокДокументов.Добавить("Документ.ПерерасчетИмущественныхНалогов");
	//-- Локализация
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.ДокументыПоОС");
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.ДанныеНезависимогоРегистраДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазыУТ.ДополнительныеПараметрыПерезаписиДвиженийИзОчереди();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ИмяИзмеренияДляОтбора = "Ссылка";
	
	ПоляУпорядочивания = Новый Массив;
	ПоляУпорядочивания.Добавить("Ссылка.Дата УБЫВ");
	ДополнительныеПараметры.ПоляУпорядочивания = ПоляУпорядочивания;
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
							Неопределено,
							"РегистрСведений.ДокументыПоОС",
							Параметры.Очередь,
							ДополнительныеПараметры);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
