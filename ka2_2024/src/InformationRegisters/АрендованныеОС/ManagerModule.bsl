#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.АрендованныеОС.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "2.5.17.12";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("367c71ef-594f-479e-9cea-783c2ba3c852");
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.АрендованныеОС.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Порядок = Перечисления.ПорядокОбработчиковОбновления.Обычный;
	Обработчик.Комментарий = НСтр("ru = 'Обновляет регистр ""Арендованные ОС"":
								  |- заполняет пустой реквизит ""Организация""'");
	
	Читаемые = Новый Массив;
	
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов2_4.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВыбытиеАрендованныхОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВыкупАрендованныхОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ЗаключениеДоговораАренды.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ИзменениеУсловийДоговораАренды.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПоступлениеАрендованныхОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПрекращениеДоговораАренды.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуОС2_4.ПолноеИмя());
	//++ Локализация
	Читаемые.Добавить(Метаданные.Документы.ПринятиеКУчетуОС.ПолноеИмя());
	Читаемые.Добавить(Метаданные.Документы.ВводОстатковВнеоборотныхАктивов.ПолноеИмя());
	//-- Локализация

	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.АрендованныеОС.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыСведений.АрендованныеОС.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.АрендованныеОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрСведений.АрендованныеОС КАК ДанныеРегистра
	|	ГДЕ
	|		ДанныеРегистра.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И НЕ ДанныеРегистра.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Замер = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"РегистрСведений.АрендованныеОС.ОбработатьДанныеДляПереходаНаНовуюВерсию");
		
	ОбъектовОбработано = ВнеоборотныеАктивы.СформироватьДвиженияПриОбновленииИБ("АрендованныеОС", Параметры);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(Замер, ОбъектовОбработано);	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
