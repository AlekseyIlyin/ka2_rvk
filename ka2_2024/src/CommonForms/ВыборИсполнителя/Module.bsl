
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Подразделение", ПодразделениеИсходное);
	Параметры.Свойство("Организация",   Организация);
	Параметры.Свойство("Исполнитель",   ИсполнительИсходный);
	
	ДатаРаботы = Параметры.Дата;
	
	ТолькоРаботники = Ложь;
	Параметры.Свойство("ТолькоРаботники", ТолькоРаботники);
	
	Если НЕ ЗначениеЗаполнено(ДатаРаботы) Тогда
		ДатаРаботы = ТекущаяДатаСеанса();
	КонецЕсли;
	
	РежимВыбораПоДокументу = Неопределено;
	Если ЗначениеЗаполнено(ИсполнительИсходный) Тогда
		Если ТипЗнч(ИсполнительИсходный) = Тип("СправочникСсылка.Бригады") И НЕ ТолькоРаботники Тогда
			Элементы.Бригады.ТекущаяСтрока = ИсполнительИсходный;
			РежимВыбораПоДокументу = "Бригады";
			ИспользоватьБригадныеНаряды = Истина;
		Иначе
			Элементы.Работники.ТекущаяСтрока = ИсполнительИсходный;
			РежимВыбораПоДокументу = "Работники";
			ИспользоватьПерсональныеНаряды = Истина;
		КонецЕсли;
	КонецЕсли;
	
	РежимВыбораПоПодразделению = Неопределено;
	Если ЗначениеЗаполнено(ПодразделениеИсходное) Тогда
		
		ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(ПодразделениеИсходное);
		
		Если ПараметрыПодразделения.ИспользоватьБригадныеНаряды И НЕ ТолькоРаботники Тогда
			РежимВыбораПоПодразделению = "Бригады";
			ИспользоватьБригадныеНаряды = Истина;
		КонецЕсли;
		
		Если ПараметрыПодразделения.ИспользоватьПерсональныеНаряды Тогда
			РежимВыбораПоПодразделению = "Работники";
			ИспользоватьПерсональныеНаряды = Истина;
		КонецЕсли;
		
	Иначе
		ИспользоватьБригадныеНаряды =  НЕ ТолькоРаботники;
		ИспользоватьПерсональныеНаряды = Истина;
		РежимВыбораПоПодразделению = "Работники";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РежимВыбораПоДокументу) Тогда
		РежимВыбора = РежимВыбораПоДокументу;
	Иначе
		РежимВыбора = РежимВыбораПоПодразделению;
	КонецЕсли;
	
	Подразделение = ПодразделениеИсходное;
	
	ИспользоватьНачислениеЗарплаты = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплаты");
	
	Элементы.ГруппаТолькоРаботающие.Видимость = ИспользоватьНачислениеЗарплаты;
	Элементы.ГруппаРаботающиеНаДату.Видимость = Ложь;
	Элементы.ГруппаОрганизация.Видимость = Ложь;
	
	//++ Локализация
	Если ПроизводствоСервер.ИспользуетсяУчетТрудозатратВРазрезеСотрудников(ДатаРаботы) Тогда
		Элементы.ГруппаРаботающиеНаДату.Видимость = Истина;
		Элементы.ГруппаТолькоРаботающие.Видимость = Ложь;
	КонецЕсли;
	
	Если ПроизводствоСервер.ИспользуетсяУчетТрудозатратВРазрезеСотрудников(ДатаРаботы) ИЛИ ИспользоватьНачислениеЗарплаты Тогда
		УстановитьОтборПоОрганизации();
	КонецЕсли;
	//-- Локализация
	
	ОперативныйУчетПроизводстваЛокализация.ДобавитьДанныеДляПодбораРаботников(ЭтотОбъект, ДатаРаботы);
	
	УстановитьОтборПоПодразделению();
	
	УстановитьВидимость(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	//++ Локализация
	Если ИспользоватьНачислениеЗарплаты ИЛИ ПроизводствоСервер.ИспользуетсяУчетТрудозатратВРазрезеСотрудников(ДатаРаботы) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Работники,
			"ТолькоРаботающие",
			ТолькоРаботающие);
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Работники,
			"РаботающиеНаДату",
			Булево(РаботающиеНаДату));
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
			Работники,
			"ДатаРаботы",
			?(ЗначениеЗаполнено(ДатаРаботы), ДатаРаботы, ТекущаяДатаСеанса()));
	КонецЕсли;
	
	Элементы.ДатаРаботы.Доступность = Булево(РаботающиеНаДату);
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	УстановитьОтборПоПодразделению();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьОтборПоОрганизации();
КонецПроцедуры

&НаКлиенте
Процедура РежимВыбораПриИзменении(Элемент)
	УстановитьВидимость(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура РаботающиеНаДатуПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Работники,
		"РаботающиеНаДату",
		Булево(РаботающиеНаДату));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Работники,
		"ДатаРаботы",
		?(ЗначениеЗаполнено(ДатаРаботы), ДатаРаботы, ОбщегоНазначенияКлиент.ДатаСеанса()));
	
	Элементы.ДатаРаботы.Доступность = Булево(РаботающиеНаДату);
КонецПроцедуры

&НаКлиенте
Процедура ДатаРаботыПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Работники, "ДатаРаботы", ?(ЗначениеЗаполнено(ДатаРаботы), ДатаРаботы, ОбщегоНазначенияКлиент.ДатаСеанса()));
КонецПроцедуры

&НаКлиенте
Процедура ТолькоРаботающиеПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Работники, "ТолькоРаботающие", ТолькоРаботающие);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыБригады

&НаКлиенте
Процедура БригадыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ОповеститьОВыборе(Элементы.Бригады.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаботники

&НаКлиенте
Процедура РаботникиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Результат = Элементы.Работники.ТекущаяСтрока;
	//++ Локализация
	Если ТипЗнч(Значение) = Тип("Число") Тогда
		Результат = Элемент.ТекущиеДанные.Сотрудник;
	КонецЕсли;
	//-- Локализация
	
	ОповеститьОВыборе(Результат);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(Форма)
	
	Форма.Элементы.РежимВыбора.Видимость = Форма.ИспользоватьБригадныеНаряды И Форма.ИспользоватьПерсональныеНаряды;
	
	Если Форма.РежимВыбора = "Бригады" Тогда
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаБригады;
		Форма.Элементы.БригадыВыбрать.КнопкаПоУмолчанию = Истина;
		Форма.Элементы.ТолькоРаботающие.Видимость = Ложь;
		Форма.Элементы.РаботающиеНаДату.Видимость = Ложь;
		Форма.Элементы.ДатаРаботы.Видимость = Ложь;
		Форма.Элементы.Организация.Видимость = Ложь;
	Иначе
		Форма.Элементы.ГруппаСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаРаботники;
		Форма.Элементы.РаботникиВыбрать.КнопкаПоУмолчанию = Истина;
		Форма.Элементы.ТолькоРаботающие.Видимость = Истина;
		Форма.Элементы.РаботающиеНаДату.Видимость = Истина;
		Форма.Элементы.ДатаРаботы.Видимость = Истина;
		Форма.Элементы.Организация.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоПодразделению()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Бригады, 
		"Подразделение", 
		Подразделение, 
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Подразделение));
	
	Если (ИспользоватьНачислениеЗарплаты
		ИЛИ ПроизводствоСервер.ИспользуетсяУчетТрудозатратВРазрезеСотрудников(ДатаРаботы))
		И ИспользоватьПерсональныеНаряды Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Работники, 
			"Подразделение", 
			Подразделение,
			ВидСравненияКомпоновкиДанных.Равно,
			, // Представление - автоматически
			ЗначениеЗаполнено(Подразделение));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоОрганизации()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Бригады, 
		"Организация", 
		Организация, 
		ВидСравненияКомпоновкиДанных.Равно,
		, // Представление - автоматически
		ЗначениеЗаполнено(Организация));
	
	Если ИспользоватьПерсональныеНаряды Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Работники, 
			"Организация", 
			Организация,
			ВидСравненияКомпоновкиДанных.Равно,
			, // Представление - автоматически
			ЗначениеЗаполнено(Организация));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
