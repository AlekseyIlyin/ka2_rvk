
#Область ПрограммныйИнтерфейс

// Записать ошибку.
//
// Параметры:
//  ИмяСобытия - Строка
//  Комментарий - Строка
//  Объект - Неопределено - Объект
//  Отказ - Булево - Отказ
Процедура ЗаписатьОшибку(ИмяСобытия, Комментарий, Объект = Неопределено, Отказ = Ложь) Экспорт

	Отказ = Истина;

	Уровень = УровеньЖурналаРегистрации.Ошибка;
	ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, Комментарий, Объект, Истина);

КонецПроцедуры

// Записать Предупреждение.
//
// Параметры:
//  ИмяСобытия - Строка
//  Комментарий - Строка
//  Объект - Неопределено - Объект
Процедура ЗаписатьПредупреждение(ИмяСобытия, Комментарий, Объект = Неопределено) Экспорт

	Уровень = УровеньЖурналаРегистрации.Предупреждение;
	ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, Комментарий, Объект, Ложь);

КонецПроцедуры

// Записать Информацию.
//
// Параметры:
//  ИмяСобытия - Строка
//  Комментарий - Строка
//  Объект - Неопределено - Объект
Процедура ЗаписатьИнформацию(ИмяСобытия, Комментарий, Объект = Неопределено) Экспорт

	Уровень = УровеньЖурналаРегистрации.Информация;
	ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, Комментарий, Объект, Ложь);

КонецПроцедуры

// Записать Примечание.
//
// Параметры:
//  ИмяСобытия - Строка
//  Комментарий - Строка
//  Объект - Неопределено - Объект
Процедура ЗаписатьПримечание(ИмяСобытия, Комментарий, Объект = Неопределено) Экспорт

	Уровень = УровеньЖурналаРегистрации.Примечание;
	ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, Комментарий, Объект, Ложь);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, Комментарий, Объект = Неопределено, ОтправлятьУведомление = Ложь)
	Перем ОбъектМетаданных;

	Если Объект <> Неопределено Тогда
		ОбъектМетаданных = Объект.Метаданные();
	КонецЕсли;

	ЗаписьЖурналаРегистрации(
		ИмяСобытияПолное(ИмяСобытия),
		Уровень,
		ОбъектМетаданных,
		Объект,
		Комментарий);

	Если ОтправлятьУведомление Тогда
		ОтправитьУведомлениеЖР(ИмяСобытия, Комментарий);
	КонецЕсли;

КонецПроцедуры

Функция ИмяСобытияПолное(ИмяСобытияВложенное)
	Возврат СтрШаблон("Общие доработки РВК.%1", ИмяСобытияВложенное);
КонецФункции

Процедура ОтправитьУведомлениеЖР(ИмяСобытия, Комментарий)

	Кому = рвк_ОбщийМодульПовтИсп.АдресПолучателейОшибокЖР();
	Если Не ЗначениеЗаполнено(Кому) Тогда
		Возврат;
	КонецЕсли;

	Письма = Новый Массив();
	ЗаписьЭлектроннойПочты = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
	ПараметрыПисьма = Новый Структура();
	ПараметрыПисьма.Вставить("Кому", Кому);
	ПараметрыПисьма.Вставить("Тема", "РВК.Ошибка ЖР");
	ПараметрыПисьма.Вставить("Тело", СтрШаблон("Имя события: %1Описание ошибки: %2", ИмяСобытия + Символы.ПС, Комментарий));
	Письмо = РаботаСПочтовымиСообщениями.ПодготовитьПисьмо(ЗаписьЭлектроннойПочты, ПараметрыПисьма);
	Письма.Добавить(Письмо);

	ТекстОшибки = "";
	Попытка
		РаботаСПочтовымиСообщениями.ОтправитьПисьма(ЗаписьЭлектроннойПочты, Письма, ТекстОшибки);
		Если Не ПустаяСтрока(ТекстОшибки) Тогда
			Уровень = УровеньЖурналаРегистрации.Ошибка;
			ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, ТекстОшибки,, Ложь);
		КонецЕсли;
	Исключение
		Уровень = УровеньЖурналаРегистрации.Ошибка;
		ТекстОшибки = ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписьЖурналаРегистрацииСУровнем(ИмяСобытия, Уровень, ТекстОшибки,, Ложь);
	КонецПопытки;
КонецПроцедуры

#КонецОбласти
