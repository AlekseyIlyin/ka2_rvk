#Область ПрограммныйИнтерфейс

// Значение свойства.
// 
// Параметры:
//  Объект - ЛюбаяСсылка
//  ИмяСвойства - Строка
//  ЗначениеПоУмолчанию - Произвольный
// 
// Возвращаемое значение:
//  Произвольный - Значение свойства
Функция ЗначениеСвойства(Объект, ИмяСвойства, ЗначениеПоУмолчанию) Экспорт
	Результат = ЗначениеПоУмолчанию;
	ЭтоНашаОрганизация = УправлениеСвойствами.ЗначениеСвойства(Объект, ИмяСвойства);
	Если ЭтоНашаОрганизация <> Неопределено Тогда
		Результат = ЭтоНашаОрганизация;
	КонецЕсли;
	Возврат Результат;
КонецФункции

// Ссылку из навигационной.
// 
// Параметры:
//  НавигационнаяСсылка - Строка
// 
// Возвращаемое значение:
//  Произвольный - Ссылка на объект ИБ из навигационной ссылки
Функция СсылкуИзНавигационной(НавигационнаяСсылка, Отказ = Ложь) Экспорт
    
    Результат = Неопределено;
    
    Если ЗначениеЗаполнено(НавигационнаяСсылка) Тогда
    	
	    СтрокаПреобразования = НавигационнаяСсылка;
	    
	    СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "<a href = """, "");
	    
	    КонецСтроки = СтрНайти(СтрокаПреобразования, """>");
	    СтрокаПреобразования = Лев(СтрокаПреобразования, КонецСтроки - 1);
	    
	    ПерваяТочка = СтрНайти(СтрокаПреобразования, "e1cib/data/");
	    ВтораяТочка = СтрНайти(СтрокаПреобразования, "?ref=");
	    
	    ПредставлениеТипа = Сред(СтрокаПреобразования, ПерваяТочка + 11, ВтораяТочка - ПерваяТочка - 11);
	    ШаблонЗначения = ЗначениеВСтрокуВнутр(ПредопределенноеЗначение(ПредставлениеТипа + ".ПустаяСсылка"));
	    ЗначениеСсылки = СтрЗаменить(ШаблонЗначения, "00000000000000000000000000000000", Сред(СтрокаПреобразования, ВтораяТочка + 5));
	    
	    Попытка
			Результат = ЗначениеИзСтрокиВнутр(ЗначениеСсылки);    	
	    Исключение
			ТекстОшибки = СтрШаблон("Не удалось преобразовать навигагионную ссылку ""%1"" в ссылку объекта метаданных по причине: %2",
				НавигационнаяСсылка, 
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	    	рвк_ЖурналРегистрацииВызовСервера.ЗаписатьОшибку("СсылкуИзНавигационной", ТекстОшибки,, Отказ);
	    КонецПопытки; 
    	
    КонецЕсли;
    
    Возврат Результат;
   	 
КонецФункции


// Идентификатор объекта.
// 
// Параметры:
//  Ссылка - произвольный
// 
// Возвращаемое значение:
//  Строка - Идентификатор объекта
Функция ИдентификаторОбъекта(Ссылка) Экспорт
	Результат = XMLСтрока(Ссылка.УникальныйИдентификатор());
	Возврат Результат;
КонецФункции

#КонецОбласти