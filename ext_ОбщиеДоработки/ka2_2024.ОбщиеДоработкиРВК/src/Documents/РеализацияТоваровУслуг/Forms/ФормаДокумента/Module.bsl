
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура рвк_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	рвк_ИнициализироватьЕстьРеквизитСУчетнойЦеной();
КонецПроцедуры

&НаКлиенте
Процедура рвк_ПриОткрытииПосле(Отказ)
	рвк_ОбновитьЗадолженностьНаКлиенте();
КонецПроцедуры

&НаСервере
Процедура рвк_ПередЗаписьюНаСервереПосле(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Истина;
		рвк_БылВыключенРежимКонтроляОстатков = Истина;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура рвк_ПослеЗаписиНаСервереПосле(ТекущийОбъект, ПараметрыЗаписи)
	Если рвк_БылВыключенРежимКонтроляОстатков Тогда 
		рвк_БылВыключенРежимКонтроляОстатков = Ложь;
		Если ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
			ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура рвк_ПартнерПриИзмененииПосле(Элемент)
	рвк_ОбновитьЗадолженностьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура рвк_ТекстДокументыНаОснованииОбработкаНавигационнойСсылкиВместо(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьПриобретениеТоваровИнтеркампани" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, рвк_ПолучитьСсылкуПриобретения(Объект.Ссылка));
	Иначе
		ПродолжитьВызов(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура рвк_ТоварыНоменклатураАвтоПодборВместо(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ДанныеВыбора 		 = Неопределено;	
	
	НовыйМассив 		 = рвк_НоменклатураВызовСервера.МассивПолученияДанныхВыбор(); 
	ФиксированныйМассив  = Новый ФиксированныйМассив(НовыйМассив);
	
	Отбор 				 = Новый Структура;
	Отбор.Вставить("ТипНоменклатуры",ФиксированныйМассив);
	
	ПараметрыДляПолученияДанныхВыбора = Новый Структура;
	ПараметрыДляПолученияДанныхВыбора.Вставить("НалогообложениеНДС", рвк_НоменклатураВызовСервера.НалогообложениеНДСПолученияДанныхВыбор());
	ПараметрыДляПолученияДанныхВыбора.Вставить("Отбор",Отбор);
	ПараметрыДляПолученияДанныхВыбора.Вставить("СтрокаПоиска",Текст);
	ПараметрыДляПолученияДанныхВыбора.Вставить("ВыборГруппИЭлементов",ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыДляПолученияДанныхВыбора.Вставить("СпособПоискаСтроки",Неопределено);
	ПараметрыДляПолученияДанныхВыбора.Вставить("ПолнотекстовыйПоиск",Неопределено);
	
	рвк_НоменклатураВызовСервера.НоменклатураОбработкаПолученияДанныхВыбораВДокументПродажи(ДанныеВыбора, ПараметрыДляПолученияДанныхВыбора, СтандартнаяОбработка);
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура рвк_ЦенаСНаценкойНаУчетнуюПосле(Команда)

	СтруктураЗаполненияБонусныхБаллов = Неопределено;
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомСкидкиБонуснымиБаллами", СтруктураЗаполненияБонусныхБаллов);
	СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ЗависимыеРеквизиты());
	СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
	СтруктураДействий.Вставить("ПересчитатьСуммуСверхЗаказа", Новый Структура("РеализацияПоступлениеПоЗаказу, ТребуетсяЗалогЗаТару",
		Объект.РеализацияПоЗаказам, Объект.ТребуетсяЗалогЗаТару));

	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.усУчетнаяЦена) 
				И ЗначениеЗаполнено(СтрокаТовары.Количество) Тогда
			СтрокаТовары.Цена = СтрокаТовары.усУчетнаяЦена + СтрокаТовары.усУчетнаяЦена / 100;
			ПроверкаОплатыБонуснымиБаллами(СтрокаТовары, СтруктураЗаполненияБонусныхБаллов);
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, КэшированныеЗначения);
		КонецЕсли;
	КонецЦикла;
	
	РассчитатьИтоговыеПоказатели();
	СкидкиНаценкиЗаполнениеКлиент.СброситьФлагСкидкиРассчитаны(ЭтотОбъект);
	
	СобытияФормКлиент.ПриИзмененииЭлемента(ЭтотОбъект, Элементы.Товары);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура рвк_ИнициализироватьЕстьРеквизитСУчетнойЦеной()
	РеквизитыТаблицы = ПолучитьРеквизиты("Объект.Товары");
	Для Каждого Реквизит Из РеквизитыТаблицы Цикл
		Если Реквизит.Имя = "усУчетнаяЦена" Тогда
			рвк_ЕстьРеквизитСУчетнойЦеной = Истина;
			Прервать;		
		КонецЕсли;
	КонецЦикла;
	Элементы.ТоварыЦенаСНаценкойНаУчетную.Доступность = рвк_ЕстьРеквизитСУчетнойЦеной;
КонецПроцедуры

&Перед("НалогообложениеНДСПриИзмененииСервер")
&НаСервере
Процедура рвк_НалогообложениеНДСПриИзмененииСервер()
	Если ЗначениеЗаполнено(Объект.Партнер) И ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.НалогообложениеНДС = рвк_ОбщийМодульПовтИсп.НалогообложениеНДС(Объект.Организация, Объект.Партнер);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция рвк_ПолучитьПросрочкуНаСервере(Знач Клиент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(РасчетыПоСрокам.ПредоплатаРеглОстаток) КАК НашДолг,
		|	СУММА(РасчетыПоСрокам.ДолгРеглОстаток) КАК Задолженность,
		|	СУММА(ВЫБОР
		|			КОГДА РасчетыПоСрокам.ДатаПлановогоПогашения < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|				ТОГДА РасчетыПоСрокам.ДолгРеглОстаток
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Просрочено
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентамиПоСрокам.Остатки(, АналитикаУчетаПоПартнерам.Партнер = &Партнер) КАК РасчетыПоСрокам";
	
	Запрос.УстановитьПараметр("Партнер", Клиент);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СтруктураРезультата = Новый Структура("Задолженность,Просрочено", 0, 0);
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Задолженность) Тогда
			СтруктураРезультата.Задолженность = ВыборкаДетальныеЗаписи.Задолженность;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Просрочено) Тогда
			СтруктураРезультата.Просрочено = ВыборкаДетальныеЗаписи.Просрочено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаКлиенте
Процедура рвк_ОбновитьЗадолженностьНаКлиенте()
	
	Если Не ЗначениеЗаполнено(Объект.Партнер) Тогда
		Элементы.ЗадолженностьСтрокой.Заголовок = "";
		Возврат;
	КонецЕсли;
		
	Результат = рвк_ПолучитьПросрочкуНаСервере(Объект.Партнер);
	Если Результат.Задолженность = 0 Тогда
		ЗадолженностьСтрокой = "";		
	ИначеЕсли Результат.Задолженность = Результат.Просрочено Тогда
		ЗадолженностьСтрокой = СтрШаблон("Просрочено: %1", Формат(Результат.Просрочено, "ЧДЦ=0; ЧН="));
	Иначе
		ЗадолженностьСтрокой = СтрШаблон("Задолженность: %1 Просрочено: %2", Формат(Результат.Задолженность, "ЧДЦ=0; ЧН="), Формат(Результат.Просрочено, "ЧДЦ=0; ЧН="));
	КонецЕсли;
	
	Элементы.ЗадолженностьСтрокой.Заголовок = ЗадолженностьСтрокой;
	Если Результат.Просрочено > 0 Тогда
		Элементы.ЗадолженностьСтрокой.ЦветТекста = WebЦвета.КрасноФиолетовый;
	Иначе
		Элементы.ЗадолженностьСтрокой.ЦветТекста = WebЦвета.Черный;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
&После("ОбновитьТекстСчетаФактурыВыданные")
Процедура рвк_ОбновитьТекстСчетаФактурыВыданные()
	рвк_ОбновитьТекстПриобретение();
КонецПроцедуры

&НаСервере
Процедура рвк_ОбновитьТекстПриобретение() 
	
	ПриобретениеGUID = Документы.РеализацияТоваровУслуг.рвк_ПриобретениеИнтеркампани(Объект.Ссылка);
	Если Не ЗначениеЗаполнено(ПриобретениеGUID) Тогда
		Возврат;
	КонецЕсли;
	
	Приобретение = Документы.ПриобретениеТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(ПриобретениеGUID));
	Если Не ЗначениеЗаполнено(Приобретение) Тогда
		Возврат;
	КонецЕсли;
		
	Если Приобретение.ПолучитьОбъект() = Неопределено Тогда
		Возврат;
	КонецЕсли;
	  
	РеквизитыПриобретения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Приобретение, "Номер,Дата");
	ПредставлениеПреобретения = СтрШаблон("Приобретение № %1 от %2", РеквизитыПриобретения.Номер, Формат(РеквизитыПриобретения.Дата, "ДЛФ=D"));
	ЦветТекстаСсылки = ЦветаСтиля.ГиперссылкаЦвет;
	НавигационнаяСсылка = "ОткрытьПриобретениеТоваровИнтеркампани"; //"e1cib/data/Документ.ПриобретениеТоваровУслуг?ref=""" + ПриобретениеGUID + """";
	
	ТекстПриобретение = Новый ФорматированнаяСтрока(ПредставлениеПреобретения,, ЦветТекстаСсылки,, НавигационнаяСсылка);
	
	ТекстыПоляДокументыНаОсновании.Добавить(ТекстПриобретение);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция рвк_ПолучитьСсылкуПриобретения(Знач РеализацияСсылка)
	ПриобретениеGUID = Документы.РеализацияТоваровУслуг.рвк_ПриобретениеИнтеркампани(РеализацияСсылка);
	Возврат Документы.ПриобретениеТоваровУслуг.ПолучитьСсылку(Новый УникальныйИдентификатор(ПриобретениеGUID));
КонецФункции

#КонецОбласти