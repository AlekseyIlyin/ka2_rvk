
&НаСервереБезКонтекста
Функция ПолучитьСписокДокументовДляОбработкиНаСервере(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХозрасчетныйОбороты.Регистратор КАК Документ,
		|	ХозрасчетныйОбороты.Счет КАК Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Регистратор,
		|			Счет.УчетПоПодразделениям,
		|			,
		|			Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|				ИЛИ ПодразделениеКор = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Регистратор) В (ТИП(Документ.СписаниеБезналичныхДенежныхСредств), ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств), ТИП(Документ.ПриходныйКассовыйОрдер), ТИП(Документ.РасходныйКассовыйОрдер))
		|
		|УПОРЯДОЧИТЬ ПО
		|	ХозрасчетныйОбороты.Регистратор.Дата";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Документ");
	
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		СписокДокументов.ЗагрузитьЗначения(ПолучитьСписокДокументовДляОбработкиНаСервере(Объект.Период));
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПодразделениеПоТипуДокументаНаСервере(Документ, Подразделение)

	ТипДокумента = ТипЗнч(Документ);
	ДокументОбъект = Документ.ПолучитьОбъект();
	
	Если ТипДокумента = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") ИЛИ
			ТипДокумента = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств") ИЛИ 
			ТипДокумента = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") ИЛИ
			ТипДокумента = Тип("ДокументСсылка.РасходныйКассовыйОрдер") Тогда
		ДокументОбъект.Подразделение = Подразделение;
		Для Каждого СтрокаРасшифровки Из ДокументОбъект.РасшифровкаПлатежа Цикл
			СтрокаРасшифровки.Подразделение = Подразделение;
		КонецЦикла;
	КонецЕсли;
	
	ДокументОбъект.ОбменДанными.Загрузка = Истина;
	ДокументОбъект.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбработатьДокументНаСервере(Документ, Подразделение)
	
	НачатьТранзакцию();
	
	// + Блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировкиДокумента = Блокировка.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Документ));
    ЭлементБлокировкиДокумента.УстановитьЗначение("Ссылка", Документ);
	ЭлементБлокировкиДокумента.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировкиДвижений = Блокировка.Добавить("РегистрБухгалтерии.Хозрасчетный.НаборЗаписей");
	ЭлементБлокировкиДвижений.УстановитьЗначение("Регистратор", Документ);
	ЭлементБлокировкиДвижений.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	// - Блокировка
	
	УстановитьПодразделениеПоТипуДокументаНаСервере(Документ, Подразделение);
	
	НаборЗаписейХозрасчетный = РегистрыБухгалтерии.Хозрасчетный.СоздатьНаборЗаписей();
	НаборЗаписейХозрасчетный.Отбор.Регистратор.Значение = Документ;
	НаборЗаписейХозрасчетный.Прочитать();
	Если НаборЗаписейХозрасчетный.Количество() Тогда
		Для Каждого Проводка Из НаборЗаписейХозрасчетный Цикл
			Если Проводка.СчетДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = Подразделение;
			КонецЕсли;
			Если Проводка.СчетКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = Подразделение;
			КонецЕсли;
		КонецЦикла;
		НаборЗаписейХозрасчетный.Записать();
	Иначе
		ВызватьИсключение "Не удалось получить набор записей по документу: " + Документ;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбранные(Команда)
	Если НЕ ЭтаФорма.ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;    
	Счетчик = 1;
	РазмерСписка = СписокДокументов.Количество();
	Для Каждого ЭлементСпискаДокументов Из СписокДокументов Цикл
		Если ЭлементСпискаДокументов.Пометка Тогда
			Документ = ЭлементСпискаДокументов.Значение;
			Состояние("Заполнение подразделения", (Счетчик / РазмерСписка) * 100, Документ);
			Попытка
				ОбработатьДокументНаСервере(Документ, Объект.Подразделение);
				ОповеститьОбИзменении(Документ);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
КонецПроцедуры
