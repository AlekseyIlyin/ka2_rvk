#Область ОписаниеПеременных
&НаКлиенте
Перем МодульМТ;  // Общий клиентский модуль со спецификой мобильной торговли

// ОписаниеПеременных
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//@skip-check unknown-form-parameter-access
	УИДВладельца = Параметры.IDnew; // Объект.СправочникФотографии
	
	СтррКонтекст = Новый Структура; // общие значения модуля формы
	СтррКонтекст.Вставить("СпрФотографии");                                               
	
	//@skip-check unknown-form-parameter-access
	СтррКонтекст.Вставить("мФото", ?(Параметры.Свойство("мФото"), Параметры.мФото, Неопределено));

	ТекОбъект = РеквизитФормыВЗначение("Объект");		                          
	ТекОбъект.КонтекстФормыИнициализировать(СтррКонтекст, Параметры);
	ТекОбъект.ВОКонтекстФормыДополнить(СтррКонтекст, "_Фотографии", Истина);
	
	ПрочестьОбъектИзХранилища();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//@skip-check use-non-recommended-method
	//@skip-check form-self-reference
	МодульМТ = ПолучитьФорму(СтррКонтекст.ПутьКФорме + "МодульОбщийМТ", СтррКонтекст, ЭтаФорма, "АгентПлюсМодульОбщийМТ"); // в СтррКонтекст есть заполненное свойство "ВХОбщиеПараметры"
	МодульМТ.ВОПриОткрытии(ЭтотОбъект);		
	
	ФормаОбновитьОтбор();
	
	ФормаОбновитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если МодульМТ.ОбработкаОповещенияФормы(ЭтотОбъект, ИмяСобытия, Параметр, Источник) Тогда
		
	ИначеЕсли ИмяСобытия = "АПЭлементСправочникаЗаписан_" + СтррКонтекст.ВО.ВидОбъекта Тогда
		Если СтррКонтекст.Свойство("мФото") И Параметр.Свойство("мФото") Тогда
			СтррКонтекст.мФото = Параметр.мФото;
		ИначеЕсли НЕ СтррКонтекст.Свойство("мФото") И Параметр.Свойство("мФото") Тогда 	
			СтррКонтекст.Вставить("мФото", Параметр.мФото);
		ИначеЕсли СтррКонтекст.Свойство("мФото") Тогда
			СтррКонтекст.мФото = Неопределено;
		КонецЕсли;
		
		ПрочестьОбъектИзХранилища();
		ФормаОбновитьОтбор();
		МодульМТ.ВОЭлементыВыделить(ЭтотОбъект, Параметр);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТПЭлементы

&НаКлиенте
Процедура СписокФотографийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	МодульМТ.ВООткрытьФормуИзФормыСписка(ЭтотОбъект, Истина, Копирование);
	
	//Отказ = Истина;
	//
	//ПараметрыФайлов= Новый Структура;
	//ПараметрыФайлов.Вставить("ВладелецФайла", ЭтаФорма);
	//ПараметрыФайлов.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	////Параметры.Вставить("Фильтр", Фильтр);
	//
	//ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьФайлыРасширениеПредложено", ЭтаФорма, ПараметрыФайлов);
	//ФайловыеФункцииСлужебныйКлиент.ПоказатьВопросОбУстановкеРасширенияРаботыСФайлами(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФотографийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	МодульМТ.ВОЭлементыВыбор(ЭтотОбъект);    

КонецПроцедуры

&НаКлиенте
Процедура ТПЭлементыПередУдалением(Элемент, Отказ)
		
	МодульМТ.ВОЭлементыПередПометкойУдаления(ЭтотОбъект, Элемент, Отказ);

КонецПроцедуры

// ОбработчикиСобытийЭлементовТаблицыФормыТПЭлементы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	МодульМТ.КомандаВыполнить(Команда, ЭтотОбъект)
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОкончательно(Команда)
	МодульМТ.КомандаВыполнить(Команда, ЭтотОбъект)
КонецПроцедуры

// ОбработчикиКомандФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочестьОбъектИзХранилища()

	ТекОбъект = РеквизитФормыВЗначение("Объект");
	
	ТЗн = ТекОбъект.ВОТЗЗагрузить(СтррКонтекст.ВО);
	ТЗн.Колонки.Добавить("ИмяФайла", Новый ОписаниеТипов("Строка"));
	ТЗн.Колонки.Добавить("ОтображатьНаФорме", Новый ОписаниеТипов("Булево"));
	Для Каждого стз Из ТЗн Цикл 
		// ИмяФайла
		Если ТипЗнч(стз.ХранимыйФайл) = Тип("Строка") И НЕ ПустаяСтрока(стз.ХранимыйФайл) Тогда
			//@skip-check use-non-recommended-method
			ИндексТочки = Найти(стз.ХранимыйФайл, ".");
			Если ИндексТочки > 1 Тогда
				стз.ИмяФайла = Лев(стз.ХранимыйФайл, ИндексТочки - 1);
			Иначе
				стз.ИмяФайла = "";
			КонецЕсли;
		Иначе
			стз.ИмяФайла = "";
		КонецЕсли;
		// ОтображатьНаФорме
		стз.ОтображатьНаФорме = Истина;
		Если стз.ВладелецФайла <> УИДВладельца ИЛИ (СтррКонтекст.мФото <> Неопределено И СтррКонтекст.мФото.Найти(стз.ID) = Неопределено) Тогда
			стз.ОтображатьНаФорме = Ложь;
		КонецЕсли;		 
	КонецЦикла;
	
	ТекОбъект[СтррКонтекст.ВО.РеквизитОбработки] = ТЗн;
	
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ФормаОбновитьОтбор()
	
	ОтборСтрок = Новый Структура;
	ОтборСтрок.Вставить("ОтображатьНаФорме", Истина);
	Элементы.ТПЭлементы.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормаОбновитьЗаголовок()
	//@skip-check form-self-reference
	ЭтаФорма.Заголовок = НСтр("ru = 'Прикрепленные фотографии'");	
КонецПроцедуры

// СлужебныеПроцедурыИФункции
#КонецОбласти
