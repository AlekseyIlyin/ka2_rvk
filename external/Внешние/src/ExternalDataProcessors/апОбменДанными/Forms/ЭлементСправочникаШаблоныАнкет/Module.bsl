#Область ОписаниеПеременных

&НаКлиенте
Перем МодульМТ;  // Общий клиентский модуль со спецификой мобильной торговли

// ОписаниеПеременных
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ТекОбъект = РеквизитФормыВЗначение("Объект");		
	
	ТекОбъект.КонтекстФормыИнициализировать(СтррКонтекст, Параметры, "ID");
	ТекОбъект.ВОКонтекстФормыДополнить(СтррКонтекст, "_ШаблоныАнкет", Ложь);	
	//@skip-check unknown-form-parameter-access
	ПрочестьОбъектИзХранилища(Параметры.ID);
	
	ТекОбъект.ВОПриСозданииФормыЭлемента(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Загружаем общий клиентский модуль "МодульОбщийМТ". В параметре "Параметры" важно передавать структуру с заполненным
	// свойством "ВХОбщиеПараметры" - оно используется для предотвращения повторной загрузки текущей обработки.
	//@skip-check use-non-recommended-method
	//@skip-check form-self-reference
	МодульМТ = ПолучитьФорму(СтррКонтекст.ПутьКФорме + "МодульОбщийМТ", СтррКонтекст, ЭтаФорма, "АгентПлюсМодульОбщийМТ"); // в СтррКонтекст есть заполненное свойство "ВХОбщиеПараметры"
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	//@skip-check form-self-reference
	Если ЭтаФорма.Модифицированность Тогда
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("СохранитьВсеПродолжить", ЭтотОбъект, "ПоЗакрытиюОкна");
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭлементПриИзменении(Элемент)
	
	//@skip-check form-self-reference
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

// ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ТекстОшибки = "";
	ОчиститьСообщения();
	
	Наименование = СокрЛП(Наименование); // для исключения совпадений наименований без крайних пробелов
	
	Если ПустаяСтрока(Наименование) Тогда
		ТекстОшибки = НСтр("ru = 'Заполните наименование.'");
		//@skip-check object-deprecated
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Наименование");
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстОшибки) Тогда // ошибок нет, можем записать элемент
		
		Если Не ЗначениеЗаполнено(ID) Тогда // значит добавляем новый МУ
			ID = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		СохранитьОбъектВХранилищеКлиент();
		//@skip-check form-self-reference
		ЭтаФорма.Модифицированность = Ложь;
		Закрыть();
	
	КонецЕсли;
	
КонецПроцедуры

// ОбработчикиКомандФормы
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции_Хранилище

// Процедура считывает объект (список торговых точек) из хранилища значений.
&НаСервере
Процедура ПрочестьОбъектИзХранилища(КлючID) 
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	
	ID = КлючID;
	СтррОбъект = ТекОбъект.ВОЭлементЗагрузить(СтррКонтекст.ВО, ID);
	Если СтррОбъект = Неопределено Тогда // создание нового элемента справочника
		Наименование = НСтр("ru = 'Новый'");
	Иначе
		ТекОбъект.ЗаполнитьРеквизитыОбъектаИзСтруктуры(ЭтотОбъект, СтррОбъект);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьОбъектВХранилищеКлиент()
	
	МодульМТ.ВОПередЗаписьюЭлемента(ЭтотОбъект);
	
	СохранитьОбъектВХранилище();
	//@skip-check form-self-reference
	ЭтаФорма.Модифицированность = Ложь;
	Оповестить("АПЭлементСправочникаЗаписан_" + СтррКонтекст.ВО.ВидОбъекта, ID);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьОбъектВХранилище()

	СтрРеквизитыШапки = "Статус,Наименование,Комментарий,ШаблонАнкеты";
	СтррОбъект = Новый Структура(СтрРеквизитыШапки); // сохраняемые реквизиты объекта
	//@skip-check form-self-reference
	ЗаполнитьЗначенияСвойств(СтррОбъект, ЭтаФорма);
	
	РеквизитФормыВЗначение("Объект").ВОЭлементСохранить(СтррКонтекст.ВО, ID, СтррОбъект);	
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_Хранилище
#КонецОбласти 

#Область СлужебныеПроцедурыИФункции_Обрвботчики

&НаКлиенте
Процедура СохранитьВсеПродолжить(РезультатОтвета, ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		КомандаОК(Неопределено);
	ИначеЕсли РезультатОтвета = КодВозвратаДиалога.Нет Тогда
		//@skip-check form-self-reference
		ЭтаФорма.Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

// СлужебныеПроцедурыИФункции_Обрвботчики
#КонецОбласти 

// СлужебныеПроцедурыИФункции
#КонецОбласти
