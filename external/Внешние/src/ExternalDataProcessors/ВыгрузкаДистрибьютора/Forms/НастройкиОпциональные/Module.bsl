
&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	Результат = Новый Структура;	
	
	Результат.Вставить("ВыгрузкаТорговыхТочек", ВыгрузкаТорговыхТочек);
	Результат.Вставить("ВыгрузкаКонтрагентов", ВыгрузкаКонтрагентов);	
	Результат.Вставить("v2ФорматВыгрузки", v2ФорматВыгрузки);
	Результат.Вставить("ИмпортНастроек", ИмпортНастроек);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыгрузкаТорговыхТочек = Параметры.ВыгрузкаТорговыхТочек;
	ВыгрузкаКонтрагентов = Параметры.ВыгрузкаКонтрагентов;
	v2ФорматВыгрузки = Параметры.v2ФорматВыгрузки;
	
	Если Параметры.Конфигурация = "Розница" Тогда
		
		Элементы.ВыгрузкаТорговыхТочек.СписокВыбора.Очистить();
		Элементы.ВыгрузкаКонтрагентов.СписокВыбора.Очистить();
				
		// "Адрес" по "ВыгружатьАдресДоставкиКакТТ"
		Элементы.ВыгрузкаТорговыхТочек.СписокВыбора.Добавить("Склад");
		Элементы.ВыгрузкаТорговыхТочек.СписокВыбора.Добавить("Осутствует");
		
		Элементы.ВыгрузкаКонтрагентов.СписокВыбора.Добавить("Контрагенты");
		
	ИначеЕсли Параметры.Конфигурация = "БП" Тогда
		
		Элементы.ВыгрузкаТорговыхТочек.СписокВыбора.Очистить();
	    Элементы.ВыгрузкаКонтрагентов.СписокВыбора.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИмпортНастроекНаСервере(ддНастроек, ддОбработки)
	
	АдресОбработки  = ПоместитьВоВременноеХранилище(ддОбработки);
	
	ИмяОбработки = ВнешниеОбработки.Подключить(АдресОбработки);
	МенеджерНастроек = ВнешниеОбработки.Создать(ИмяОбработки);
	
	Попытка
		ИмпортНастроек = МенеджерНастроек.ЗагрузитьНастройки(ддНастроек)
	Исключение
		ИмпортНастроек = Неопределено
	КонецПопытки;
	
	Возврат ТипЗнч(ИмпортНастроек) = Тип("Структура")
	
КонецФункции

&НаКлиенте
Процедура ИмпортНастроек(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПарольФТП)
		Или НЕ ЗначениеЗаполнено(ПользовательФТП) Тогда
		Сообщить(НСтр("ru = 'Укажите ФТП доступы к обработке импорта настроек'"));	
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Диалог.Заголовок		= "Укажите файл настроек";
	//Диалог.Фильтр			= "Настройки|*.settings";
	//Диалог.Расширение		= ".settings";
		
	Если Диалог.Выбрать() Тогда
		
		ддНастроек = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
		
		//Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);	
		//Диалог.Заголовок		= "Выберите обработку чтения настроек ""UnloadDistrSettings""";
		//Диалог.Фильтр			= "Обработчка|*.epf";
		//Диалог.ПолноеИмяФайла	= "UnloadDistrSettings";
		//Диалог.Расширение		= ".epf";
		//
		//Если Диалог.Выбрать() Тогда
		//	
		//	ддОбработки = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
		//	
		//	Если ИмпортНастроекНаСервере(ддНастроек, ддОбработки) Тогда
		//		Элементы.Декорация1.Видимость = Истина;	
		//	КонецЕсли;						
		//КонецЕсли;
		
		ОбработатьНастройкиНаСервере(ддНастроек, ПользовательФТП, ПарольФТП)
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработатьНастройкиНаСервере(ддНастроек, ПользовательФТП, ПарольФТП)
	
	Попытка
		ПодключениеКФТП = Новый FTPСоединение(
			"192.168.100.122", 
			15100,
			ПользовательФТП,
			ПарольФТП,
			,
			Истина,
			60,
			Новый ЗащищенноеСоединениеOpenSSL(),
			УровеньИспользованияЗащищенногоСоединенияFTP.ИспользоватьЕслиВозможно);
	Исключение				
		Сообщить("Ошибка подключения. Причина: " + КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки; 
	
	Если ТипЗнч(ПодключениеКФТП) = Тип("FTPСоединение") Тогда
		
		Попытка
			КаталогНаСервереFTP = "/temp";
			
			Если ЗначениеЗаполнено(КаталогНаСервереFTP) Тогда
				
				Если ПодключениеКФТП.НайтиФайлы(КаталогНаСервереFTP).Количество() = 0 тогда
					ПодключениеКФТП.СоздатьКаталог(КаталогНаСервереFTP);			
				КонецЕсли;
				ПодключениеКФТП.УстановитьТекущийКаталог(КаталогНаСервереFTP);
				
			КонецЕсли;
			
			МассивФайлов = ПодключениеКФТП.НайтиФайлы(КаталогНаСервереFTP, "UnloadDistrSettings.epf");
			
			Если НЕ МассивФайлов.Количество() = 1 Тогда
				
				Сообщить(НСтр("ru = 'Файлы обработки ""UnloadDistrSettings.epf"" не найдены.'"));				
				Возврат;
				
			Иначе					
				ВремФайлОбработки = ПолучитьИмяВременногоФайла();
				
				ПодключениеКФТП.Получить(МассивФайлов[0].ПолноеИмя, ВремФайлОбработки);
				
				ддОбработки = Новый ДвоичныеДанные(ВремФайлОбработки);
				
				Если ИмпортНастроекНаСервере(ддНастроек, ддОбработки) Тогда
					Элементы.Декорация1.Видимость = Истина;	
				КонецЕсли;
				
				УдалитьФайлы(ВремФайлОбработки);
				
			КонецЕсли;
			
		Исключение	
			Сообщить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Ошибка поиска файлов на FTP по причине: %1'"), КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));			
		КонецПопытки;									
	КонецЕсли;
	
КонецПроцедуры


