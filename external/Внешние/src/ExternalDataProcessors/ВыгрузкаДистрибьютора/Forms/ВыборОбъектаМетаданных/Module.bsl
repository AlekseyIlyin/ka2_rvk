
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дерево = РеквизитФормыВЗначение("ДеревоМетаданных");
	
	Если Метаданные.Справочники.Количество() > 0 Тогда 
		СтрокаГруппа = Дерево.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Справочники";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.Справочник;
		Для Каждого Объект Из Метаданные.Справочники Цикл
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = СтрокаГруппа.Синоним;
			НоваяСтрока.Имя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрокаТаблицы = ТаблицаМетаданных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, НоваяСтрока);
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		Иначе 
			СтрокаГруппа.Строки.Сортировать("Синоним Возр", Истина);
		КонецЕсли;
	КонецЕсли;
		
	Если Метаданные.РегистрыНакопления.Количество() > 0 Тогда 
		СтрокаГруппа = Дерево.Строки.Добавить();
		СтрокаГруппа.Имя = "";
		СтрокаГруппа.Синоним = "Регистры накопления";
		СтрокаГруппа.Картинка = БиблиотекаКартинок.РегистрНакопления;
		Для Каждого Объект Из Метаданные.РегистрыНакопления Цикл
			//Если Объект.РежимЗаписи <> Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый 
					//ИЛИ Объект.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический 
				//	Тогда
				//Продолжить;
			//КонецЕсли; 
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип = СтрокаГруппа.Синоним;
			НоваяСтрока.Имя = Объект.ПолноеИмя();
			Если Объект.Синоним = "" Тогда
				НоваяСтрока.Синоним = Объект.Имя;
			Иначе
				НоваяСтрока.Синоним = Объект.Синоним + " (" + Объект.Имя + ")";
			КонецЕсли; 
			НоваяСтрока.Картинка = СтрокаГруппа.Картинка;
			НоваяСтрокаТаблицы = ТаблицаМетаданных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, НоваяСтрока);
		КонецЦикла;	
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда 
			Дерево.Строки.Удалить(СтрокаГруппа);
		Иначе 
			СтрокаГруппа.Строки.Сортировать("Синоним Возр", Истина);
		КонецЕсли;
	КонецЕсли;
								
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
	Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда 
		Для Каждого СтрокаГруппа Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
			Для Каждого Строка Из СтрокаГруппа.ПолучитьЭлементы() Цикл
				Если Строка.Имя = Параметры.ТекущаяСтрока Тогда 
					Элементы.ДеревоМетаданных.ТекущаяСтрока = Строка.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		НайденныеСтроки = ТаблицаМетаданных.НайтиСтроки(Новый Структура("Имя", Параметры.ТекущаяСтрока));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ТаблицаМетаданных.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Строки = ДеревоМетаданных.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл 
		Элементы.ДеревоМетаданных.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДеревоМетаданных Тогда
		ТекущиеДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Иначе                  
		ТекущиеДанные = Элементы.ТаблицаМетаданных.ТекущиеДанные;
	КонецЕсли;  //  
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	Если ТекущиеДанные.Имя = "" Тогда 
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Имя",  	  ТекущиеДанные.Имя);
	Результат.Вставить("Синоним", ТекущиеДанные.Синоним);
	Результат.Вставить("Тип", ТекущиеДанные.Тип);
	
	Оповестить("ВыборОбъектаМетаданных", Результат, ЭтаФорма);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбратьИЗакрыть();

КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ВыбратьИЗакрыть();
	
КонецПроцедуры
