
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КаталогНаСервере 		= Параметры.КаталогНаСервере;
	ПарольФТП				= Параметры.ПарольФТП;
	ПассивныйРежимФТП 		= Параметры.ПассивныйРежимФТП;
	ПодключениеУстановлено 	= Параметры.ПодключениеУстановлено;
	ПользовательФТП 		= Параметры.ПользовательФТП;
	СерверФТП				= Параметры.СерверФТП;
	ПортФТП					= Параметры.ПортФТП;
	ФайлЛога		 		= Параметры.ФайлЛога;
	
	КаталогНаРезервномСервере	= Параметры.КаталогНаРезервномСервере;
	ПарольРезервногоФТП			= Параметры.ПарольРезервногоФТП;
	ПассивныйРежимРезервногоФТП	= Параметры.ПассивныйРежимРезервногоФТП;
	ПодключениеУстановленоРезервногоФТП 	= Параметры.ПодключениеУстановленоРезервногоФТП;
	ПользовательРезервногоФТП	= Параметры.ПользовательРезервногоФТП;
	СерверРезервногоФТП			= Параметры.СерверРезервногоФТП;
	ПортРезервногоФТП			= Параметры.ПортРезервногоФТП;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИзменитьОтображениеСтатусаПодключения();
	Элементы.Предупреждение.Видимость = БазаКлиентСерверная();
	
КонецПроцедуры

// ОбработчикиСобытийФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФайлЛогаПриИзменении(Элемент)
	ОчиститьСообщения();
	ФайлЛогаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ФайлЛогаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл для записи лога данных";
	Диалог.Фильтр	= "Текстовый документ(*.txt)|*.txt";
	Диалог.МножественныйВыбор = Ложь;
	
	Диалог.Показать(Новый ОписаниеОповещения("ПослеВыбораФайлаЛога", ЭтотОбъект));

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключениеФТП()
	
	ПараметрыФТП = Новый Структура;
	Если ЭтаФорма.ТекущийЭлемент.Имя = "ПроверитьПодключениеРезервногоФТП" Тогда
		ПараметрыФТП.Вставить("СерверФТП", СерверРезервногоФТП);
		ПараметрыФТП.Вставить("ПортФТП", ПортРезервногоФТП);
		ПараметрыФТП.Вставить("ПарольФТП", ПарольРезервногоФТП);
		ПараметрыФТП.Вставить("КаталогНаСервере", КаталогНаРезервномСервере);
		ПараметрыФТП.Вставить("ПользовательФТП", ПользовательРезервногоФТП);
		ПараметрыФТП.Вставить("ПассивныйРежимФТП", ПассивныйРежимРезервногоФТП);
		ПодключениеУстановленоРезервногоФТП = ПодключениеКФТП(ПараметрыФТП);
	Иначе
		ПараметрыФТП.Вставить("СерверФТП", СерверФТП);
		ПараметрыФТП.Вставить("ПортФТП", ПортФТП);
		ПараметрыФТП.Вставить("ПарольФТП", ПарольФТП);
		ПараметрыФТП.Вставить("КаталогНаСервере", КаталогНаСервере);
		ПараметрыФТП.Вставить("ПользовательФТП", ПользовательФТП);
		ПараметрыФТП.Вставить("ПассивныйРежимФТП", ПассивныйРежимФТП);
		ПодключениеУстановлено = ПодключениеКФТП(ПараметрыФТП);
	КонецЕсли;
	
	ИзменитьОтображениеСтатусаПодключения();

КонецПроцедуры

&НаКлиенте
Процедура СерверФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПарольФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПассивныйРежимФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении();
КонецПроцедуры

&НаСервере
Процедура ФайлЛогаПриИзмененииНаСервере()
	Если Не СуществованиеФайлаЛогаНаСервере() Тогда 
		ФайлЛога = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПроверитьПодключениеФТП(Команда)
	
	ОчиститьСообщения();
	ПроверитьПодключениеФТП();

КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьИЗакрыть(Команда)
		
	ПроверитьПодключениеФТП();
	
	Если НЕ ПодключениеУстановлено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Подключение FTP не прошло проверку, настройки сохранены не будет!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	
	Результат = Новый Структура;	
	Результат.Вставить("КаталогНаСервере", СокрЛП(КаталогНаСервере));
	Результат.Вставить("ПарольФТП", ПарольФТП);
	Результат.Вставить("ПассивныйРежимФТП", ПассивныйРежимФТП);
	Результат.Вставить("ПользовательФТП", СокрЛП(ПользовательФТП));
	Результат.Вставить("СерверФТП", СокрЛП(СерверФТП));
	Результат.Вставить("ПортФТП", ПортФТП);
	Результат.Вставить("ФайлЛога", СокрЛП(ФайлЛога));
	Результат.Вставить("ПодключениеУстановлено", ПодключениеУстановлено);
	
	Результат.Вставить("КаталогНаРезервномСервере", СокрЛП(КаталогНаРезервномСервере));
	Результат.Вставить("ПарольРезервногоФТП", ПарольРезервногоФТП);
	Результат.Вставить("ПассивныйРежимРезервногоФТП", ПассивныйРежимРезервногоФТП);
	Результат.Вставить("ПользовательРезервногоФТП", СокрЛП(ПользовательРезервногоФТП));
	Результат.Вставить("СерверРезервногоФТП", СокрЛП(СерверРезервногоФТП));
	Результат.Вставить("ПортРезервногоФТП", ПортРезервногоФТП);
	Результат.Вставить("ПодключениеУстановленоРезервногоФТП", ПодключениеУстановленоРезервногоФТП);
	
	//Оповестить("СохранениеНастроекФТП", Результат, ЭтаФорма);
	Закрыть(Результат);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеВыбораФайлаЛога(ВыбранныеФайлы, ДопПараметры) Экспорт
	Если ВыбранныеФайлы <> Неопределено Тогда 
		ФайлЛога = ВыбранныеФайлы[0];
		ФайлЛогаПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПодключениеКФТП(ПараметрыФТП) 
	
	Сервер 			= СокрЛП(ПараметрыФТП.СерверФТП);
	Порт 			= ПараметрыФТП.ПортФТП;
	Логин 			= СокрЛП(ПараметрыФТП.ПользовательФТП);
	Пароль 			= СокрЛП(ПараметрыФТП.ПарольФТП);
	ПассивныйРежим 	= ПараметрыФТП.ПассивныйРежимФТП;
	
	Если ПустаяСтрока(Сервер) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан сервер!";
		Сообщение.Поле = "СерверФТП";
		Сообщение.Сообщить();	
		Возврат Ложь;
	ИначеЕсли ПустаяСтрока(Логин) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан пользователь!";
		Сообщение.Поле = "ПользовательФТП";
		Сообщение.Сообщить();	
		Возврат Ложь;
	КонецЕсли;
	
	Если ПустаяСтрока(Порт) Тогда			
		Порт = "21";
	КонецЕсли;
		
	Попытка
		ssl = Новый ЗащищенноеСоединениеOpenSSL();
		ПодключениеКФТП = Новый FTPСоединение(Сервер, Порт , Логин, Пароль, ,ПассивныйРежим, 10,  ssl, УровеньИспользованияЗащищенногоСоединенияFTP.ИспользоватьЕслиВозможно);
	Исключение		
		Сообщение = Новый СообщениеПользователю;
		Текст = НСтр("ru = 'Ошибка аутентификации при доступе к ресурсу. Проверьте данные для входа...'");
		// +++ SA
		//Сообщение.Текст = Текст;
		Сообщение.Текст = ОписаниеОшибки();
		// --- SA
		Сообщение.Сообщить();	
		Возврат Ложь;
	КонецПопытки; 		

	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьОтображениеСтатусаПодключения()
	
	Если ПодключениеУстановлено Тогда
		Элементы.НадписьСтатусПодключения.Заголовок 	= "Подключение установлено";
		Элементы.НадписьСтатусПодключения.ЦветТекста 	= WebЦвета.Зеленый;
	Иначе
		Элементы.НадписьСтатусПодключения.Заголовок 	= "Подключение не установлено";
		Элементы.НадписьСтатусПодключения.ЦветТекста 	= WebЦвета.Красный;
	КонецЕсли;	
	
	Если ПодключениеУстановленоРезервногоФТП Тогда
		Элементы.НадписьСтатусПодключенияРезервногоФТП.Заголовок 	= "Подключение установлено";
		Элементы.НадписьСтатусПодключенияРезервногоФТП.ЦветТекста 	= WebЦвета.Зеленый;
	Иначе
		Элементы.НадписьСтатусПодключенияРезервногоФТП.Заголовок 	= "Подключение не установлено";
		Элементы.НадписьСтатусПодключенияРезервногоФТП.ЦветТекста 	= WebЦвета.Красный;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПоляНастроекФтпПриИзменении()
	
	ПодключениеУстановлено = Ложь;	
	
	ИзменитьОтображениеСтатусаПодключения();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция БазаКлиентСерверная()
	
	СтрокаСоединенияСБД = СтрокаСоединенияИнформационнойБазы();
	// в зависимости от того файловый это вариант БД или нет,  по-разному отображается путь в БД 
	ПозицияПоиска = Найти(Врег(СтрокаСоединенияСБД), "SRVR=");
	Если ПозицияПоиска = 1 тогда
		Возврат Истина;	
	Иначе 
		Возврат Ложь;
	КонецЕсли;  
	
КонецФункции

&НаСервере
Функция СуществованиеФайлаЛогаНаСервере()
	
	Если ЗначениеЗаполнено(СокрЛП(ФайлЛога)) Тогда
		
		ФайлНаДиске = Новый Файл(СокрЛП(ФайлЛога));
		
		Если Не ФайлНаДиске.Существует() Тогда		
			
			ТекстСообщения = "Файл лога, указанный в настройках FTP-соединения, не существует на сервере!";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Поле = "ФайлЛога";
			Сообщение.Сообщить();	
			Возврат Ложь;
			
		ИначеЕсли Не ФайлНаДиске.ЭтоФайл() Тогда 
			
			ТекстСообщения = "Имя, указанное в качестве файла лога в настройках FTP-соединения, не соответствует файлу!";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Поле = "ФайлЛога";
			Сообщение.Сообщить();	
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Процедура ЭлементыРезервногоФТППриИзменении(Элемент)
	
	ПодключениеУстановленоРезервногоФТП = Ложь;	
	ИзменитьОтображениеСтатусаПодключения();

КонецПроцедуры

&НаКлиенте
Процедура ПортФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении()
КонецПроцедуры

&НаКлиенте
Процедура ПортРезервногоФТППриИзменении(Элемент)
	ПоляНастроекФтпПриИзменении()
КонецПроцедуры

#КонецОбласти










