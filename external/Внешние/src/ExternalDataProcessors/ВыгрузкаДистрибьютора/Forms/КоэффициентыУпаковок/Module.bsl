
// 0 - "упак"
// 1 - "шт"
// 2 - "г"
// 4 - "мл"
// 5 - "см^2"
// 6 - "таблетка"
// 7 - "см"

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Номенклатура.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	
	_ЕдИзм = Новый Соответствие;
	Для каждого Элемент Из Элементы.Единица.СписокВыбора Цикл		
		_ЕдИзм.Вставить(Число(Сред(Элемент.Представление,0,1)),Элемент.Значение);	
	КонецЦикла;
	
	ЭтаФорма.ЕдИзм = Новый ФиксированноеСоответствие(_ЕдИзм);
	
	Если Параметры.Свойство("КоэффициентыУпаковок") Тогда
		Для каждого СтрПараметры Из Параметры.КоэффициентыУпаковок Цикл		
			СтрТаблица = КоэффициентыУпаковок.Добавить();
			СтрТаблица.Активно = СтрПараметры.Активно;
			СтрТаблица.Номенклатура = СтрПараметры.Номенклатура;
			СтрТаблица.Коэффициент = СтрПараметры.Коэффициент;	
			СтрТаблица.Единица = _ЕдИзм[СтрПараметры.Единица];	
		КонецЦикла;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность
		Или ЗавершениеРаботы
		Или ЭтаФорма.ЗакрытиеБезСохранения Тогда
		
		Возврат;
		
	КонецЕсли;		
				
	Отказ = Истина;
	ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма), "Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);	
					
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма.ЗакрытиеБезСохранения = Истина;	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда				
		Закрыть();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда				
		Закрыть(ТаблицаКоэффициентов());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьКоэффициент(Команда)
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ЗаполнитьКоэффициентЗавершение", ЭтаФорма), 1, "Введите коэффициент", 10, 0);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоэффициентЗавершение(Знач Коэффициент, Знач ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Коэффициент) Тогда	
		Для каждого стрВыбор Из Элементы.КоэффициентыУпаковок.ВыделенныеСтроки Цикл			
			стрТаблица = КоэффициентыУпаковок.НайтиПоИдентификатору(стрВыбор);			
			стрТаблица.Коэффициент = Коэффициент;
			Модифицированность = Истина;
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктивность(Команда)	
	Для каждого Стр Из КоэффициентыУпаковок Цикл	
		Стр.Активно = Истина;	
		Модифицированность = Истина
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьАктивность(Команда)	
	Для каждого Стр Из КоэффициентыУпаковок Цикл	
		Стр.Активно = Ложь;	
		Модифицированность = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
			
	ТекДанные = Элементы.КоэффициентыУпаковок.ТекущиеДанные;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("ВыборГруппИЭлементов ", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
		
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыОткрытия,,,,, Новый ОписаниеОповещения("ПодобратьЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьЗавершение(Знач Результат, Знач ДополнительныеПараметры) Экспорт

	Если ЗначениеЗаполнено(Результат) Тогда		
		МаксИндекс = Результат.Количество()-1; 		
		Для Индекс = - МаксИндекс По 0 Цикл			
			Отбор = Новый Структура("Номенклатура", Результат[-Индекс]);			
			Строка = КоэффициентыУпаковок.НайтиСтроки(Отбор);			
			Если Строка.Количество() Тогда				
				Результат.Удалить(-Индекс);				
			КонецЕсли;			
		КонецЦикла;		
		Если Результат.Количество() Тогда	
			ПодобратьЗавершениеНаСервере(Результат);	
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодобратьЗавершениеНаСервере(Знач НоменклатураМассив)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаКоэффициентов.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаКоэффициентов
		|ИЗ
		|	&ТаблицаКоэффициентов КАК ТаблицаКоэффициентов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИСТИНА КАК Активно,
		|	СправочникНоменклатура.Ссылка КАК Номенклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКоэффициентов КАК ТаблицаКоэффициентов
		|		ПО СправочникНоменклатура.Ссылка = ТаблицаКоэффициентов.Номенклатура
		|ГДЕ
		|	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&Номенклатура)
		|	И ТаблицаКоэффициентов.Номенклатура ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	СправочникНоменклатура.Наименование");
	
	Запрос.УстановитьПараметр("Номенклатура"	, НоменклатураМассив);
	Запрос.УстановитьПараметр("ТаблицаКоэффициентов", КоэффициентыУпаковок.Выгрузить(, "Номенклатура"));
	
	Выборка = Запрос.Выполнить().Выбрать();	
	
	Количество = Выборка.Количество();	
	Если Количество Тогда		
		Пока Выборка.Следующий() Цикл						
			ЗаполнитьЗначенияСвойств(КоэффициентыУпаковок.Добавить(), Выборка);			
		КонецЦикла;			
		КоэффициентыУпаковок.Сортировать("Номенклатура", );		
		ЭтаФорма.Модифицированность = Истина;				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)	
	Если КоэффициентыУпаковок.Количество() > 0  Тогда	
		ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьЗавершение", ЭтаФорма), "Очистить таблицу?", РежимДиалогаВопрос.ДаНет);	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда		
		КоэффициентыУпаковок.Очистить();
		Модифицированность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЕдиницу(Команда)
	Элементы.Единица.СписокВыбора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ЗаполнитьЕдиницуЗавершение", ЭтаФорма));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЕдиницуЗавершение(Знач ВыбраннаяСтрока, Знач ДополнительныеПараметры) Экспорт

	Если ВыбраннаяСтрока <> Неопределено Тогда		
		Для каждого стрВыделенная Из Элементы.КоэффициентыУпаковок.ВыделенныеСтроки Цикл			
			стрТаблица = КоэффициентыУпаковок.НайтиПоИдентификатору(стрВыделенная);			
			стрТаблица.Единица = ВыбраннаяСтрока.Значение;			
		КонецЦикла;				
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТаблицаКоэффициентов()	
	
	_ЕдИзм = Новый Соответствие;
	Для каждого КлючЗначение Из ЭтаФорма.ЕдИзм Цикл	
		_ЕдИзм.Вставить(КлючЗначение.Значение, КлючЗначение.Ключ);	
	КонецЦикла;
	
	ЭтаФорма.ЕдИзм = Новый ФиксированноеСоответствие(_ЕдИзм);
	ЭтаФорма.ЗакрытиеБезСохранения = Истина;
	
	Результат = Новый Структура;
	Результат.Вставить("КоэффициентыУпаковок", Новый Массив);
	
	Для каждого Стр Из КоэффициентыУпаковок Цикл
	
		СтрПараметры = Новый Структура;
		СтрПараметры.Вставить("Активно", Стр.Активно);
		СтрПараметры.Вставить("Номенклатура", Стр.Номенклатура);
		СтрПараметры.Вставить("Коэффициент", Стр.Коэффициент);
		СтрПараметры.Вставить("Единица", _ЕдИзм[Стр.Единица]);
		
		Результат.КоэффициентыУпаковок.Добавить(СтрПараметры);
	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции 

&НаКлиенте
Процедура КомандаЗагрузитьИзExcel(Команда)
	
	Перем Номенклатура;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Колонки для идентификаци или КОД или НАИМЕНОВАНИЕ или АРТИКУЛ";
	Диалог.Фильтр = "Файлы Excel|*.xls*|Все файлы|*.*";
	
	Если Диалог.Выбрать() Тогда
		ПолноеИмяФайла = Диалог.ПолноеИмяФайла;
		ФайлExcel = Новый Файл(ПолноеИмяФайла);		
		ДД = Новый ДвоичныеДанные(ПолноеИмяФайла);
		ДанныеФайла = ПрочитатьФайлНаСервере(ФайлExcel.Расширение, ДД);		
	Иначе
		Возврат
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеФайла) Тогда
		Номенклатура = РазобратьДанныеФайла(ДанныеФайла);
		Для каждого стрНоменклатуры Из Номенклатура Цикл			
			УжеДобавлено = КоэффициентыУпаковок.НайтиСтроки(Новый Структура("Номенклатура", стрНоменклатуры.Номенклатура));			
			Если УжеДобавлено.Количество() Тогда				
				Стр = УжеДобавлено[0];				
			Иначе				
				Стр = КоэффициентыУпаковок.Добавить();				
			КонецЕсли;			
			Стр.Активно = Истина;			
			Для каждого КлючЗначение Из стрНоменклатуры Цикл				
				Если Не ЗначениеЗаполнено(КлючЗначение.Значение) Тогда					
					стрНоменклатуры.Удалить(КлючЗначение.Ключ);					
				КонецЕсли;				
			КонецЦикла;			
			ЗаполнитьЗначенияСвойств(Стр, стрНоменклатуры);
		КонецЦикла;		
		ЭтаФорма.Модифицированность = Истина		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция	ПрочитатьФайлНаСервере(Расширение, ДвоичныеДанные) Экспорт
	
	Перем Данные;
	
	ВФ = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ВФ);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Попытка
		ТабличныйДокумент.Прочитать(ВФ, СпособЧтенияЗначенийТабличногоДокумента.Текст);
		Данные = ОбработатьТабличныйДокумент(ТабличныйДокумент);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();		
	КонецПопытки;
	
	УдалитьФайлы(ВФ);
			
	Возврат Данные;
	
КонецФункции

&НаСервере
Функция ОбработатьТабличныйДокумент(ТабличныйДокумент)
	
	Результат = Новый Массив;	
	
	Для Стр = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл		
		НичегоНеНайдено	= Истина;		
		Данные	= Новый Массив;		
		Для Стб = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
			Текст = СокрЛП(ТабличныйДокумент.Область(Стр, Стб, Стр, Стб).Текст);
			Данные.Добавить(Текст);
			Если Не ПустаяСтрока(Текст) Тогда
				НичегоНеНайдено = Ложь;
			КонецЕсли;
		КонецЦикла;		
		Если НичегоНеНайдено Тогда
			Прервать;
		КонецЕсли;		
		Результат.Добавить(Данные);		
	КонецЦикла;

	Возврат Результат

КонецФункции
 
&НаСервере
Функция ПрочитатьСтрокуДанных(Колонки, ТекСтр)
	
	ДанныеСтроки = Новый Структура;
	Для каждого КлючИЗначение Из Колонки Цикл			
		Клч = КлючИЗначение.Ключ; 
		Если НЕ КлючИЗначение.Значение = Неопределено Тогда
			Знч = СокрЛП(ТекСтр[КлючИЗначение.Значение]);	
		Иначе
			Знч = "";	
		КонецЕсли;							
		ДанныеСтроки.Вставить(Клч, Знч);		
	КонецЦикла;
	
	Возврат ДанныеСтроки
	
КонецФункции

Функция ПрочитатьКолонкиДанных(ПерваяСтрока)
	
	Колонки = Новый Структура;
	
	Колонки.Вставить("Код", ПерваяСтрока.Найти("Код"));
	Колонки.Вставить("Наименование", ПерваяСтрока.Найти("Наименование"));
	Колонки.Вставить("Артикул", ПерваяСтрока.Найти("Артикул"));
	Колонки.Вставить("Коэффициент", ПерваяСтрока.Найти("Коэффициент"));
	Колонки.Вставить("Единица", ПерваяСтрока.Найти("Единица"));
	
	Если НЕ ЗначениеЗаполнено(Колонки.Код)
		И НЕ ЗначениеЗаполнено(Колонки.Наименование)
		И НЕ ЗначениеЗаполнено(Колонки.Артикул) Тогда		
		ВызватьИсключение("Не заполнены обязательные колонки: ""Код"" или ""Артикул"" или ""Наименование""!");		
	КонецЕсли;
	
	Возврат Колонки
	
КонецФункции

Функция НайтиНоменклатуру(ТекСтр)
	
	Номенклатура = Неопределено;
	
	Если ТекСтр.Код <> "" Тогда		
		Номенклатура = Справочники.Номенклатура.НайтиПоКоду(ТекСтр.Код);		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Номенклатура)
		И ТекСтр.Артикул <> "" Тогда		
		Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", ТекСтр.Артикул);		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Номенклатура)
		И ТекСтр.Наименование <> "" Тогда		
		Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(ТекСтр.Наименование, Истина);		
	КонецЕсли;
	
	Возврат Номенклатура		
	
КонецФункции

&НаСервере
Функция РазобратьДанныеФайла(ДанныеФайла) Экспорт
			
	Колонки = ПрочитатьКолонкиДанных(ДанныеФайла[0]);		
	
	УжеНайденнаяНоменклатура = Новый Массив;
	Результат = Новый Массив;	
	ОписаниеТипа = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 3, ДопустимыйЗнак.Неотрицательный));	
	Единицы = Элементы.Единица.СписокВыбора;
	
	Для i = 1 По ДанныеФайла.ВГраница() Цикл
		
		ТекСтр = ПрочитатьСтрокуДанных(Колонки, ДанныеФайла[i]);
					
		Если ТекСтр.Код = "" 
			И ТекСтр.Артикул = "" 
			И ТекСтр.Наименование = "" Тогда
			Продолжить;
		КонецЕсли;
		
		Номенклатура = НайтиНоменклатуру(ТекСтр);
			
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			Сообщить(
				СтрШаблон(
					"Код ""%1"", артикул ""%2"", наименование ""%3"" не принадлежат номенклатуре", 
						ТекСтр.Код,
							ТекСтр.Артикул,
								ТекСтр.Наименование));			
			Продолжить;
		КонецЕсли;
				
		ЕдиницыСтрока = Единицы.НайтиПоЗначению(СокрЛП(ТекСтр.Единица));
		Если ЕдиницыСтрока <> Неопределено Тогда		
			ТекСтр.Единица = ЕдиницыСтрока.Значение;		
		КонецЕсли;
		
		Если УжеНайденнаяНоменклатура.Найти(Номенклатура) = Неопределено Тогда			
			УжеНайденнаяНоменклатура.Добавить(Номенклатура);			
			ТекСтр.Коэффициент = ОписаниеТипа.ПривестиЗначение(ТекСтр.Коэффициент);			
			Если Единицы.НайтиПоЗначению(СокрЛП(ТекСтр.Единица)) <> Неопределено Тогда			
				ТекСтр.Единица = ЕдиницыСтрока.Значение;			
			КонецЕсли;			
			ТекСтр.Вставить("Номенклатура", Номенклатура);			
			Результат.Добавить(ТекСтр);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КоэффициентыУпаковокПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КоэффициентыУпаковокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)	
	
	Если НоваяСтрока Тогда	
		ТекДанные = Элементы.КоэффициентыУпаковок.ТекущиеДанные;
		ТекДанные.Активно = Истина;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
