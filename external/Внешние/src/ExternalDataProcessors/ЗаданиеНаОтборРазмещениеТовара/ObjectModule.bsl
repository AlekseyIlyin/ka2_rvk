
Процедура Печать(МассивОбъектовНазначения, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаданиеНаОтборРазмещениеТовара") Тогда
		
		ТабличныйДокумент = СформироватьЗаданиеНаОтборРазмещениеТовара(МассивОбъектовНазначения, ОбъектыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ПФ_MXL_ЗаданиеНаОтборРазмещениеТовара", "Задание на отбор размещение товара (Програмтех)", ТабличныйДокумент);
		
	КонецЕсли;	
	
КонецПроцедуры

Функция СведенияОВнешнейОбработке() Экспорт
	
	Представление = ЭтотОбъект.Метаданные().Синоним;
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Версия", "1.2");
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);  
	
	ПараметрыРегистрации.Вставить("Назначение", НазначениеОбработки());
	ПараметрыРегистрации.Вставить("Наименование", Представление);
	ПараметрыРегистрации.Вставить("Информация", ЭтотОбъект.Метаданные().Комментарий);

	ТаблицаКоманд = ТаблицуКоманд();
	ДобавитьКоманду(ТаблицаКоманд, Представление, "ПФ_MXL_ЗаданиеНаОтборРазмещениеТовара",);	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция НазначениеОбработки()
	
	Назначение = Новый Массив;
	Назначение.Добавить("Документ.ЗаказКлиента");
	Назначение.Добавить("Документ.РеализацияТоваровУслуг");
	
	Возврат Назначение;
	
КонецФункции

Функция ТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

Функция СформироватьЗаданиеНаОтборРазмещениеТовара(МассивОбъектовНазначения, ОбъектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ДополнитьКомплектВнешнимиПечатнымиФормами", Ложь);
	ПараметрыПечати.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ПараметрыПечати.ИмяФормы;
	НомерТипаДокумента = 0;
	
	Если ТипЗнч(МассивОбъектовНазначения) = Тип("Соответствие") Тогда 
		СтруктураТипов = МассивОбъектовНазначения;
	Иначе
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектовНазначения);
	КонецЕсли;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		КолонкаКодов = ""; //ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
		ВыводитьУпаковки = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") 
										И Не(ПараметрыПечати.Свойство("БезДопКолонки"));
		ВыводитьПоУчету = ВыводитьУпаковки;
		ЗаданиеНаДобор 	= ПараметрыПечати.ИмяФормы = "ЗаданиеНаДобор";
		
		Макет = ЭтотОбъект.ПолучитьМакет("ПФ_MXL_ЗаданиеНаОтборРазмещениеТовара");
		
		ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		
		ОбластьШапка 			  = Макет.ПолучитьОбласть("Шапка");
		ОбластьОснование 		  = Макет.ПолучитьОбласть("Основание");
		ОбластьЗаданиеНаПеревозку = Макет.ПолучитьОбласть("ЗаданиеНаПеревозку");
		ОбластьПодписанты		  = Макет.ПолучитьОбласть("Подписанты"); // + AI
		
		// Области макета для склада со справочным использованием ячеек, с использованием упаковок, с кодами.
		ОбластьШапкаТаблицыОснова	  		= Макет.ПолучитьОбласть("ШапкаТаблицыОснова");
		ОбластьРабочийУчастокОснова		  	= Макет.ПолучитьОбласть("РабочийУчастокОснова");
		ОбластьСтрокаТаблицыОснова	        = Макет.ПолучитьОбласть("СтрокаТаблицыОснова");
		ОбластьПодвалТаблицыОснова	      	= Макет.ПолучитьОбласть("ПодвалТаблицыОснова");
		
		ОбластьШапкаТаблицыОснова.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		// Области макета для склада со справочным использованием ячеек, без использования упаковок, с кодами.
		ОбластьШапкаТаблицыБезУпаковок 			  = Макет.ПолучитьОбласть("ШапкаТаблицыБезУпаковок");
		ОбластьРабочийУчастокБезУпаковок		  = Макет.ПолучитьОбласть("РабочийУчастокБезУпаковок");
		ОбластьСтрокаТаблицыБезУпаковок	   		  = Макет.ПолучитьОбласть("СтрокаТаблицыБезУпаковок");
		ОбластьПодвалТаблицыБезУпаковок	     	  = Макет.ПолучитьОбласть("ПодвалТаблицыБезУпаковок");
		
		ОбластьШапкаТаблицыБезУпаковок.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		// Области макета для склада без справочного использования ячеек, с использованием упаковок, с кодами.
		ОбластьШапкаТаблицыБезЯчеек 			= Макет.ПолучитьОбласть("ШапкаТаблицыБезЯчеек");
		ОбластьРабочийУчастокБезЯчеек			= Макет.ПолучитьОбласть("РабочийУчастокБезЯчеек");
		ОбластьСтрокаТаблицыБезЯчеек 			= Макет.ПолучитьОбласть("СтрокаТаблицыБезЯчеек");
		ОбластьПодвалТаблицыБезЯчеек			= Макет.ПолучитьОбласть("ПодвалТаблицыБезЯчеек");
		
		ОбластьШапкаТаблицыБезЯчеек.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		// Области макета для склада без справочного использования ячеек, без использования упаковок, с кодами.
		ОбластьШапкаТаблицыБезЯчеекБезУпаковок 				= Макет.ПолучитьОбласть("ШапкаТаблицыБезЯчеекБезУпаковок");
		ОбластьРабочийУчастокБезЯчеекБезУпаковок			= Макет.ПолучитьОбласть("РабочийУчастокБезЯчеекБезУпаковок");
		ОбластьСтрокаТаблицыБезЯчеекБезУпаковок				= Макет.ПолучитьОбласть("СтрокаТаблицыБезЯчеекБезУпаковок");
		ОбластьПодвалТаблицыБезЯчеекБезУпаковок				= Макет.ПолучитьОбласть("ПодвалТаблицыБезЯчеекБезУпаковок");
		
		ОбластьШапкаТаблицыБезЯчеекБезУпаковок.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
		
		// Области макета для склада со справочным использованием ячеек, с использованием упаковок, без кодов.
		ОбластьШапкаТаблицыБезКодов 		  = Макет.ПолучитьОбласть("ШапкаТаблицыБезКодов");
		ОбластьРабочийУчастокБезКодов		  = Макет.ПолучитьОбласть("РабочийУчастокБезКодов");
		ОбластьСтрокаТаблицыБезКодов	      = Макет.ПолучитьОбласть("СтрокаТаблицыБезКодов");
		ОбластьПодвалТаблицыБезКодов	      = Макет.ПолучитьОбласть("ПодвалТаблицыБезКодов");	
		
		// Области макета для склада со справочным использованием ячеек, без использования упаковок, без кодов.
		ОбластьШапкаТаблицыБезУпаковокБезКодов 			  = Макет.ПолучитьОбласть("ШапкаТаблицыБезУпаковокБезКодов");
		ОбластьРабочийУчастокБезУпаковокБезКодов		  = Макет.ПолучитьОбласть("РабочийУчастокБезУпаковокБезКодов");
		ОбластьСтрокаТаблицыБезУпаковокБезКодов	   		  = Макет.ПолучитьОбласть("СтрокаТаблицыБезУпаковокБезКодов");
		ОбластьПодвалТаблицыБезУпаковокБезКодов	     	  = Макет.ПолучитьОбласть("ПодвалТаблицыБезУпаковокБезКодов");
				
		// Области макета для склада без справочного использования ячеек, с использованием упаковок, без кодов.
		ОбластьШапкаТаблицыБезЯчеекБезКодов 			= Макет.ПолучитьОбласть("ШапкаТаблицыБезЯчеекБезКодов");
		ОбластьРабочийУчастокБезЯчеекБезКодов			= Макет.ПолучитьОбласть("РабочийУчастокБезЯчеекБезКодов");
		ОбластьСтрокаТаблицыБезЯчеекБезКодов 			= Макет.ПолучитьОбласть("СтрокаТаблицыБезЯчеекБезКодов");
		ОбластьПодвалТаблицыБезЯчеекБезКодов			= Макет.ПолучитьОбласть("ПодвалТаблицыБезЯчеекБезКодов");
				
		// Области макета для склада без справочного использования ячеек, без использования упаковок, без кодов.
		ОбластьШапкаТаблицыБезЯчеекБезУпаковокБезКодов 				= Макет.ПолучитьОбласть("ШапкаТаблицыБезЯчеекБезУпаковокБезКодов");
		ОбластьРабочийУчастокБезЯчеекБезУпаковокБезКодов			= Макет.ПолучитьОбласть("РабочийУчастокБезЯчеекБезУпаковокБезКодов");
		ОбластьСтрокаТаблицыБезЯчеекБезУпаковокБезКодов				= Макет.ПолучитьОбласть("СтрокаТаблицыБезЯчеекБезУпаковокБезКодов");
		ОбластьПодвалТаблицыБезЯчеекБезУпаковокБезКодов				= Макет.ПолучитьОбласть("ПодвалТаблицыБезЯчеекБезУпаковокБезКодов");
		
		ОбластьИсполнитель = Макет.ПолучитьОбласть("Исполнитель");
		
		ЭтоЗаданиеНаРазмещение 	= Неопределено;
		ПервыйДокумент 	 		= Истина;
		
		Если ПараметрыПечати.ИмяФормы  = "ЗаданиеНаПересчет" Тогда							
			ОбластьШапкаТаблицыОснова.Параметры.НадписьКоличествоУпаковки 				= НСтр("ru='(По учету)'");
			ОбластьШапкаТаблицыБезКодов.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(По учету)'");
			ОбластьШапкаТаблицыБезЯчеек.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(По учету)'");
			ОбластьШапкаТаблицыБезЯчеекБезКодов.Параметры.НадписьКоличествоУпаковки 	= НСтр("ru='(По учету)'");
			ОбластьШапкаТаблицыОснова.Параметры.НадписьКоличество 						= НСтр("ru='(Факт)'");
			ОбластьШапкаТаблицыБезКодов.Параметры.НадписьКоличество 					= НСтр("ru='(Факт)'");
			ОбластьШапкаТаблицыБезЯчеек.Параметры.НадписьКоличество 					= НСтр("ru='(Факт)'");
			ОбластьШапкаТаблицыБезЯчеекБезКодов.Параметры.НадписьКоличество 			= НСтр("ru='(Факт)'");
			НазваниеФормы 																= НСтр("ru = 'Задание на пересчет товаров'");
		ИначеЕсли ПараметрыПечати.ИмяФормы  = "ЗаданиеНаРазмещение" Тогда				
			Если СтруктураОбъектов.Ключ = "Документ.РасходныйОрдерНаТовары" 
				ИЛИ СтруктураОбъектов.Ключ = "Документ.ПорчаТоваров" 
				ИЛИ СтруктураОбъектов.Ключ = "Документ.ПересортицаТоваров"
				ИЛИ СтруктураОбъектов.Ключ = "Документ.СписаниеНедостачТоваров"
				ИЛИ СтруктураОбъектов.Ключ = "Документ.ИнвентаризационнаяОпись" Тогда
				Для Каждого РасходныйОрдер Из СтруктураОбъектов.Значение Цикл
					ТекстСообщения = НСтр("ru = 'Печать задания на размещение для документа ""%Документ%"" не предусмотрена.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%", РасходныйОрдер);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);	
				КонецЦикла;
				Продолжить;
			КонецЕсли;
			ЭтоЗаданиеНаРазмещение 														= Истина;
			НазваниеФормы 																= НСтр("ru = 'Задание на размещение товаров'");
			ОбластьШапкаТаблицыОснова.Параметры.НадписьКоличествоУпаковки 				= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезКодов.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеек.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеекБезКодов.Параметры.НадписьКоличествоУпаковки		= НСтр("ru='(упаковок)'");				

		ИначеЕсли ПараметрыПечати.ИмяФормы  = "ЗаданиеНаОтбор" Тогда				
			ЭтоЗаданиеНаРазмещение 														= Ложь;
			НазваниеФормы 																= НСтр("ru = 'Задание на отбор товаров'");
			ОбластьШапкаТаблицыОснова.Параметры.НадписьКоличествоУпаковки 				= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезКодов.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеек.Параметры.НадписьКоличествоУпаковки 			= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеекБезКодов.Параметры.НадписьКоличествоУпаковки 	= НСтр("ru='(упаковок)'");
		КонецЕсли;
				
		Если ЗаданиеНаДобор Тогда
			ЭтоЗаданиеНаРазмещение 														= Ложь;
			НазваниеФормы 																= НСтр("ru = 'Задание на добор товаров'");
			ОбластьШапкаТаблицыОснова.Параметры.НадписьКоличество 						= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезКодов.Параметры.НадписьКоличество 					= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеек.Параметры.НадписьКоличество 					= НСтр("ru='(упаковок)'");
			ОбластьШапкаТаблицыБезЯчеекБезКодов.Параметры.НадписьКоличество 			= НСтр("ru='(упаковок)'");
			ДанныеДляПечати = 
				Обработки.ПроверкаКоличестваТоваровВДокументе.ПолучитьДанныеДляПечатнойФормыЗаданиеНаДоборТоваров(ПараметрыПечати, 
																													ПараметрыПечати.Ордер);
		Иначе
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
			ДанныеДляПечати = птПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, 
																									СтруктураОбъектов.Значение);
		КонецЕсли;
		
		ДанныеПоШапке 			= ДанныеДляПечати.РезультатПоШапке;
		ДанныеПоТабличнойЧасти	= ДанныеДляПечати.РезультатПоТабличнойЧасти;
		ДанныеПоУпаковкам 		= ДанныеДляПечати.РезультатПоУпаковкам;
		ДанныеПоСериям			= ДанныеДляПечати.РезультатПоСериям;
		
		ДанныеПоРаспоряжениям	= Неопределено;
		ДанныеДляПечати.Свойство("РезультатПоРаспоряжениям", ДанныеПоРаспоряжениям);
		
		ЕстьПолеИспользоватьСерииНоменклатуры = ДанныеПоШапке.Колонки.Найти("ИспользоватьСерииНоменклатуры") <> Неопределено;
		
		ВыборкаПоШапке			= ДанныеПоШапке.Выбрать();
		ВыборкаПоСсылкам		= ДанныеПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаПоСериям			= ДанныеПоСериям.Выбрать();
		
		Если ПараметрыПечати.ИмяФормы  <> "ЗаданиеНаПересчет" И СтруктураОбъектов.Ключ <> "Документ.ПересчетТоваров" Тогда
			ВыборкаПоУпаковкам 	= ДанныеПоУпаковкам.Выбрать();
		КонецЕсли;
		
		Если СтруктураОбъектов.Ключ = "Документ.РасходныйОрдерНаТовары" Тогда
			ВыборкаПоРаспоряжениям = ДанныеПоРаспоряжениям.Выбрать();
		КонецЕсли;
		
		ТекущаяСсылка = Неопределено;
		
		Пока ВыборкаПоШапке.Следующий() Цикл
			
			ТекстСообщения = "";
			
			Если Не ЗначениеЗаполнено(ВыборкаПоШапке.СкладПредставление) Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
					|т.к. не заполнено поле ""Склад"".'");
				
			ИначеЕсли ВыборкаПоШапке.НарушенаОрдернаяСхема Тогда
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
				|т.к. на складе ""%Склад%"" используется ордерная схема, поэтому печать задания должна вестись из ордера.'");
				
			ИначеЕсли (ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары")
				ИЛИ ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров")
				ИЛИ ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.РасходныйОрдерНаТовары"))
				И ВыборкаПоШапке.ИспользуетсяАдресноеХранение Тогда
				
				ТекстСообщения = НСтр("ru='Невозможно напечатать %НазваниеФормы% для ""%Документ%"",
					|т.к. для склада (помещения) с ячейками, используемыми для хранения остатков номенклатуры, эта печатная форма не предусмотрена.
					|Печать задания на отбор (размещение) возможна из документа ""Отбор (размещение) товаров"".'");
					
			ИначеЕсли ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.ПересчетТоваров")
				И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоШапке.Ссылка, "Статус") 
					= Перечисления.СтатусыПересчетовТоваров.Подготовлено Тогда
					ТекстСообщения = НСтр("ru='Невозможно напечатать ""%НазваниеФормы%"" для ""%Документ%"",
						|в статусе ""%СтатусПересчета%"".'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтатусПересчета%", Перечисления.СтатусыПересчетовТоваров.Подготовлено);
			ИначеЕсли ТекущаяСсылка <> ВыборкаПоШапке.Ссылка
				И НЕ ВыборкаПоСсылкам.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка)) Тогда
					Если ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
						ТекстСообщения = НСтр("ru='Невозможно напечатать ""%НазваниеФормы%"" для ""%Документ%"",
							|т.к. в табличной части отсутствуют строки номенклатуры с типом ""Товар"" и действием ""Отгрузить"" или ""Отгрузить обособленно"".'");
					ИначеЕсли ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
						ТекстСообщения = НСтр("ru='Невозможно напечатать ""%НазваниеФормы%"" для ""%Документ%"",
							|т.к. в табличной части отсутствуют строки номенклатуры с типом ""Товар"" и действием ""Отгрузить"".'");
					Иначе
						ТекстСообщения = НСтр("ru='Невозможно напечатать ""%НазваниеФормы%"" для ""%Документ%"",
							|т.к. в табличной части отсутствует отгружаемая номенклатура с типом ""Товар"".'");
					КонецЕсли;
			ИначеЕсли ТекущаяСсылка <> ВыборкаПоШапке.Ссылка Тогда 
					ТекущаяСсылка = ВыборкаПоШапке.Ссылка;	
			КонецЕсли;
						
			Если ЗначениеЗаполнено(ТекстСообщения) Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%", ВыборкаПоШапке.СсылкаПредставление);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
						"%Склад%",
						СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоШапке.СкладПредставление, 
						ВыборкаПоШапке.ПомещениеПредставление));
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеФормы%",НазваниеФормы);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Продолжить;
			КонецЕсли;
			
			ИспользоватьСерии = Ложь;
			
			Если ЕстьПолеИспользоватьСерииНоменклатуры Тогда
				ИспользоватьСерии = ВыборкаПоШапке.ИспользоватьСерииНоменклатуры;
			КонецЕсли;
			
			ИспользуетсяСправочноеХранение = ВыборкаПоШапке.ИспользуетсяСправочноеХранение;
			
			ВыборкаПоСкладам = ВыборкаПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСкладам.НайтиСледующий(Новый Структура("Склад",ВыборкаПоШапке.Склад)) Цикл
				ВыборкаРабочиеУчастки = ВыборкаПоСкладам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Если Не ПервыйДокумент Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				Если ДанныеПоШапке.Колонки.Найти("ВыводитьПоУчету") <> Неопределено И ПараметрыПечати.ИмяФормы  = "ЗаданиеНаПересчет" Тогда
					ВыводитьПоУчету = ВыборкаПоШапке.ВыводитьПоУчету;
				КонецЕсли;
				
				Если ВыводитьКоды И ИспользуетсяСправочноеХранение И (ВыводитьУпаковки ИЛИ ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыОснова;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокОснова;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыОснова;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыОснова;
				ИначеЕсли ВыводитьКоды И ИспользуетсяСправочноеХранение И НЕ (ВыводитьУпаковки И ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезУпаковок;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезУпаковок;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезУпаковок;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезУпаковок;
				ИначеЕсли ВыводитьКоды И НЕ ИспользуетсяСправочноеХранение И (ВыводитьУпаковки ИЛИ ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезЯчеек;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезЯчеек;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезЯчеек;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезЯчеек;
				ИначеЕсли ВыводитьКоды И НЕ ИспользуетсяСправочноеХранение И НЕ (ВыводитьУпаковки И ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезЯчеекБезУпаковок;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезЯчеекБезУпаковок;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезЯчеекБезУпаковок;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезЯчеекБезУпаковок;
				ИначеЕсли НЕ ВыводитьКоды И ИспользуетсяСправочноеХранение И (ВыводитьУпаковки ИЛИ ВыводитьПоУчету)  Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезКодов;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезКодов;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезКодов;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезКодов;
				ИначеЕсли НЕ ВыводитьКоды И ИспользуетсяСправочноеХранение И НЕ (ВыводитьУпаковки И ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезУпаковокБезКодов;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезУпаковокБезКодов;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезУпаковокБезКодов;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезУпаковокБезКодов;
				ИначеЕсли НЕ ВыводитьКоды И НЕ ИспользуетсяСправочноеХранение И (ВыводитьУпаковки И ВыводитьПоУчету) Тогда	
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезЯчеекБезКодов;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезЯчеекБезКодов;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезЯчеекБезКодов;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезЯчеекБезКодов;
				ИначеЕсли НЕ ВыводитьКоды И НЕ ИспользуетсяСправочноеХранение И НЕ (ВыводитьУпаковки И ВыводитьПоУчету) Тогда
					ОбластьШапкаТаблицы	  		  =  ОбластьШапкаТаблицыБезЯчеекБезУпаковокБезКодов;
					ОбластьРабочийУчасток		  =  ОбластьРабочийУчастокБезЯчеекБезУпаковокБезКодов;
					ОбластьСтрокаТаблицы	      =  ОбластьСтрокаТаблицыБезЯчеекБезУпаковокБезКодов;
					ОбластьПодвалТаблицы 		  =  ОбластьПодвалТаблицыБезЯчеекБезУпаковокБезКодов;
				КонецЕсли;
				
				ПервыйДокумент 		= Ложь;
				НомерСтрокиНачало 	= ТабличныйДокумент.ВысотаТаблицы + 1;
				ПредставлениеСклада = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоШапке.СкладПредставление,
				ВыборкаПоШапке.ПомещениеПредставление);
				
				РеквизитыДокумента 	= Новый Структура("Номер, Дата, Префикс, Представление");
				ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоШапке);
				РеквизитыДокумента.Представление = ВыборкаПоШапке.СсылкаПредставление;
				
				ПредставлениеРаспоряжения = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента,, Истина);
				
				ОбластьЗаголовок.Параметры.ТекстЗаголовка = НазваниеФормы;
				ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоШапке.Ссылка);
				
				ТабличныйДокумент.Вывести(ОбластьЗаголовок);
				
				ОбластьШапка.Параметры.ПредставлениеСклада 		 = ПредставлениеСклада;
				ОбластьШапка.Параметры.ПредставлениеРаспоряжения = ПредставлениеРаспоряжения;
				
				ТабличныйДокумент.Вывести(ОбластьШапка);
				
				Если ТипЗнч(ВыборкаПоШапке.Ссылка) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
					
					Счетчик = 0;
					ПредставлениеОснований = "";
					ПервоеРаспоряжение = Истина;
					РеквизитыДокумента = Новый Структура("Дата, Номер, Префикс, Представление");
					
					Пока ВыборкаПоРаспоряжениям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоШапке.Ссылка)) Цикл
						
						РеквизитыДокумента.Дата          = ВыборкаПоРаспоряжениям.ОснованиеДата;
						РеквизитыДокумента.Номер         = ВыборкаПоРаспоряжениям.ОснованиеНомер;
						РеквизитыДокумента.Префикс       = "";
						РеквизитыДокумента.Представление = ВыборкаПоРаспоряжениям.ОснованиеПредставление;
						
						ПредставлениеОснования = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
						
						Если Не ПервоеРаспоряжение Тогда
							ПредставлениеОснований = ПредставлениеОснований + ", ";		
						КонецЕсли;
						
						ПервоеРаспоряжение = Ложь;
						
						ПредставлениеОснований = ПредставлениеОснований + ПредставлениеОснования;
						
						Счетчик = Счетчик + 1;
						
					КонецЦикла;
					
					ЗаголовокОснования = "";
					Если Счетчик > 1 Тогда 
						ЗаголовокОснования = НСтр("ru = 'Основания:'");
					Иначе
						ЗаголовокОснования = НСтр("ru = 'Основание:'");
					КонецЕсли;
					
					ОбластьОснование.Параметры.ПредставлениеОснований = ПредставлениеОснований;
					ОбластьОснование.Параметры.Основания = ЗаголовокОснования;
					
					ТабличныйДокумент.Вывести(ОбластьОснование);
					
					Если ВыборкаПоШапке.ОтгрузкаПоЗаданиюНаПеревозку Тогда
						
						РеквизитыДокумента.Дата          = ВыборкаПоШапке.ЗаданиеНаПеревозкуДата;
						РеквизитыДокумента.Номер         = ВыборкаПоШапке.ЗаданиеНаПеревозкуНомер;
						РеквизитыДокумента.Префикс       = "";
						РеквизитыДокумента.Представление = ВыборкаПоШапке.ЗаданиеНаПеревозкуПредставление;
						
						ОбластьЗаданиеНаПеревозку.Параметры.ЗаданиеНаПеревозкуПредставление	= 
						ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента);
						ОбластьЗаданиеНаПеревозку.Параметры.ПорядокДоставки = ВыборкаПоШапке.ПорядокДоставки;
						
						ТабличныйДокумент.Вывести(ОбластьЗаданиеНаПеревозку);
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если ПараметрыПечати.ИмяФормы = "ЗаданиеНаПересчет" Тогда
					ОбластьИсполнитель.Параметры.ИсполнительПредставление = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоШапке.ИсполнительПредставление, РеквизитыДокумента.Дата);
					ТабличныйДокумент.Вывести(ОбластьИсполнитель);
				КонецЕсли;
				
				ВыводитьУчастки = Ложь;
				ВыводитьУчастки = (ВыборкаПоШапке.ИспользованиеРабочихУчастков = Перечисления.ИспользованиеСкладскихРабочихУчастков.Использовать);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
				
				НомерСтроки = 1;
				
				Пока ВыборкаРабочиеУчастки.Следующий() Цикл
					
					Если ВыводитьУчастки И ЗначениеЗаполнено(ВыборкаРабочиеУчастки.РабочийУчасток) Тогда
						ОбластьРабочийУчасток.Параметры.Заполнить(ВыборкаРабочиеУчастки);
						ТабличныйДокумент.Вывести(ОбластьРабочийУчасток);
					КонецЕсли;
					
					ВыборкаНомерСтроки = ВыборкаРабочиеУчастки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаНомерСтроки.Следующий() Цикл
						
						ВыборкаПоТовару = ВыборкаНомерСтроки.Выбрать();
						
						Пока ВыборкаПоТовару.Следующий() Цикл  
							
							Если ВыборкаПоТовару.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
								
								ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоТовару);
								ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
								НомерСтроки = НомерСтроки + 1;
								
								Если ВыводитьКоды Тогда
									ОбластьСтрокаТаблицы.Параметры.Артикул = ВыборкаПоТовару[КолонкаКодов];
								КонецЕсли;
								
								СтруктураПоиска = Новый Структура("Ссылка, Склад, РабочийУчасток, Номенклатура, Характеристика");
								ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоТовару);
								
								СтрокаСерий = "";
								Пока ВыборкаПоСериям.НайтиСледующий(СтруктураПоиска) Цикл 
									СтрокаСерий = СтрокаСерий + ВыборкаПоСериям.ПредставлениеСерии + ", ";
								КонецЦикла;
								
								Если СтрДлина(СтрокаСерий) <> 0 Тогда
									СтрокаСерий = Лев(СтрокаСерий, СтрДлина(СтрокаСерий) - 2);
								КонецЕсли;
								
								ОбластьСтрокаТаблицы.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
									ВыборкаПоТовару.ПредставлениеНоменклатуры,
									ВыборкаПоТовару.ПредставлениеХарактеристики,
									, // Упаковка
									СтрокаСерий);
												
								Если ИспользуетсяСправочноеХранение Тогда
									
									ВыборкаПоТовару.Сбросить();
									
									ДопЯчейки = "";
									Пока ВыборкаПоТовару.Следующий() Цикл	
										ДопЯчейки = ДопЯчейки + ВыборкаПоТовару.ЯчейкаПредставление + Символы.ПС;	
									КонецЦикла;
									ОбластьСтрокаТаблицы.Параметры.ДополнительныеЯчейки = ДопЯчейки;
								КонецЕсли;
								
								ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
								
							Иначе	
								
								ТекНоменклатура   = Неопределено;
								ТекХарактеристика = Неопределено;
								ТекСерия 		  = Неопределено;
								Количество 		  = Неопределено;
								
								Если ВыборкаПоТовару.Номенклатура <> ТекНоменклатура
									И ВыборкаПоТовару.Характеристика <> ТекХарактеристика
									И ВыборкаПоТовару.Серия <> ТекСерия Тогда
									
									Количество 			= ВыборкаПоТовару.Количество;
						
								КонецЕсли;
								
								ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоТовару);
								ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
								НомерСтроки = НомерСтроки + 1;
								
								Если ВыводитьКоды Тогда
									ОбластьСтрокаТаблицы.Параметры.Артикул = ВыборкаПоТовару[КолонкаКодов];
								КонецЕсли;
								
								ОбластьСтрокаТаблицы.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
									?(ЗначениеЗаполнено(ВыборкаПоТовару.Номенклатура), 
										ВыборкаПоТовару.ПредставлениеНоменклатуры, 
										НСтр("ru = '<пустая ячейка>'")),
									ВыборкаПоТовару.ПредставлениеХарактеристики,
									, // Упаковка
									ВыборкаПоТовару.ПредставлениеСерии);	
								
								СтрокаКоличестваУпаковок = "";
								СтрокаИменованийУпаковок = "";
								
								ПредставлениеЕдининицыИзмеренияУпаковки = ВыборкаПоТовару.ПредставлениеБазовойЕдиницыИзмерения;
																								
								Если ИспользуетсяСправочноеХранение Тогда
									
									ДопЯчейки = ВыборкаПоТовару.ЯчейкаПредставление + Символы.ПС;
									СтуктураПоискаТовара = Новый Структура;
									СтуктураПоискаТовара.Вставить("Номенклатура", ВыборкаПоТовару.Номенклатура);
									СтуктураПоискаТовара.Вставить("Характеристика", ВыборкаПоТовару.Характеристика);
									СтуктураПоискаТовара.Вставить("Серия", ВыборкаПоТовару.Серия);
									
									Пока ВыборкаПоТовару.НайтиСледующий(СтуктураПоискаТовара) Цикл	
										ДопЯчейки = ДопЯчейки + ВыборкаПоТовару.ЯчейкаПредставление + Символы.ПС;	
									КонецЦикла;
									ОбластьСтрокаТаблицы.Параметры.ДополнительныеЯчейки = ДопЯчейки;
								КонецЕсли;
								
								Если (ВыводитьУпаковки ИЛИ ВыводитьПоУчету) Тогда 
									Если ПараметрыПечати.ИмяФормы  <> "ЗаданиеНаПересчет" И СтруктураОбъектов.Ключ <> "Документ.ПересчетТоваров" Тогда
										СтруктураПоиска = Новый Структура("Ссылка,Склад,РабочийУчасток,НомерСтроки");
										ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоТовару);
										ВыборкаПоУпаковкам.Сбросить();
										Пока ВыборкаПоУпаковкам.НайтиСледующий(СтруктураПоиска) Цикл
											Если Количество <> Неопределено Тогда
												КоличествоВДокумент = Цел(Количество / ВыборкаПоУпаковкам.КоличествоВУпаковке);
												Если КоличествоВДокумент > 0 Тогда
													СтрокаКоличестваУпаковок = СтрокаКоличестваУпаковок + КоличествоВДокумент + Символы.ПС;
													СтрокаИменованийУпаковок = СтрокаИменованийУпаковок 
														+ ВыборкаПоУпаковкам.ПредставлениеЕдининицыИзмеренияУпаковки 
														+ Символы.ПС;
													Если Количество = КоличествоВДокумент * ВыборкаПоУпаковкам.КоличествоВУпаковке Тогда
														Количество = Неопределено;
													Иначе
														Количество = Количество - КоличествоВДокумент * ВыборкаПоУпаковкам.КоличествоВУпаковке;
													КонецЕсли;
												КонецЕсли;
											КонецЕсли;
										КонецЦикла;
										
										Если Количество <> Неопределено Тогда							
											СтрокаКоличестваУпаковок = СтрокаКоличестваУпаковок + Количество;
											СтрокаИменованийУпаковок = СтрокаИменованийУпаковок + ПредставлениеЕдининицыИзмеренияУпаковки;	
										КонецЕсли;
										ОбластьСтрокаТаблицы.Параметры.КоличествоУпаковок = СтрокаКоличестваУпаковок;
										ОбластьСтрокаТаблицы.Параметры.ПредставлениеЕдининицыИзмеренияУпаковки = СтрокаИменованийУпаковок;
									КонецЕсли;
								КонецЕсли; 											
								ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
				
				// +AI Подписанты
				ПустоеПредставлениеФИО = "/____________________/";
				ФизЛицоОтветственныйПоСкладу = ВыборкаПоШапке.СкладТекущийОтветственный;
				Если ЗначениеЗаполнено(ФизЛицоОтветственныйПоСкладу) Тогда
					ПредставлениеФизЛицаОтветственногоПоСкладу = 
						ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ФизЛицоОтветственныйПоСкладу, ВыборкаПоШапке.Дата);
				Иначе
					ПредставлениеФизЛицаОтветственногоПоСкладу = ПустоеПредставлениеФИО;
				КонецЕсли;
				ОбластьПодписанты.Параметры.КладовщикФИО = ПредставлениеФизЛицаОтветственногоПоСкладу;
				ОбластьПодписанты.Параметры.ПолучилФИО = ПустоеПредставлениеФИО;
				ТабличныйДокумент.Вывести(ОбластьПодписанты);
				// -AI Подписанты
				
				УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
						ТабличныйДокумент,
						НомерСтрокиНачало,
						ОбъектыПечати,
						ВыборкаПоШапке.Ссылка);
				
			КонецЦикла;
		КонецЦикла;
		
		ТекстСообщения = "";
		Если ВыборкаПоШапке.Количество() = 0 И СтруктураОбъектов.Ключ = "Документ.ВводОстатков" Тогда
			Если ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару") Тогда	
				ТекстСообщения = НСтр("ru='Для данного типа операции документа ""Ввод остатков""
					|печать ""%НазваниеФормы%"" не требуется. 
					|Печать возможна только для операций типа ""Собственные товары"", ""Полученные на комиссию товары""  
					|и ""Принятая от поставщиков возвратная тара""'");
			Иначе 
				ТекстСообщения = НСтр("ru='Для данного типа операции документа ""Ввод остатков""
					|печать ""%НазваниеФормы%"" не требуется. 
					|Печать возможна только для операций типа ""Собственные товары"" и ""Полученные на комиссию товары""'");
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НазваниеФормы%",НазваниеФормы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Документ%", ВыборкаПоШапке.СсылкаПредставление);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция получает данные для формирования печатной формы справочного размещения товаров в ячейках.
//
Функция птПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслугТовары.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И РеализацияТоваровУслуг.Дата >= РеализацияТоваровУслугТовары.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтгрузке,
	|	РеализацияТоваровУслуг.Склад.ТекущийОтветственный КАК СкладТекущийОтветственный
	|ПОМЕСТИТЬ СкладыДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Ссылка = РеализацияТоваровУслугТовары.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В(&МассивОбъектов)
	|	И РеализацияТоваровУслугТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	РеализацияТоваровУслугТовары.Склад,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И РеализацияТоваровУслуг.Дата >= РеализацияТоваровУслугТовары.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	РеализацияТоваровУслуг.Склад.ТекущийОтветственный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СкладыДокумента.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СкладыДокумента.Склад) КАК СкладПредставление,
	|	"""" КАК ПомещениеПредставление,
	|	СкладыДокумента.Склад КАК Склад,
	|	СкладыДокумента.Ссылка.Дата КАК Дата,
	|	СкладыДокумента.Ссылка.Номер КАК Номер,
	|	ЛОЖЬ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА СкладыДокумента.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ СкладыДокумента.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ СкладыДокумента.Ссылка.Дата < СкладыДокумента.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	СкладыДокумента.ОрдернаяСхемаПриОтгрузке КАК НарушенаОрдернаяСхема,
	|	СкладыДокумента.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков,
	|	СкладыДокумента.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	СкладыДокумента.СкладТекущийОтветственный КАК СкладТекущийОтветственный
	|ИЗ
	|	СкладыДокумента КАК СкладыДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыДокумента КАК СкладыДокумента
	|		ПО ТаблицаТовары.Ссылка = СкладыДокумента.Ссылка
	|			И ТаблицаТовары.Склад = СкладыДокумента.Склад
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|	И НЕ СкладыДокумента.ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыДокумента КАК СкладыДокумента
	|		ПО ТаблицаСерии.Ссылка = СкладыДокумента.Ссылка
	|			И ТаблицаСерии.Склад = СкладыДокумента.Склад
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ СкладыДокумента.ОрдернаяСхемаПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, ТаблицаТоваровСуммированная.НомерСтроки) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	ЯчейкаПредставление
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И (ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов); 
	МассивРезультатов           = Запрос.ВыполнитьПакет();
	РезультатПоШапке            = МассивРезультатов[1];
	РезультатПоТабличнойЧасти   = МассивРезультатов[4];
	РезультатПоУпаковкам	    = МассивРезультатов[5];
	РезультатПоСериям			= МассивРезультатов[6];
	
	СтруктураДанныхДляПечати    = Новый Структура();
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",          РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам",      РезультатПоУпаковкам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям",         РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

