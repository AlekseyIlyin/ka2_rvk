
&НаСервере
Процедура ОбновитьСписокПечатныхФормОбъекта()

	ПараметрыРегистрации = ЭтотОбъект().СведенияОВнешнейОбработке();
	
	Элементы.СписокПечатныхФормОбъекта.СписокВыбора.Очистить();
	
	Для каждого СтрокаТаблицы Из ПараметрыРегистрации.Команды Цикл
		Элементы.СписокПечатныхФормОбъекта.СписокВыбора.Добавить(СтрокаТаблицы.Идентификатор, СтрокаТаблицы.Представление);
	КонецЦикла;
	
	ПечатнаяФорма = Элементы.СписокПечатныхФормОбъекта.СписокВыбора[0].Значение;
	
КонецПроцедуры //ОбновитьСписокПечатныхФормОбъекта()

Процедура ВыполнитьПечать()
	
	МассивОбъектовНазначения = Новый Массив;
	МассивОбъектовНазначения.Добавить(Объект.СсылкаНаОбъект);
	
	ПараметрыВывода = УправлениеПечатью.ПодготовитьСтруктуруПараметровВывода();
	
	ОбъектыПечати = Новый СписокЗначений;
	
	КоллекцияФорм = УправлениеПечатьюУТСервер.ПодготовитьКоллекциюПечатныхФорм(ПечатнаяФорма);
	
	ЭтотОбъект().Печать(МассивОбъектовНазначения, КоллекцияФорм, ОбъектыПечати, ПараметрыВывода);
	
	ТабличноеПоле.Очистить();
	
	Для каждого СтрокаТаблицы Из КоллекцияФорм Цикл
		Если СтрокаТаблицы.ТабличныйДокумент <> Неопределено Тогда
			ТабличноеПоле = СтрокаТаблицы.ТабличныйДокумент;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьОграниченияТипа()
	
	Попытка
		РегистрационныеДанные = ЭтотОбъект().СведенияОВнешнейОбработке();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Возможно, обработка (отчет) устарела или не является дополнительной:'")
					+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	//Установим заголовок формы
	ЭтаФорма.Заголовок = "Отладка внешних печатных форм: " + РегистрационныеДанные.Наименование;
	
	ВидОбработки = Перечисления.ВидыДополнительныхОтчетовИОбработок[РегистрационныеДанные.Вид];
//	ПолноеНазначениеЗначение = ДополнительныеОтчетыИОбработки.ПолучитьПолноеНазначениеПоВидуДополнительнойВнешнейОбработки(ВидОбработки);
	
	СписокОграниченияТипа = Новый Массив;
	
	Если РегистрационныеДанные.Свойство("Назначение") Тогда
		Для Каждого ЭлементЗаданноеНазначение Из РегистрационныеДанные.Назначение Цикл
			РазделеннаяСтрока = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭлементЗаданноеНазначение, ".");
			Если РазделеннаяСтрока[1] = "*" Тогда
				//НайденныеНазначения = ПолноеНазначениеЗначение.НайтиСтроки(Новый Структура("Класс", РазделеннаяСтрока[0]));
				//Для Каждого ЭлементНайденноеНазначение Из НайденныеНазначения Цикл
				//	СписокОграниченияТипа.Добавить(ЭлементНайденноеНазначение.ПолноеИмяОбъектаМетаданных);
				//КонецЦикла;
			Иначе
				//Если ПолноеНазначениеЗначение.НайтиСтроки(Новый Структура("ПолноеИмяОбъектаМетаданных", ЭлементЗаданноеНазначение)).Количество() > 0 Тогда
				//	СписокОграниченияТипа.Добавить(ЭлементЗаданноеНазначение);
				//КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СписокОграниченияТипа.Количество() > 0 Тогда
		Для А = 0 По СписокОграниченияТипа.Количество() - 1 Цикл
			ЭлементМассива = СписокОграниченияТипа[А];
			ПозицияРазделителя = Найти(ЭлементМассива, ".");
			Если Лев(ЭлементМассива, ПозицияРазделителя - 1) = "Документ" Тогда
				ТипДокумента = Документы[Сред(ЭлементМассива, ПозицияРазделителя + 1)].ПустаяСсылка();
				ЭлементМассива = ТипЗнч(ТипДокумента);
			ИначеЕсли Лев(ЭлементМассива, ПозицияРазделителя - 1) = "Справочник" Тогда
				ТипСправочника = Справочники[Сред(ЭлементМассива, ПозицияРазделителя + 1)].ПустаяСсылка();
				ЭлементМассива = ТипЗнч(ТипСправочника);
			КонецЕсли;
			СписокОграниченияТипа[А] = ЭлементМассива;
		КонецЦикла;
		Элементы.СсылкаНаОбъект.ОграничениеТипа = Новый ОписаниеТипов(СписокОграниченияТипа);
	КонецЕсли; 
	
КонецПроцедуры

// Возвращает экземпляр текущего объекта
//
//
&НаСервере
Функция ЭтотОбъект()

	Обработка = РеквизитФормыВЗначение("Объект");
	Возврат Обработка;

КонецФункции // ЭтотОбъект()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Устанавливаем ограничение типа для поля СсылкаНаОбъект
	УстановитьОграниченияТипа();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОтладку(Команда)
	
	ВыполнитьПечать();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаОбъектПриИзменении(Элемент)
	
	ОбновитьСписокПечатныхФормОбъекта();
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДополнительныеСведения(Команда)
	СоздатьДополнительныеСведенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьДополнительныеСведенияНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПолучитьДополнительныеСведения(Истина);
КонецПроцедуры
