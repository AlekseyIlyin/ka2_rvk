Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.3.27");
	
	МассивНазначений  = Новый Массив;
    ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
    МассивНазначений .Добавить("Документ.ИнвентаризационнаяОпись");
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений );
    ПараметрыРегистрации.Вставить("Наименование", "Инвентаризационная опись");
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    ПараметрыРегистрации.Вставить("Версия", "1.0");    
    ПараметрыРегистрации.Вставить("Информация", "Дополнительная печатная форма 'ИНВ3' к документу инвентаризационная опись");
    
    Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'ИНВ3'");
	Команда.Идентификатор = "ПФ_MXL_ИНВ3_Внешняя";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовКлиентскогоМетода();
	Команда.ПоказыватьОповещение = Истина;
	Команда.Модификатор = "ПечатьMXL";

	
	Возврат ПараметрыРегистрации;

	
КонецФункции

Функция Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыПечати = Новый Структура("ОтображатьСкидки", Ложь);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	ТабличныйДокумент = СформироватьПечатнуюФормуИНВ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуИНВ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИНВ3";
	
	УстановитьПривилегированныйРежим(Истина);
	
	НомерДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
			
		Если СтруктураОбъектов.Ключ <> "Документ.ИнвентаризационнаяОпись" Тогда 
			ТекстСообщения = НСтр("ru = 'Формирование печатной формы ""ИНВ-3"" доступно только для документов ""%ТипДокумента%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДокумента%", Метаданные.Документы.ИнвентаризационнаяОпись.Синоним);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначенияУТ.ПолучитьМодульЛокализации(СтруктураОбъектов.Ключ);
		Если МенеджерОбъекта = Неопределено Тогда
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		КонецЕсли;
		
		Для Каждого ДокументОснование Из СтруктураОбъектов.Значение Цикл
			
			НомерДокумента = НомерДокумента + 1;
			Если НомерДокумента > 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
						
			ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыИНВ3(ПараметрыПечати, ДокументОснование);
			Если НЕ ДанныеДляПечати = Неопределено Тогда
				ЗаполнитьТабличныйДокументИНВ3(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ДокументОснование);
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументИНВ3(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ИнвентаризационнаяОпись)
	
	ТабличныйДокумент.ПолеСверху = 10;
	ТабличныйДокумент.ПолеСлева = 10;
	ТабличныйДокумент.ПолеСнизу = 10;
	ТабличныйДокумент.ПолеСправа = 10;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Шапка = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ТабличнаяЧасть = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать();
	
	Шапка.Следующий();
	СтруктураРеквизитов = Новый Структура("Дата, Склад");
	СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Шапка.Ссылка, СтруктураРеквизитов);
			
	Если ДанныеДляПечати.РезультатКурсВалюты <> Неопределено Тогда
		КурсВалюты = ДанныеДляПечати.РезультатКурсВалюты.Выбрать();
		Если КурсВалюты.Следующий() Тогда
			КоэффициентПересчета = КурсВалюты.КоэффициентПересчета;
		Иначе
			КоэффициентПересчета = 1;
		КонецЕсли;
	Иначе  
		КоэффициентПересчета = 1;		
	КонецЕсли;
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если ТабличнаяЧасть.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='В рамках периода документа ""%Опись%"" не были оформлены складские акты или не было проведено ни одного пересчета товаров. Нет данных для формирования печатной формы ""ИНВ-3""'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Опись%", ИнвентаризационнаяОпись);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ИнвентаризационнаяОпись);
		Возврат;
	КонецЕсли;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	Макет = ПолучитьМакет("ПФ_MXL_ИНВ3_Внешняя");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки = Макет.ПолучитьОбласть("ШапкаТаблицы");     
	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьПодвалОписи = Макет.ПолучитьОбласть("ПодвалОписи");
	
	ОбластьЗаголовок.Параметры.Заполнить(Шапка);
	ОбластьЗаголовок.Параметры.ФормаСобственностиЦенностей = НСтр("ru='в собственности организации'");
	ОбластьЗаголовок.Параметры.ДолжностьМОЛ1  = Шапка.ДолжностьКладовщика;
	ОбластьЗаголовок.Параметры.ФИОМОЛ1        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента);
	ОбластьЗаголовок.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента);
	ОбластьЗаголовок.Параметры.ОснованиеНомер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.ОснованиеНомер);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, Шапка.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	ИтоговыеСуммы = Новый Структура;
	
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоПоСтраницеБухСумма",0);
	
	ИтоговыеСуммы.Вставить("ИтогоФактКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоФактСумма",0);
	ИтоговыеСуммы.Вставить("ИтогоБухКоличество",0);
	ИтоговыеСуммы.Вставить("ИтогоБухСумма",0);
	//>> птДеркач, ++
	ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекКолво", 0);
    ИтоговыеСуммы.Вставить("ИтогоРезультатИзлишекСумма", 0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаКолво", 0);
	ИтоговыеСуммы.Вставить("ИтогоРезультатНедостачаСумма", 0);
	//<< птДеркач, --
	НомерСтроки = 0;
	НомерСтраницы = 2;
	ПервыйНомерСтроки = 1;
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	КоличествоСтрок = ТабличнаяЧасть.Количество();
	
	Пока ТабличнаяЧасть.Следующий() Цикл
				
		ОбластьСтроки.Параметры.Заполнить(ТабличнаяЧасть);
		
		ОбластьСтроки.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		ТабличнаяЧасть.ТоварНаименование,
		ТабличнаяЧасть.ХарактеристикаНаименование,
		ТабличнаяЧасть.СерияНаименование);
		
		//>> птДеркач, ++		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	птПартииТоваровОстаткиИОбороты.Товар КАК Товар,
		 |	птПартииТоваровОстаткиИОбороты.Цена КАК Цена,
		 |	ЕСТЬNULL(птПартииТоваровОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК НачальныйОстаток,
		 |	ЕСТЬNULL(птПартииТоваровОстаткиИОбороты.КоличествоПриход, 0) КАК Приход,
		 |	ЕСТЬNULL(птПартииТоваровОстаткиИОбороты.КоличествоРасход, 0) КАК Расход,
		 |	ЕСТЬNULL(птПартииТоваровОстаткиИОбороты.КоличествоКонечныйОстаток, 0) КАК КонечныйОстаток
		 |ИЗ
		 |	РегистрНакопления.птПартииТоваров.ОстаткиИОбороты(, &КонецПериода, , , ) КАК птПартииТоваровОстаткиИОбороты
		 |ГДЕ
		 |	птПартииТоваровОстаткиИОбороты.Товар.Наименование = &Товар
		 |	И птПартииТоваровОстаткиИОбороты.КоличествоКонечныйОстаток > 0
		 |
		 |УПОРЯДОЧИТЬ ПО
		 |	птПартииТоваровОстаткиИОбороты.Партия.МоментВремени"; 
		Запрос.УстановитьПараметр("Товар", ТабличнаяЧасть.ТоварНаименование);
		//Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Шапка.ДатаДокумента));
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(Шапка.ДатаДокумента));
		РезультатЗапроса = Запрос.Выполнить();
		ТаблицаРезультатов = РезультатЗапроса.Выгрузить();
		//>> птДеркач, --
		
		ОбластьСтроки.Параметры.КоличествоПоУчету = ТабличнаяЧасть.КоличествоПоУчету;
		СуммаПоУчету = 0;
		
		Для Каждого Строка Из ТаблицаРезультатов Цикл
			СуммаПоУчету = СуммаПоУчету + Строка.КонечныйОстаток * Строка.Цена;
		КонецЦикла;
		
		ОбластьСтроки.Параметры.СуммаПоУчету = СуммаПоУчету;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбластьСтроки.Параметры.СуммаФактическая = ТабличнаяЧасть.КоличествоФактическое * Выборка.Цена; 
		КонецЦикла;

		//>> птДеркач, ++
		ОбластьСтроки.Параметры.КоличествоИзлишков = 0;
		ОбластьСтроки.Параметры.КоличествоНедостачи = 0;
		
		КоличествоИзлишков = 0;
		КоличествоНедостачи = 0;
		
		СуммаИзлишков = 0;
		СуммаНедостачи = 0;
		
		ОбластьСтроки.Параметры.СуммаИзлишков = 0;
		ОбластьСтроки.Параметры.СуммаНедостачи = 0;
		
		ОбластьПодвалСтраницы.Параметры.ИтогоРезультатИзлишекКолво = 0;
		ОбластьПодвалСтраницы.Параметры.ИтогоРезультатНедостачаКолво = 0;
		
		ОбластьПодвалСтраницы.Параметры.ИтогоРезультатИзлишекСумма = 0;
		ОбластьПодвалСтраницы.Параметры.ИтогоРезультатНедостачаСумма = 0;
		
		ФактическоеКоличество = ТабличнаяЧасть.КоличествоФактическое;
		УчетноеКоличетво = ТабличнаяЧасть.КоличествоПоУчету;
				
		Если ФактическоеКоличество > УчетноеКоличетво Тогда
			
			КоличествоИзлишков =  ФактическоеКоличество - УчетноеКоличетво;
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЦенаИзлишков = Выборка.Цена;
			КонецЦикла;
		    СуммаИзлишков = ЦенаИзлишков * КоличествоИзлишков;

			
			ОбластьСтроки.Параметры.КоличествоИзлишков = КоличествоИзлишков; 
			ОбластьСтроки.Параметры.СуммаИзлишков = СуммаИзлишков; 
			
		Иначе
			Если  ФактическоеКоличество < УчетноеКоличетво Тогда
				
				КоличествоНедостачи = УчетноеКоличетво - ФактическоеКоличество;
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					ЦенаНедостачи = Выборка.Цена;
				КонецЦикла;
			    СуммаНедостачи = ЦенаНедостачи * КоличествоНедостачи;
				
				ОбластьСтроки.Параметры.КоличествоНедостачи = КоличествоНедостачи;
				ОбластьСтроки.Параметры.СуммаНедостачи = СуммаНедостачи;
				
			Иначе
				Если ФактическоеКоличество = УчетноеКоличетво Тогда
					Продолжить;	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
		
		//<< птДеркач, --
		
		НомерСтроки = НомерСтроки + 1;
		
		
		Если НомерСтроки = 1 Тогда // первая строка
			
			ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
			ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",2);
			ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
			
			ТабличныйДокумент.Вывести(ОбластьШапки);
			
		Иначе
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьСтроки);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтраницы);
			
			Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьПодвалСтраницы.Параметры.Заполнить(ИтоговыеСуммы);
				//ОбластьПодвалСтраницы.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(НомерСтроки - ПервыйНомерСтроки, ,",,,,,,,,0");
				//ОбластьПодвалСтраницы.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество);
				//ОбластьПодвалСтраницы.Параметры.СуммаФактическиНаСтраницеПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(
				//	ИтоговыеСуммы.ИтогоПоСтраницеФактСумма,
				//	ВалютаРеглУчета,
				//	Ложь);
				
				ПервыйНомерСтроки = НомерСтроки;
				
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				
				// Очистим итоги по странице.
				ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = 0;
				ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
				ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы);
				ОбластьШапки.Параметры.НомерСтраницы = ТекстСтраница;
				ТабличныйДокумент.Вывести(ОбластьШапки);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество = ИтоговыеСуммы.ИтогоПоСтраницеФактКоличество + ТабличнаяЧасть.КоличествоФактическое;
		//>> птДеркач, ++ Вместо ТабличнаяЧасть.*НазваниеПараметраПоМакету использовал Выборка.*НазваниеПоля здесь и далее	
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Цена = Выборка.Цена;
		КонецЦикла;
		ИтоговыеСуммы.ИтогоПоСтраницеФактСумма = ИтоговыеСуммы.ИтогоПоСтраницеФактСумма + ТабличнаяЧасть.КоличествоФактическое * Цена;
		
		
		ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество = ИтоговыеСуммы.ИтогоПоСтраницеБухКоличество + ТабличнаяЧасть.КоличествоПоУчету;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИтоговыеСуммы.ИтогоПоСтраницеБухСумма = ИтоговыеСуммы.ИтогоПоСтраницеБухСумма + Выборка.КонечныйОстаток * Выборка.Цена;
		КонецЦикла;
		//<< птДеркач, --
		
		//>> птДеркач, ++
		ИтоговыеСуммы.ИтогоРезультатИзлишекКолво = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво + КоличествоИзлишков;
		ИтоговыеСуммы.ИтогоРезультатИзлишекСумма = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма + СуммаИзлишков;
		ИтоговыеСуммы.ИтогоРезультатНедостачаКолво = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво + КоличествоНедостачи; 
		ИтоговыеСуммы.ИтогоРезультатНедостачаСумма =  ИтоговыеСуммы.ИтогоРезультатНедостачаСумма + СуммаНедостачи;
		//<< птДеркач, --
		
		ИтоговыеСуммы.ИтогоФактКоличество = ИтоговыеСуммы.ИтогоФактКоличество + ТабличнаяЧасть.КоличествоФактическое;
		ИтоговыеСуммы.ИтогоФактСумма = ИтоговыеСуммы.ИтогоФактСумма + ТабличнаяЧасть.СуммаФактическая * КоэффициентПересчета;
		ИтоговыеСуммы.ИтогоБухКоличество = ИтоговыеСуммы.ИтогоБухКоличество + ТабличнаяЧасть.КоличествоПоУчету;
		//>> птДеркач, ++
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИтоговыеСуммы.ИтогоБухСумма = ИтоговыеСуммы.ИтогоБухСумма + Выборка.КонечныйОстаток * Выборка.Цена;
		КонецЦикла;
		//<< птДеркач, --
		
	КонецЦикла;
	
	Если ПервыйНомерСтроки <> НомерСтроки ИЛИ ПервыйНомерСтроки = ТабличнаяЧасть.Количество() Тогда
		
		ОбластьПодвалОписи.Параметры.ОбщееКоличествоНедостачиНаСтранице      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво;		 
		ОбластьПодвалОписи.Параметры.ОбщееКоличествоИзлишковНаСтранице		 = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво;
		ОбластьПодвалОписи.Параметры.ОбщаяСуммаНедостачиНаСтранице     		 = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма;
		ОбластьПодвалОписи.Параметры.ОбщаяСуммаИзлишковНаСтранице			 = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
		
	КонецЕсли;
	
	ОбластьПодвалОписи.Параметры.ОбщееКоличествоНедостачиНаСтранице      = ИтоговыеСуммы.ИтогоРезультатНедостачаКолво;		 
	ОбластьПодвалОписи.Параметры.ОбщееКоличествоИзлишковНаСтранице		 = ИтоговыеСуммы.ИтогоРезультатИзлишекКолво;
	ОбластьПодвалОписи.Параметры.ОбщаяСуммаНедостачиНаСтранице     		 = ИтоговыеСуммы.ИтогоРезультатНедостачаСумма;
	ОбластьПодвалОписи.Параметры.ОбщаяСуммаИзлишковНаСтранице			 = ИтоговыеСуммы.ИтогоРезультатИзлишекСумма;
	
	ОбластьПодвалОписи.Параметры.НачальныйНомерПоПорядку = 1;
	ОбластьПодвалОписи.Параметры.КонечныйНомерПоПорядку	 = НомерСтроки;
	
	ОбластьПодвалОписи.Параметры.ДолжностьПредседателя	 = Шапка.ДолжностьРуководителя;
	ОбластьПодвалОписи.Параметры.ФИОпредседателя     	 = Шапка.Руководитель;
	
	ОбластьПодвалОписи.Параметры.ДолжностьЧленаКомиссии2 = НСтр("ru='Главный бухгалтер'");
	ОбластьПодвалОписи.Параметры.ФИОЧленаКомиссии2       = Шапка.ГлавныйБухгалтер;
	
	ОбластьПодвалОписи.Параметры.ДолжностьМОЛ1           = Шапка.ДолжностьКладовщика;
	ОбластьПодвалОписи.Параметры.ФИОМОЛ1                 = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.Кладовщик, Шапка.ДатаДокумента);
	
	ОбластьПодвалОписи.Параметры.ДолжностьРасчетчика	 = НСтр("ru='Главный бухгалтер'");
	ОбластьПодвалОписи.Параметры.ФИОРасчетчика		     = Шапка.ГлавныйБухгалтер;
	
	ТекстСтраница = НСтр("ru='Страница %НомерСтраницы%'");
	ТекстСтраница = СтрЗаменить(ТекстСтраница,"%НомерСтраницы%",НомерСтраницы + 1);
	ОбластьПодвалОписи.Параметры.НомерСтраницы = ТекстСтраница;
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабличныйДокумент.Вывести(ОбластьПодвалОписи);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
КонецПроцедуры
